import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list24, (int) (short) 0);
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list29, 100);
        int[] intArray33 = new int[] { (byte) 10 };
        List list34 = AppendPairProgram.listgen(intArray33);
        appendPairProgram0.TestStudentSubmission(list34, (-1));
        int[] intArray37 = new int[] {};
        List list38 = AppendPairProgram.listgen(intArray37);
        List list39 = AppendPairProgram.listgen(intArray37);
        List list40 = AppendPairProgram.listgen(intArray37);
        List list41 = AppendPairProgram.listgen(intArray37);
        List list42 = AppendPairProgram.listgen(intArray37);
        List list43 = AppendPairProgram.listgen(intArray37);
        List list44 = AppendPairProgram.listgen(intArray37);
        List list45 = AppendPairProgram.listgen(intArray37);
        List list46 = AppendPairProgram.listgen(intArray37);
        List list47 = AppendPairProgram.listgen(intArray37);
        List list48 = AppendPairProgram.listgen(intArray37);
        List list49 = AppendPairProgram.listgen(intArray37);
        List list50 = AppendPairProgram.listgen(intArray37);
        List list51 = AppendPairProgram.listgen(intArray37);
        appendPairProgram0.TestStudentSubmission(list51, (int) (short) 100);
        int[] intArray55 = new int[] { (byte) 10 };
        List list56 = AppendPairProgram.listgen(intArray55);
        List list57 = AppendPairProgram.listgen(intArray55);
        List list58 = AppendPairProgram.listgen(intArray55);
        List list59 = AppendPairProgram.listgen(intArray55);
        appendPairProgram0.TestStudentSubmission(list59, (int) (byte) 0);
        List list62 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list62, (int) 'a');
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10]");
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[]");
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[10]");
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        int[] intArray6 = new int[] { 'a', (byte) 100, 0, (byte) 10, '4', 100 };
        List list7 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass8 = list7.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[97, 100, 0, 10, 52, 100]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        int[] intArray5 = new int[] { (-1), 100, (short) 0, (byte) 100, (short) 100 };
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        java.lang.Class<?> wildcardClass9 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 0, 100, 100]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        List list7 = AppendPairProgram.listgen(intArray1);
        List list8 = AppendPairProgram.listgen(intArray1);
        List list9 = AppendPairProgram.listgen(intArray1);
        List list10 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list10, (int) (byte) 10);
        int[] intArray14 = new int[] { 0 };
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) ' ');
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        List list24 = AppendPairProgram.listgen(intArray19);
        List list25 = AppendPairProgram.listgen(intArray19);
        List list26 = AppendPairProgram.listgen(intArray19);
        List list27 = AppendPairProgram.listgen(intArray19);
        List list28 = AppendPairProgram.listgen(intArray19);
        List list29 = AppendPairProgram.listgen(intArray19);
        List list30 = AppendPairProgram.listgen(intArray19);
        List list31 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list31, (int) '#');
        java.lang.Class<?> wildcardClass34 = list31.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, (int) '4');
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list26, (int) (byte) 1);
        int[] intArray30 = new int[] { 0 };
        List list31 = AppendPairProgram.listgen(intArray30);
        List list32 = AppendPairProgram.listgen(intArray30);
        appendPairProgram0.TestStudentSubmission(list32, (int) 'a');
        int[] intArray35 = new int[] {};
        List list36 = AppendPairProgram.listgen(intArray35);
        List list37 = AppendPairProgram.listgen(intArray35);
        List list38 = AppendPairProgram.listgen(intArray35);
        List list39 = AppendPairProgram.listgen(intArray35);
        List list40 = AppendPairProgram.listgen(intArray35);
        List list41 = AppendPairProgram.listgen(intArray35);
        List list42 = AppendPairProgram.listgen(intArray35);
        List list43 = AppendPairProgram.listgen(intArray35);
        List list44 = AppendPairProgram.listgen(intArray35);
        appendPairProgram0.TestStudentSubmission(list44, (int) '#');
        java.lang.Class<?> wildcardClass47 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0]");
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[]");
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, 1);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list22, (int) (short) 1);
        int[] intArray25 = new int[] {};
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        List list31 = AppendPairProgram.listgen(intArray25);
        List list32 = AppendPairProgram.listgen(intArray25);
        List list33 = AppendPairProgram.listgen(intArray25);
        List list34 = AppendPairProgram.listgen(intArray25);
        List list35 = AppendPairProgram.listgen(intArray25);
        List list36 = AppendPairProgram.listgen(intArray25);
        List list37 = AppendPairProgram.listgen(intArray25);
        List list38 = AppendPairProgram.listgen(intArray25);
        List list39 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list39, (int) '#');
        int[] intArray42 = new int[] {};
        List list43 = AppendPairProgram.listgen(intArray42);
        List list44 = AppendPairProgram.listgen(intArray42);
        List list45 = AppendPairProgram.listgen(intArray42);
        List list46 = AppendPairProgram.listgen(intArray42);
        List list47 = AppendPairProgram.listgen(intArray42);
        List list48 = AppendPairProgram.listgen(intArray42);
        List list49 = AppendPairProgram.listgen(intArray42);
        List list50 = AppendPairProgram.listgen(intArray42);
        List list51 = AppendPairProgram.listgen(intArray42);
        appendPairProgram0.TestStudentSubmission(list51, (int) 'a');
        int[] intArray55 = new int[] { 0 };
        List list56 = AppendPairProgram.listgen(intArray55);
        List list57 = AppendPairProgram.listgen(intArray55);
        List list58 = AppendPairProgram.listgen(intArray55);
        List list59 = AppendPairProgram.listgen(intArray55);
        List list60 = AppendPairProgram.listgen(intArray55);
        List list61 = AppendPairProgram.listgen(intArray55);
        List list62 = AppendPairProgram.listgen(intArray55);
        List list63 = AppendPairProgram.listgen(intArray55);
        appendPairProgram0.TestStudentSubmission(list63, (int) ' ');
        List list66 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list66, (int) 'a');
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]");
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0]");
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(list61);
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(list63);
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        int[] intArray3 = new int[] { 0, '#', (short) -1 };
        List list4 = AppendPairProgram.listgen(intArray3);
        List list5 = AppendPairProgram.listgen(intArray3);
        List list6 = AppendPairProgram.listgen(intArray3);
        List list7 = AppendPairProgram.listgen(intArray3);
        List list8 = AppendPairProgram.listgen(intArray3);
        List list9 = AppendPairProgram.listgen(intArray3);
        List list10 = AppendPairProgram.listgen(intArray3);
        List list11 = AppendPairProgram.listgen(intArray3);
        List list12 = AppendPairProgram.listgen(intArray3);
        List list13 = AppendPairProgram.listgen(intArray3);
        List list14 = AppendPairProgram.listgen(intArray3);
        List list15 = AppendPairProgram.listgen(intArray3);
        List list16 = AppendPairProgram.listgen(intArray3);
        List list17 = AppendPairProgram.listgen(intArray3);
        List list18 = AppendPairProgram.listgen(intArray3);
        java.lang.Class<?> wildcardClass19 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[0, 35, -1]");
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray16 = new int[] { (byte) 10 };
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list18, (int) (byte) -1);
        int[] intArray21 = new int[] {};
        List list22 = AppendPairProgram.listgen(intArray21);
        List list23 = AppendPairProgram.listgen(intArray21);
        List list24 = AppendPairProgram.listgen(intArray21);
        List list25 = AppendPairProgram.listgen(intArray21);
        List list26 = AppendPairProgram.listgen(intArray21);
        List list27 = AppendPairProgram.listgen(intArray21);
        List list28 = AppendPairProgram.listgen(intArray21);
        List list29 = AppendPairProgram.listgen(intArray21);
        List list30 = AppendPairProgram.listgen(intArray21);
        appendPairProgram0.TestStudentSubmission(list30, (int) (short) -1);
        int[] intArray33 = new int[] {};
        List list34 = AppendPairProgram.listgen(intArray33);
        List list35 = AppendPairProgram.listgen(intArray33);
        List list36 = AppendPairProgram.listgen(intArray33);
        List list37 = AppendPairProgram.listgen(intArray33);
        List list38 = AppendPairProgram.listgen(intArray33);
        List list39 = AppendPairProgram.listgen(intArray33);
        List list40 = AppendPairProgram.listgen(intArray33);
        List list41 = AppendPairProgram.listgen(intArray33);
        List list42 = AppendPairProgram.listgen(intArray33);
        List list43 = AppendPairProgram.listgen(intArray33);
        List list44 = AppendPairProgram.listgen(intArray33);
        List list45 = AppendPairProgram.listgen(intArray33);
        List list46 = AppendPairProgram.listgen(intArray33);
        List list47 = AppendPairProgram.listgen(intArray33);
        List list48 = AppendPairProgram.listgen(intArray33);
        List list49 = AppendPairProgram.listgen(intArray33);
        appendPairProgram0.TestStudentSubmission(list49, 0);
        int[] intArray53 = new int[] { (byte) 10 };
        List list54 = AppendPairProgram.listgen(intArray53);
        appendPairProgram0.TestStudentSubmission(list54, (int) (byte) -1);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]");
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[10]");
        org.junit.Assert.assertNotNull(list54);
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, (int) (byte) 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list8, (int) (byte) 100);
        int[] intArray12 = new int[] { 0 };
        List list13 = AppendPairProgram.listgen(intArray12);
        appendPairProgram0.TestStudentSubmission(list13, (int) (byte) 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        List list27 = AppendPairProgram.listgen(intArray16);
        List list28 = AppendPairProgram.listgen(intArray16);
        List list29 = AppendPairProgram.listgen(intArray16);
        List list30 = AppendPairProgram.listgen(intArray16);
        List list31 = AppendPairProgram.listgen(intArray16);
        List list32 = AppendPairProgram.listgen(intArray16);
        List list33 = AppendPairProgram.listgen(intArray16);
        List list34 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list34, (int) (short) 0);
        java.lang.Class<?> wildcardClass37 = list34.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0]");
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        int[] intArray2 = new int[] { 10, (byte) 0 };
        List list3 = AppendPairProgram.listgen(intArray2);
        List list4 = AppendPairProgram.listgen(intArray2);
        List list5 = AppendPairProgram.listgen(intArray2);
        List list6 = AppendPairProgram.listgen(intArray2);
        List list7 = AppendPairProgram.listgen(intArray2);
        List list8 = AppendPairProgram.listgen(intArray2);
        List list9 = AppendPairProgram.listgen(intArray2);
        List list10 = AppendPairProgram.listgen(intArray2);
        List list11 = AppendPairProgram.listgen(intArray2);
        List list12 = AppendPairProgram.listgen(intArray2);
        List list13 = AppendPairProgram.listgen(intArray2);
        List list14 = AppendPairProgram.listgen(intArray2);
        List list15 = AppendPairProgram.listgen(intArray2);
        List list16 = AppendPairProgram.listgen(intArray2);
        java.lang.Class<?> wildcardClass17 = list16.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[10, 0]");
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        int[] intArray6 = new int[] { (short) -1, '#', '4', (short) -1, (short) 100, (byte) -1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass21 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 35, 52, -1, 100, -1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, 1);
        int[] intArray17 = new int[] { (byte) 10 };
        List list18 = AppendPairProgram.listgen(intArray17);
        List list19 = AppendPairProgram.listgen(intArray17);
        List list20 = AppendPairProgram.listgen(intArray17);
        List list21 = AppendPairProgram.listgen(intArray17);
        List list22 = AppendPairProgram.listgen(intArray17);
        List list23 = AppendPairProgram.listgen(intArray17);
        List list24 = AppendPairProgram.listgen(intArray17);
        List list25 = AppendPairProgram.listgen(intArray17);
        appendPairProgram0.TestStudentSubmission(list25, (int) (short) 0);
        int[] intArray29 = new int[] { (byte) 10 };
        List list30 = AppendPairProgram.listgen(intArray29);
        List list31 = AppendPairProgram.listgen(intArray29);
        appendPairProgram0.TestStudentSubmission(list31, (-1));
        int[] intArray35 = new int[] { (byte) 10 };
        List list36 = AppendPairProgram.listgen(intArray35);
        List list37 = AppendPairProgram.listgen(intArray35);
        List list38 = AppendPairProgram.listgen(intArray35);
        List list39 = AppendPairProgram.listgen(intArray35);
        List list40 = AppendPairProgram.listgen(intArray35);
        List list41 = AppendPairProgram.listgen(intArray35);
        List list42 = AppendPairProgram.listgen(intArray35);
        List list43 = AppendPairProgram.listgen(intArray35);
        appendPairProgram0.TestStudentSubmission(list43, (int) (short) -1);
        int[] intArray46 = new int[] {};
        List list47 = AppendPairProgram.listgen(intArray46);
        List list48 = AppendPairProgram.listgen(intArray46);
        List list49 = AppendPairProgram.listgen(intArray46);
        List list50 = AppendPairProgram.listgen(intArray46);
        List list51 = AppendPairProgram.listgen(intArray46);
        List list52 = AppendPairProgram.listgen(intArray46);
        List list53 = AppendPairProgram.listgen(intArray46);
        List list54 = AppendPairProgram.listgen(intArray46);
        List list55 = AppendPairProgram.listgen(intArray46);
        List list56 = AppendPairProgram.listgen(intArray46);
        List list57 = AppendPairProgram.listgen(intArray46);
        List list58 = AppendPairProgram.listgen(intArray46);
        List list59 = AppendPairProgram.listgen(intArray46);
        List list60 = AppendPairProgram.listgen(intArray46);
        List list61 = AppendPairProgram.listgen(intArray46);
        List list62 = AppendPairProgram.listgen(intArray46);
        appendPairProgram0.TestStudentSubmission(list62, (-1));
        int[] intArray66 = new int[] { (byte) 10 };
        List list67 = AppendPairProgram.listgen(intArray66);
        appendPairProgram0.TestStudentSubmission(list67, (-1));
        java.lang.Class<?> wildcardClass70 = list67.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10]");
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10]");
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[10]");
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(list61);
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[10]");
        org.junit.Assert.assertNotNull(list67);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        int[] intArray4 = new int[] { 'a', (byte) -1, 100, (byte) 10 };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        List list7 = AppendPairProgram.listgen(intArray4);
        List list8 = AppendPairProgram.listgen(intArray4);
        List list9 = AppendPairProgram.listgen(intArray4);
        List list10 = AppendPairProgram.listgen(intArray4);
        List list11 = AppendPairProgram.listgen(intArray4);
        List list12 = AppendPairProgram.listgen(intArray4);
        List list13 = AppendPairProgram.listgen(intArray4);
        java.lang.Class<?> wildcardClass14 = list13.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[97, -1, 100, 10]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray17 = new int[] { (byte) 10 };
        List list18 = AppendPairProgram.listgen(intArray17);
        List list19 = AppendPairProgram.listgen(intArray17);
        List list20 = AppendPairProgram.listgen(intArray17);
        List list21 = AppendPairProgram.listgen(intArray17);
        List list22 = AppendPairProgram.listgen(intArray17);
        List list23 = AppendPairProgram.listgen(intArray17);
        List list24 = AppendPairProgram.listgen(intArray17);
        List list25 = AppendPairProgram.listgen(intArray17);
        appendPairProgram0.TestStudentSubmission(list25, (int) (byte) 100);
        int[] intArray29 = new int[] { (byte) 10 };
        List list30 = AppendPairProgram.listgen(intArray29);
        List list31 = AppendPairProgram.listgen(intArray29);
        List list32 = AppendPairProgram.listgen(intArray29);
        List list33 = AppendPairProgram.listgen(intArray29);
        List list34 = AppendPairProgram.listgen(intArray29);
        List list35 = AppendPairProgram.listgen(intArray29);
        List list36 = AppendPairProgram.listgen(intArray29);
        List list37 = AppendPairProgram.listgen(intArray29);
        List list38 = AppendPairProgram.listgen(intArray29);
        List list39 = AppendPairProgram.listgen(intArray29);
        List list40 = AppendPairProgram.listgen(intArray29);
        List list41 = AppendPairProgram.listgen(intArray29);
        List list42 = AppendPairProgram.listgen(intArray29);
        List list43 = AppendPairProgram.listgen(intArray29);
        appendPairProgram0.TestStudentSubmission(list43, 10);
        int[] intArray47 = new int[] { 0 };
        List list48 = AppendPairProgram.listgen(intArray47);
        List list49 = AppendPairProgram.listgen(intArray47);
        List list50 = AppendPairProgram.listgen(intArray47);
        List list51 = AppendPairProgram.listgen(intArray47);
        List list52 = AppendPairProgram.listgen(intArray47);
        List list53 = AppendPairProgram.listgen(intArray47);
        appendPairProgram0.TestStudentSubmission(list53, (int) (byte) 100);
        java.lang.Class<?> wildcardClass56 = list53.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10]");
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10]");
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0]");
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) -1);
        int[] intArray14 = new int[] {};
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 10);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list23, (int) (byte) 0);
        int[] intArray26 = new int[] {};
        List list27 = AppendPairProgram.listgen(intArray26);
        List list28 = AppendPairProgram.listgen(intArray26);
        List list29 = AppendPairProgram.listgen(intArray26);
        List list30 = AppendPairProgram.listgen(intArray26);
        List list31 = AppendPairProgram.listgen(intArray26);
        List list32 = AppendPairProgram.listgen(intArray26);
        appendPairProgram0.TestStudentSubmission(list32, 100);
        int[] intArray36 = new int[] { (byte) 10 };
        List list37 = AppendPairProgram.listgen(intArray36);
        List list38 = AppendPairProgram.listgen(intArray36);
        List list39 = AppendPairProgram.listgen(intArray36);
        List list40 = AppendPairProgram.listgen(intArray36);
        List list41 = AppendPairProgram.listgen(intArray36);
        List list42 = AppendPairProgram.listgen(intArray36);
        List list43 = AppendPairProgram.listgen(intArray36);
        appendPairProgram0.TestStudentSubmission(list43, 100);
        int[] intArray47 = new int[] { (byte) 10 };
        List list48 = AppendPairProgram.listgen(intArray47);
        appendPairProgram0.TestStudentSubmission(list48, (int) (byte) 0);
        int[] intArray52 = new int[] { (byte) 10 };
        List list53 = AppendPairProgram.listgen(intArray52);
        List list54 = AppendPairProgram.listgen(intArray52);
        List list55 = AppendPairProgram.listgen(intArray52);
        List list56 = AppendPairProgram.listgen(intArray52);
        List list57 = AppendPairProgram.listgen(intArray52);
        List list58 = AppendPairProgram.listgen(intArray52);
        appendPairProgram0.TestStudentSubmission(list58, (int) (byte) 10);
        java.lang.Class<?> wildcardClass61 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[10]");
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10]");
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[10]");
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, 1);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list22, (int) (short) 1);
        int[] intArray25 = new int[] {};
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        List list31 = AppendPairProgram.listgen(intArray25);
        List list32 = AppendPairProgram.listgen(intArray25);
        List list33 = AppendPairProgram.listgen(intArray25);
        List list34 = AppendPairProgram.listgen(intArray25);
        List list35 = AppendPairProgram.listgen(intArray25);
        List list36 = AppendPairProgram.listgen(intArray25);
        List list37 = AppendPairProgram.listgen(intArray25);
        List list38 = AppendPairProgram.listgen(intArray25);
        List list39 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list39, (int) '#');
        int[] intArray42 = new int[] {};
        List list43 = AppendPairProgram.listgen(intArray42);
        List list44 = AppendPairProgram.listgen(intArray42);
        List list45 = AppendPairProgram.listgen(intArray42);
        List list46 = AppendPairProgram.listgen(intArray42);
        List list47 = AppendPairProgram.listgen(intArray42);
        List list48 = AppendPairProgram.listgen(intArray42);
        List list49 = AppendPairProgram.listgen(intArray42);
        List list50 = AppendPairProgram.listgen(intArray42);
        List list51 = AppendPairProgram.listgen(intArray42);
        appendPairProgram0.TestStudentSubmission(list51, (int) 'a');
        int[] intArray55 = new int[] { (byte) 10 };
        List list56 = AppendPairProgram.listgen(intArray55);
        List list57 = AppendPairProgram.listgen(intArray55);
        List list58 = AppendPairProgram.listgen(intArray55);
        appendPairProgram0.TestStudentSubmission(list58, (int) '4');
        int[] intArray61 = new int[] {};
        List list62 = AppendPairProgram.listgen(intArray61);
        List list63 = AppendPairProgram.listgen(intArray61);
        List list64 = AppendPairProgram.listgen(intArray61);
        List list65 = AppendPairProgram.listgen(intArray61);
        List list66 = AppendPairProgram.listgen(intArray61);
        List list67 = AppendPairProgram.listgen(intArray61);
        List list68 = AppendPairProgram.listgen(intArray61);
        List list69 = AppendPairProgram.listgen(intArray61);
        List list70 = AppendPairProgram.listgen(intArray61);
        List list71 = AppendPairProgram.listgen(intArray61);
        List list72 = AppendPairProgram.listgen(intArray61);
        List list73 = AppendPairProgram.listgen(intArray61);
        List list74 = AppendPairProgram.listgen(intArray61);
        List list75 = AppendPairProgram.listgen(intArray61);
        List list76 = AppendPairProgram.listgen(intArray61);
        List list77 = AppendPairProgram.listgen(intArray61);
        appendPairProgram0.TestStudentSubmission(list77, (int) (short) 10);
        int[] intArray81 = new int[] { (short) -1 };
        List list82 = AppendPairProgram.listgen(intArray81);
        List list83 = AppendPairProgram.listgen(intArray81);
        List list84 = AppendPairProgram.listgen(intArray81);
        appendPairProgram0.TestStudentSubmission(list84, (int) (short) 10);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]");
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[10]");
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[]");
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(list63);
        org.junit.Assert.assertNotNull(list64);
        org.junit.Assert.assertNotNull(list65);
        org.junit.Assert.assertNotNull(list66);
        org.junit.Assert.assertNotNull(list67);
        org.junit.Assert.assertNotNull(list68);
        org.junit.Assert.assertNotNull(list69);
        org.junit.Assert.assertNotNull(list70);
        org.junit.Assert.assertNotNull(list71);
        org.junit.Assert.assertNotNull(list72);
        org.junit.Assert.assertNotNull(list73);
        org.junit.Assert.assertNotNull(list74);
        org.junit.Assert.assertNotNull(list75);
        org.junit.Assert.assertNotNull(list76);
        org.junit.Assert.assertNotNull(list77);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1]");
        org.junit.Assert.assertNotNull(list82);
        org.junit.Assert.assertNotNull(list83);
        org.junit.Assert.assertNotNull(list84);
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray7 = new int[] { (byte) 10 };
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list11, (int) (short) 1);
        int[] intArray14 = new int[] {};
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        List list17 = AppendPairProgram.listgen(intArray14);
        List list18 = AppendPairProgram.listgen(intArray14);
        List list19 = AppendPairProgram.listgen(intArray14);
        List list20 = AppendPairProgram.listgen(intArray14);
        List list21 = AppendPairProgram.listgen(intArray14);
        List list22 = AppendPairProgram.listgen(intArray14);
        List list23 = AppendPairProgram.listgen(intArray14);
        List list24 = AppendPairProgram.listgen(intArray14);
        List list25 = AppendPairProgram.listgen(intArray14);
        List list26 = AppendPairProgram.listgen(intArray14);
        List list27 = AppendPairProgram.listgen(intArray14);
        List list28 = AppendPairProgram.listgen(intArray14);
        List list29 = AppendPairProgram.listgen(intArray14);
        List list30 = AppendPairProgram.listgen(intArray14);
        List list31 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list31, (int) '4');
        java.lang.Class<?> wildcardClass34 = list31.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray16 = new int[] { (byte) 10 };
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list22, (int) (byte) 0);
        int[] intArray26 = new int[] { (byte) 10 };
        List list27 = AppendPairProgram.listgen(intArray26);
        List list28 = AppendPairProgram.listgen(intArray26);
        List list29 = AppendPairProgram.listgen(intArray26);
        List list30 = AppendPairProgram.listgen(intArray26);
        List list31 = AppendPairProgram.listgen(intArray26);
        List list32 = AppendPairProgram.listgen(intArray26);
        appendPairProgram0.TestStudentSubmission(list32, 100);
        java.lang.Class<?> wildcardClass35 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10]");
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        int[] intArray6 = new int[] { (short) -1, '#', '4', (short) -1, (short) 100, (byte) -1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        List list25 = AppendPairProgram.listgen(intArray6);
        List list26 = AppendPairProgram.listgen(intArray6);
        List list27 = AppendPairProgram.listgen(intArray6);
        List list28 = AppendPairProgram.listgen(intArray6);
        List list29 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass30 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 35, 52, -1, 100, -1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray16 = new int[] { (byte) 10 };
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list22, (int) (byte) 0);
        int[] intArray25 = new int[] {};
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list30, 0);
        int[] intArray34 = new int[] { (byte) 10 };
        List list35 = AppendPairProgram.listgen(intArray34);
        List list36 = AppendPairProgram.listgen(intArray34);
        List list37 = AppendPairProgram.listgen(intArray34);
        List list38 = AppendPairProgram.listgen(intArray34);
        List list39 = AppendPairProgram.listgen(intArray34);
        List list40 = AppendPairProgram.listgen(intArray34);
        List list41 = AppendPairProgram.listgen(intArray34);
        List list42 = AppendPairProgram.listgen(intArray34);
        List list43 = AppendPairProgram.listgen(intArray34);
        List list44 = AppendPairProgram.listgen(intArray34);
        List list45 = AppendPairProgram.listgen(intArray34);
        List list46 = AppendPairProgram.listgen(intArray34);
        appendPairProgram0.TestStudentSubmission(list46, 0);
        java.lang.Class<?> wildcardClass49 = list46.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[10]");
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        List list9 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list9, (int) (short) -1);
        int[] intArray13 = new int[] { (byte) 10 };
        List list14 = AppendPairProgram.listgen(intArray13);
        List list15 = AppendPairProgram.listgen(intArray13);
        List list16 = AppendPairProgram.listgen(intArray13);
        List list17 = AppendPairProgram.listgen(intArray13);
        List list18 = AppendPairProgram.listgen(intArray13);
        List list19 = AppendPairProgram.listgen(intArray13);
        List list20 = AppendPairProgram.listgen(intArray13);
        List list21 = AppendPairProgram.listgen(intArray13);
        List list22 = AppendPairProgram.listgen(intArray13);
        appendPairProgram0.TestStudentSubmission(list22, (int) '#');
        int[] intArray25 = new int[] {};
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        List list31 = AppendPairProgram.listgen(intArray25);
        List list32 = AppendPairProgram.listgen(intArray25);
        List list33 = AppendPairProgram.listgen(intArray25);
        List list34 = AppendPairProgram.listgen(intArray25);
        List list35 = AppendPairProgram.listgen(intArray25);
        List list36 = AppendPairProgram.listgen(intArray25);
        List list37 = AppendPairProgram.listgen(intArray25);
        List list38 = AppendPairProgram.listgen(intArray25);
        List list39 = AppendPairProgram.listgen(intArray25);
        List list40 = AppendPairProgram.listgen(intArray25);
        List list41 = AppendPairProgram.listgen(intArray25);
        List list42 = AppendPairProgram.listgen(intArray25);
        List list43 = AppendPairProgram.listgen(intArray25);
        List list44 = AppendPairProgram.listgen(intArray25);
        List list45 = AppendPairProgram.listgen(intArray25);
        List list46 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list46, (int) (short) -1);
        int[] intArray50 = new int[] { (byte) 10 };
        List list51 = AppendPairProgram.listgen(intArray50);
        List list52 = AppendPairProgram.listgen(intArray50);
        List list53 = AppendPairProgram.listgen(intArray50);
        List list54 = AppendPairProgram.listgen(intArray50);
        List list55 = AppendPairProgram.listgen(intArray50);
        List list56 = AppendPairProgram.listgen(intArray50);
        appendPairProgram0.TestStudentSubmission(list56, (int) (short) 0);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10]");
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[10]");
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, (int) (byte) 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list10, (-1));
        int[] intArray13 = new int[] {};
        List list14 = AppendPairProgram.listgen(intArray13);
        List list15 = AppendPairProgram.listgen(intArray13);
        List list16 = AppendPairProgram.listgen(intArray13);
        List list17 = AppendPairProgram.listgen(intArray13);
        List list18 = AppendPairProgram.listgen(intArray13);
        List list19 = AppendPairProgram.listgen(intArray13);
        List list20 = AppendPairProgram.listgen(intArray13);
        List list21 = AppendPairProgram.listgen(intArray13);
        List list22 = AppendPairProgram.listgen(intArray13);
        List list23 = AppendPairProgram.listgen(intArray13);
        List list24 = AppendPairProgram.listgen(intArray13);
        List list25 = AppendPairProgram.listgen(intArray13);
        List list26 = AppendPairProgram.listgen(intArray13);
        List list27 = AppendPairProgram.listgen(intArray13);
        appendPairProgram0.TestStudentSubmission(list27, (int) (short) -1);
        int[] intArray31 = new int[] { (byte) 10 };
        List list32 = AppendPairProgram.listgen(intArray31);
        List list33 = AppendPairProgram.listgen(intArray31);
        List list34 = AppendPairProgram.listgen(intArray31);
        List list35 = AppendPairProgram.listgen(intArray31);
        List list36 = AppendPairProgram.listgen(intArray31);
        List list37 = AppendPairProgram.listgen(intArray31);
        List list38 = AppendPairProgram.listgen(intArray31);
        List list39 = AppendPairProgram.listgen(intArray31);
        List list40 = AppendPairProgram.listgen(intArray31);
        List list41 = AppendPairProgram.listgen(intArray31);
        List list42 = AppendPairProgram.listgen(intArray31);
        List list43 = AppendPairProgram.listgen(intArray31);
        List list44 = AppendPairProgram.listgen(intArray31);
        List list45 = AppendPairProgram.listgen(intArray31);
        List list46 = AppendPairProgram.listgen(intArray31);
        appendPairProgram0.TestStudentSubmission(list46, 0);
        int[] intArray49 = new int[] {};
        List list50 = AppendPairProgram.listgen(intArray49);
        List list51 = AppendPairProgram.listgen(intArray49);
        appendPairProgram0.TestStudentSubmission(list51, (int) (short) 1);
        int[] intArray55 = new int[] { 0 };
        List list56 = AppendPairProgram.listgen(intArray55);
        List list57 = AppendPairProgram.listgen(intArray55);
        List list58 = AppendPairProgram.listgen(intArray55);
        List list59 = AppendPairProgram.listgen(intArray55);
        List list60 = AppendPairProgram.listgen(intArray55);
        List list61 = AppendPairProgram.listgen(intArray55);
        List list62 = AppendPairProgram.listgen(intArray55);
        appendPairProgram0.TestStudentSubmission(list62, 0);
        java.lang.Class<?> wildcardClass65 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10]");
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[]");
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0]");
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(list61);
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list24, (int) (short) 0);
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list29, 100);
        int[] intArray33 = new int[] { (byte) 10 };
        List list34 = AppendPairProgram.listgen(intArray33);
        List list35 = AppendPairProgram.listgen(intArray33);
        appendPairProgram0.TestStudentSubmission(list35, 100);
        int[] intArray38 = new int[] {};
        List list39 = AppendPairProgram.listgen(intArray38);
        appendPairProgram0.TestStudentSubmission(list39, (int) (byte) -1);
        java.lang.Class<?> wildcardClass42 = list39.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10]");
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[]");
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) -1);
        int[] intArray14 = new int[] {};
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        List list17 = AppendPairProgram.listgen(intArray14);
        List list18 = AppendPairProgram.listgen(intArray14);
        List list19 = AppendPairProgram.listgen(intArray14);
        List list20 = AppendPairProgram.listgen(intArray14);
        List list21 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list21, (int) '4');
        int[] intArray24 = new int[] {};
        List list25 = AppendPairProgram.listgen(intArray24);
        List list26 = AppendPairProgram.listgen(intArray24);
        List list27 = AppendPairProgram.listgen(intArray24);
        List list28 = AppendPairProgram.listgen(intArray24);
        List list29 = AppendPairProgram.listgen(intArray24);
        List list30 = AppendPairProgram.listgen(intArray24);
        List list31 = AppendPairProgram.listgen(intArray24);
        List list32 = AppendPairProgram.listgen(intArray24);
        List list33 = AppendPairProgram.listgen(intArray24);
        List list34 = AppendPairProgram.listgen(intArray24);
        List list35 = AppendPairProgram.listgen(intArray24);
        List list36 = AppendPairProgram.listgen(intArray24);
        List list37 = AppendPairProgram.listgen(intArray24);
        List list38 = AppendPairProgram.listgen(intArray24);
        List list39 = AppendPairProgram.listgen(intArray24);
        List list40 = AppendPairProgram.listgen(intArray24);
        appendPairProgram0.TestStudentSubmission(list40, (int) 'a');
        int[] intArray43 = new int[] {};
        List list44 = AppendPairProgram.listgen(intArray43);
        List list45 = AppendPairProgram.listgen(intArray43);
        List list46 = AppendPairProgram.listgen(intArray43);
        List list47 = AppendPairProgram.listgen(intArray43);
        List list48 = AppendPairProgram.listgen(intArray43);
        List list49 = AppendPairProgram.listgen(intArray43);
        List list50 = AppendPairProgram.listgen(intArray43);
        List list51 = AppendPairProgram.listgen(intArray43);
        List list52 = AppendPairProgram.listgen(intArray43);
        List list53 = AppendPairProgram.listgen(intArray43);
        List list54 = AppendPairProgram.listgen(intArray43);
        List list55 = AppendPairProgram.listgen(intArray43);
        List list56 = AppendPairProgram.listgen(intArray43);
        List list57 = AppendPairProgram.listgen(intArray43);
        List list58 = AppendPairProgram.listgen(intArray43);
        appendPairProgram0.TestStudentSubmission(list58, (int) ' ');
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[]");
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        List list12 = AppendPairProgram.listgen(intArray9);
        List list13 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        List list27 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list27, 100);
        int[] intArray31 = new int[] { (byte) 10 };
        List list32 = AppendPairProgram.listgen(intArray31);
        List list33 = AppendPairProgram.listgen(intArray31);
        List list34 = AppendPairProgram.listgen(intArray31);
        List list35 = AppendPairProgram.listgen(intArray31);
        List list36 = AppendPairProgram.listgen(intArray31);
        appendPairProgram0.TestStudentSubmission(list36, (int) (byte) 100);
        int[] intArray40 = new int[] { (byte) 10 };
        List list41 = AppendPairProgram.listgen(intArray40);
        List list42 = AppendPairProgram.listgen(intArray40);
        List list43 = AppendPairProgram.listgen(intArray40);
        List list44 = AppendPairProgram.listgen(intArray40);
        List list45 = AppendPairProgram.listgen(intArray40);
        List list46 = AppendPairProgram.listgen(intArray40);
        List list47 = AppendPairProgram.listgen(intArray40);
        List list48 = AppendPairProgram.listgen(intArray40);
        List list49 = AppendPairProgram.listgen(intArray40);
        List list50 = AppendPairProgram.listgen(intArray40);
        List list51 = AppendPairProgram.listgen(intArray40);
        List list52 = AppendPairProgram.listgen(intArray40);
        appendPairProgram0.TestStudentSubmission(list52, (int) (short) 100);
        int[] intArray56 = new int[] { (byte) 10 };
        List list57 = AppendPairProgram.listgen(intArray56);
        List list58 = AppendPairProgram.listgen(intArray56);
        List list59 = AppendPairProgram.listgen(intArray56);
        List list60 = AppendPairProgram.listgen(intArray56);
        List list61 = AppendPairProgram.listgen(intArray56);
        List list62 = AppendPairProgram.listgen(intArray56);
        List list63 = AppendPairProgram.listgen(intArray56);
        List list64 = AppendPairProgram.listgen(intArray56);
        List list65 = AppendPairProgram.listgen(intArray56);
        List list66 = AppendPairProgram.listgen(intArray56);
        List list67 = AppendPairProgram.listgen(intArray56);
        List list68 = AppendPairProgram.listgen(intArray56);
        List list69 = AppendPairProgram.listgen(intArray56);
        List list70 = AppendPairProgram.listgen(intArray56);
        List list71 = AppendPairProgram.listgen(intArray56);
        List list72 = AppendPairProgram.listgen(intArray56);
        List list73 = AppendPairProgram.listgen(intArray56);
        List list74 = AppendPairProgram.listgen(intArray56);
        List list75 = AppendPairProgram.listgen(intArray56);
        List list76 = AppendPairProgram.listgen(intArray56);
        List list77 = AppendPairProgram.listgen(intArray56);
        List list78 = AppendPairProgram.listgen(intArray56);
        appendPairProgram0.TestStudentSubmission(list78, (int) (byte) 0);
        java.lang.Class<?> wildcardClass81 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10]");
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[10]");
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[10]");
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(list61);
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(list63);
        org.junit.Assert.assertNotNull(list64);
        org.junit.Assert.assertNotNull(list65);
        org.junit.Assert.assertNotNull(list66);
        org.junit.Assert.assertNotNull(list67);
        org.junit.Assert.assertNotNull(list68);
        org.junit.Assert.assertNotNull(list69);
        org.junit.Assert.assertNotNull(list70);
        org.junit.Assert.assertNotNull(list71);
        org.junit.Assert.assertNotNull(list72);
        org.junit.Assert.assertNotNull(list73);
        org.junit.Assert.assertNotNull(list74);
        org.junit.Assert.assertNotNull(list75);
        org.junit.Assert.assertNotNull(list76);
        org.junit.Assert.assertNotNull(list77);
        org.junit.Assert.assertNotNull(list78);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        List list12 = AppendPairProgram.listgen(intArray9);
        List list13 = AppendPairProgram.listgen(intArray9);
        List list14 = AppendPairProgram.listgen(intArray9);
        List list15 = AppendPairProgram.listgen(intArray9);
        List list16 = AppendPairProgram.listgen(intArray9);
        List list17 = AppendPairProgram.listgen(intArray9);
        List list18 = AppendPairProgram.listgen(intArray9);
        List list19 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list19, (int) (byte) 1);
        int[] intArray22 = new int[] {};
        List list23 = AppendPairProgram.listgen(intArray22);
        List list24 = AppendPairProgram.listgen(intArray22);
        List list25 = AppendPairProgram.listgen(intArray22);
        appendPairProgram0.TestStudentSubmission(list25, (int) 'a');
        int[] intArray29 = new int[] { 0 };
        List list30 = AppendPairProgram.listgen(intArray29);
        List list31 = AppendPairProgram.listgen(intArray29);
        appendPairProgram0.TestStudentSubmission(list31, (int) (byte) 1);
        java.lang.Class<?> wildcardClass34 = list31.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]");
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0]");
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        int[] intArray3 = new int[] { 0, '#', (short) -1 };
        List list4 = AppendPairProgram.listgen(intArray3);
        List list5 = AppendPairProgram.listgen(intArray3);
        List list6 = AppendPairProgram.listgen(intArray3);
        List list7 = AppendPairProgram.listgen(intArray3);
        List list8 = AppendPairProgram.listgen(intArray3);
        List list9 = AppendPairProgram.listgen(intArray3);
        List list10 = AppendPairProgram.listgen(intArray3);
        List list11 = AppendPairProgram.listgen(intArray3);
        List list12 = AppendPairProgram.listgen(intArray3);
        List list13 = AppendPairProgram.listgen(intArray3);
        List list14 = AppendPairProgram.listgen(intArray3);
        List list15 = AppendPairProgram.listgen(intArray3);
        List list16 = AppendPairProgram.listgen(intArray3);
        List list17 = AppendPairProgram.listgen(intArray3);
        List list18 = AppendPairProgram.listgen(intArray3);
        List list19 = AppendPairProgram.listgen(intArray3);
        List list20 = AppendPairProgram.listgen(intArray3);
        List list21 = AppendPairProgram.listgen(intArray3);
        List list22 = AppendPairProgram.listgen(intArray3);
        List list23 = AppendPairProgram.listgen(intArray3);
        List list24 = AppendPairProgram.listgen(intArray3);
        List list25 = AppendPairProgram.listgen(intArray3);
        List list26 = AppendPairProgram.listgen(intArray3);
        java.lang.Class<?> wildcardClass27 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[0, 35, -1]");
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray6 = new int[] { 0 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list11, (int) (short) -1);
        java.lang.Class<?> wildcardClass14 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        int[] intArray5 = new int[] { (-1), 100, (short) 0, (byte) 100, (short) 100 };
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        java.lang.Class<?> wildcardClass8 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 0, 100, 100]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        int[] intArray0 = new int[] {};
        List list1 = AppendPairProgram.listgen(intArray0);
        List list2 = AppendPairProgram.listgen(intArray0);
        List list3 = AppendPairProgram.listgen(intArray0);
        List list4 = AppendPairProgram.listgen(intArray0);
        List list5 = AppendPairProgram.listgen(intArray0);
        List list6 = AppendPairProgram.listgen(intArray0);
        List list7 = AppendPairProgram.listgen(intArray0);
        List list8 = AppendPairProgram.listgen(intArray0);
        List list9 = AppendPairProgram.listgen(intArray0);
        List list10 = AppendPairProgram.listgen(intArray0);
        List list11 = AppendPairProgram.listgen(intArray0);
        List list12 = AppendPairProgram.listgen(intArray0);
        List list13 = AppendPairProgram.listgen(intArray0);
        List list14 = AppendPairProgram.listgen(intArray0);
        List list15 = AppendPairProgram.listgen(intArray0);
        List list16 = AppendPairProgram.listgen(intArray0);
        List list17 = AppendPairProgram.listgen(intArray0);
        List list18 = AppendPairProgram.listgen(intArray0);
        List list19 = AppendPairProgram.listgen(intArray0);
        List list20 = AppendPairProgram.listgen(intArray0);
        List list21 = AppendPairProgram.listgen(intArray0);
        List list22 = AppendPairProgram.listgen(intArray0);
        List list23 = AppendPairProgram.listgen(intArray0);
        java.lang.Class<?> wildcardClass24 = intArray0.getClass();
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(list1);
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray17 = new int[] { (byte) 10 };
        List list18 = AppendPairProgram.listgen(intArray17);
        List list19 = AppendPairProgram.listgen(intArray17);
        List list20 = AppendPairProgram.listgen(intArray17);
        List list21 = AppendPairProgram.listgen(intArray17);
        List list22 = AppendPairProgram.listgen(intArray17);
        List list23 = AppendPairProgram.listgen(intArray17);
        List list24 = AppendPairProgram.listgen(intArray17);
        List list25 = AppendPairProgram.listgen(intArray17);
        appendPairProgram0.TestStudentSubmission(list25, (int) (byte) 100);
        int[] intArray29 = new int[] { (byte) 10 };
        List list30 = AppendPairProgram.listgen(intArray29);
        List list31 = AppendPairProgram.listgen(intArray29);
        List list32 = AppendPairProgram.listgen(intArray29);
        List list33 = AppendPairProgram.listgen(intArray29);
        List list34 = AppendPairProgram.listgen(intArray29);
        List list35 = AppendPairProgram.listgen(intArray29);
        List list36 = AppendPairProgram.listgen(intArray29);
        List list37 = AppendPairProgram.listgen(intArray29);
        List list38 = AppendPairProgram.listgen(intArray29);
        List list39 = AppendPairProgram.listgen(intArray29);
        List list40 = AppendPairProgram.listgen(intArray29);
        List list41 = AppendPairProgram.listgen(intArray29);
        List list42 = AppendPairProgram.listgen(intArray29);
        List list43 = AppendPairProgram.listgen(intArray29);
        appendPairProgram0.TestStudentSubmission(list43, 10);
        java.lang.Class<?> wildcardClass46 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10]");
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10]");
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) -1);
        int[] intArray15 = new int[] { (byte) 10 };
        List list16 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 100);
        java.lang.Class<?> wildcardClass19 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        int[] intArray6 = new int[] { 0, (short) 10, (short) -1, '#', (byte) 100, 1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        List list25 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass26 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 10, -1, 35, 100, 1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) -1);
        int[] intArray15 = new int[] { (byte) 10 };
        List list16 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 100);
        java.lang.Class<?> wildcardClass19 = list16.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) 0);
        int[] intArray15 = new int[] { (byte) 10 };
        List list16 = AppendPairProgram.listgen(intArray15);
        List list17 = AppendPairProgram.listgen(intArray15);
        List list18 = AppendPairProgram.listgen(intArray15);
        List list19 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list19, (int) (byte) 100);
        int[] intArray22 = new int[] {};
        List list23 = AppendPairProgram.listgen(intArray22);
        List list24 = AppendPairProgram.listgen(intArray22);
        List list25 = AppendPairProgram.listgen(intArray22);
        List list26 = AppendPairProgram.listgen(intArray22);
        List list27 = AppendPairProgram.listgen(intArray22);
        appendPairProgram0.TestStudentSubmission(list27, (int) ' ');
        java.lang.Class<?> wildcardClass30 = list27.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]");
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) -1);
        int[] intArray14 = new int[] {};
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 10);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list23, (int) (byte) 0);
        int[] intArray26 = new int[] {};
        List list27 = AppendPairProgram.listgen(intArray26);
        List list28 = AppendPairProgram.listgen(intArray26);
        List list29 = AppendPairProgram.listgen(intArray26);
        List list30 = AppendPairProgram.listgen(intArray26);
        List list31 = AppendPairProgram.listgen(intArray26);
        List list32 = AppendPairProgram.listgen(intArray26);
        appendPairProgram0.TestStudentSubmission(list32, 100);
        int[] intArray36 = new int[] { (byte) 10 };
        List list37 = AppendPairProgram.listgen(intArray36);
        List list38 = AppendPairProgram.listgen(intArray36);
        List list39 = AppendPairProgram.listgen(intArray36);
        List list40 = AppendPairProgram.listgen(intArray36);
        List list41 = AppendPairProgram.listgen(intArray36);
        List list42 = AppendPairProgram.listgen(intArray36);
        List list43 = AppendPairProgram.listgen(intArray36);
        appendPairProgram0.TestStudentSubmission(list43, 100);
        int[] intArray47 = new int[] { (byte) 10 };
        List list48 = AppendPairProgram.listgen(intArray47);
        appendPairProgram0.TestStudentSubmission(list48, (int) (byte) 0);
        int[] intArray52 = new int[] { (byte) 10 };
        List list53 = AppendPairProgram.listgen(intArray52);
        List list54 = AppendPairProgram.listgen(intArray52);
        List list55 = AppendPairProgram.listgen(intArray52);
        List list56 = AppendPairProgram.listgen(intArray52);
        List list57 = AppendPairProgram.listgen(intArray52);
        List list58 = AppendPairProgram.listgen(intArray52);
        appendPairProgram0.TestStudentSubmission(list58, (int) (byte) 10);
        java.lang.Class<?> wildcardClass61 = list58.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[10]");
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10]");
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[10]");
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        int[] intArray4 = new int[] { 'a', (short) 10, (short) 100, (byte) 0 };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        List list7 = AppendPairProgram.listgen(intArray4);
        List list8 = AppendPairProgram.listgen(intArray4);
        List list9 = AppendPairProgram.listgen(intArray4);
        List list10 = AppendPairProgram.listgen(intArray4);
        List list11 = AppendPairProgram.listgen(intArray4);
        List list12 = AppendPairProgram.listgen(intArray4);
        List list13 = AppendPairProgram.listgen(intArray4);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[97, 10, 100, 0]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray17 = new int[] { (byte) 10 };
        List list18 = AppendPairProgram.listgen(intArray17);
        List list19 = AppendPairProgram.listgen(intArray17);
        List list20 = AppendPairProgram.listgen(intArray17);
        List list21 = AppendPairProgram.listgen(intArray17);
        List list22 = AppendPairProgram.listgen(intArray17);
        List list23 = AppendPairProgram.listgen(intArray17);
        List list24 = AppendPairProgram.listgen(intArray17);
        List list25 = AppendPairProgram.listgen(intArray17);
        appendPairProgram0.TestStudentSubmission(list25, (int) (byte) 100);
        java.lang.Class<?> wildcardClass28 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10]");
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        List list12 = AppendPairProgram.listgen(intArray9);
        List list13 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        List list27 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list27, 100);
        int[] intArray31 = new int[] { (byte) 10 };
        List list32 = AppendPairProgram.listgen(intArray31);
        List list33 = AppendPairProgram.listgen(intArray31);
        List list34 = AppendPairProgram.listgen(intArray31);
        List list35 = AppendPairProgram.listgen(intArray31);
        List list36 = AppendPairProgram.listgen(intArray31);
        appendPairProgram0.TestStudentSubmission(list36, (int) (byte) 100);
        int[] intArray40 = new int[] { (byte) 10 };
        List list41 = AppendPairProgram.listgen(intArray40);
        List list42 = AppendPairProgram.listgen(intArray40);
        List list43 = AppendPairProgram.listgen(intArray40);
        List list44 = AppendPairProgram.listgen(intArray40);
        List list45 = AppendPairProgram.listgen(intArray40);
        List list46 = AppendPairProgram.listgen(intArray40);
        List list47 = AppendPairProgram.listgen(intArray40);
        List list48 = AppendPairProgram.listgen(intArray40);
        List list49 = AppendPairProgram.listgen(intArray40);
        List list50 = AppendPairProgram.listgen(intArray40);
        List list51 = AppendPairProgram.listgen(intArray40);
        List list52 = AppendPairProgram.listgen(intArray40);
        appendPairProgram0.TestStudentSubmission(list52, (int) (short) 100);
        int[] intArray56 = new int[] { (byte) 10 };
        List list57 = AppendPairProgram.listgen(intArray56);
        List list58 = AppendPairProgram.listgen(intArray56);
        List list59 = AppendPairProgram.listgen(intArray56);
        List list60 = AppendPairProgram.listgen(intArray56);
        List list61 = AppendPairProgram.listgen(intArray56);
        List list62 = AppendPairProgram.listgen(intArray56);
        List list63 = AppendPairProgram.listgen(intArray56);
        List list64 = AppendPairProgram.listgen(intArray56);
        List list65 = AppendPairProgram.listgen(intArray56);
        List list66 = AppendPairProgram.listgen(intArray56);
        List list67 = AppendPairProgram.listgen(intArray56);
        List list68 = AppendPairProgram.listgen(intArray56);
        List list69 = AppendPairProgram.listgen(intArray56);
        List list70 = AppendPairProgram.listgen(intArray56);
        List list71 = AppendPairProgram.listgen(intArray56);
        List list72 = AppendPairProgram.listgen(intArray56);
        List list73 = AppendPairProgram.listgen(intArray56);
        List list74 = AppendPairProgram.listgen(intArray56);
        List list75 = AppendPairProgram.listgen(intArray56);
        List list76 = AppendPairProgram.listgen(intArray56);
        appendPairProgram0.TestStudentSubmission(list76, (int) (byte) 10);
        java.lang.Class<?> wildcardClass79 = list76.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10]");
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[10]");
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[10]");
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(list61);
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(list63);
        org.junit.Assert.assertNotNull(list64);
        org.junit.Assert.assertNotNull(list65);
        org.junit.Assert.assertNotNull(list66);
        org.junit.Assert.assertNotNull(list67);
        org.junit.Assert.assertNotNull(list68);
        org.junit.Assert.assertNotNull(list69);
        org.junit.Assert.assertNotNull(list70);
        org.junit.Assert.assertNotNull(list71);
        org.junit.Assert.assertNotNull(list72);
        org.junit.Assert.assertNotNull(list73);
        org.junit.Assert.assertNotNull(list74);
        org.junit.Assert.assertNotNull(list75);
        org.junit.Assert.assertNotNull(list76);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        int[] intArray0 = new int[] {};
        List list1 = AppendPairProgram.listgen(intArray0);
        List list2 = AppendPairProgram.listgen(intArray0);
        List list3 = AppendPairProgram.listgen(intArray0);
        List list4 = AppendPairProgram.listgen(intArray0);
        List list5 = AppendPairProgram.listgen(intArray0);
        List list6 = AppendPairProgram.listgen(intArray0);
        java.lang.Class<?> wildcardClass7 = intArray0.getClass();
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(list1);
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        int[] intArray1 = new int[] { (byte) 10 };
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        List list7 = AppendPairProgram.listgen(intArray1);
        List list8 = AppendPairProgram.listgen(intArray1);
        List list9 = AppendPairProgram.listgen(intArray1);
        List list10 = AppendPairProgram.listgen(intArray1);
        List list11 = AppendPairProgram.listgen(intArray1);
        List list12 = AppendPairProgram.listgen(intArray1);
        List list13 = AppendPairProgram.listgen(intArray1);
        List list14 = AppendPairProgram.listgen(intArray1);
        List list15 = AppendPairProgram.listgen(intArray1);
        java.lang.Class<?> wildcardClass16 = list15.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[10]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray12 = new int[] { (byte) 10 };
        List list13 = AppendPairProgram.listgen(intArray12);
        List list14 = AppendPairProgram.listgen(intArray12);
        List list15 = AppendPairProgram.listgen(intArray12);
        List list16 = AppendPairProgram.listgen(intArray12);
        List list17 = AppendPairProgram.listgen(intArray12);
        List list18 = AppendPairProgram.listgen(intArray12);
        List list19 = AppendPairProgram.listgen(intArray12);
        List list20 = AppendPairProgram.listgen(intArray12);
        List list21 = AppendPairProgram.listgen(intArray12);
        List list22 = AppendPairProgram.listgen(intArray12);
        List list23 = AppendPairProgram.listgen(intArray12);
        List list24 = AppendPairProgram.listgen(intArray12);
        List list25 = AppendPairProgram.listgen(intArray12);
        List list26 = AppendPairProgram.listgen(intArray12);
        List list27 = AppendPairProgram.listgen(intArray12);
        List list28 = AppendPairProgram.listgen(intArray12);
        List list29 = AppendPairProgram.listgen(intArray12);
        List list30 = AppendPairProgram.listgen(intArray12);
        List list31 = AppendPairProgram.listgen(intArray12);
        List list32 = AppendPairProgram.listgen(intArray12);
        appendPairProgram0.TestStudentSubmission(list32, (int) '4');
        java.lang.Class<?> wildcardClass35 = list32.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10]");
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray15 = new int[] {};
        List list16 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 100);
        List list19 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list19, (int) '4');
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]");
        org.junit.Assert.assertNotNull(list16);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, (int) '4');
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list26, (int) (byte) 1);
        int[] intArray29 = new int[] {};
        List list30 = AppendPairProgram.listgen(intArray29);
        List list31 = AppendPairProgram.listgen(intArray29);
        List list32 = AppendPairProgram.listgen(intArray29);
        List list33 = AppendPairProgram.listgen(intArray29);
        List list34 = AppendPairProgram.listgen(intArray29);
        List list35 = AppendPairProgram.listgen(intArray29);
        List list36 = AppendPairProgram.listgen(intArray29);
        List list37 = AppendPairProgram.listgen(intArray29);
        List list38 = AppendPairProgram.listgen(intArray29);
        List list39 = AppendPairProgram.listgen(intArray29);
        appendPairProgram0.TestStudentSubmission(list39, (-1));
        int[] intArray43 = new int[] { 0 };
        List list44 = AppendPairProgram.listgen(intArray43);
        List list45 = AppendPairProgram.listgen(intArray43);
        List list46 = AppendPairProgram.listgen(intArray43);
        appendPairProgram0.TestStudentSubmission(list46, (int) ' ');
        int[] intArray50 = new int[] { (byte) 10 };
        List list51 = AppendPairProgram.listgen(intArray50);
        List list52 = AppendPairProgram.listgen(intArray50);
        List list53 = AppendPairProgram.listgen(intArray50);
        List list54 = AppendPairProgram.listgen(intArray50);
        List list55 = AppendPairProgram.listgen(intArray50);
        List list56 = AppendPairProgram.listgen(intArray50);
        List list57 = AppendPairProgram.listgen(intArray50);
        appendPairProgram0.TestStudentSubmission(list57, 10);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[]");
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0]");
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[10]");
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        int[] intArray4 = new int[] { (-1), (byte) 100, (byte) 1, (byte) 1 };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        List list7 = AppendPairProgram.listgen(intArray4);
        List list8 = AppendPairProgram.listgen(intArray4);
        List list9 = AppendPairProgram.listgen(intArray4);
        List list10 = AppendPairProgram.listgen(intArray4);
        List list11 = AppendPairProgram.listgen(intArray4);
        List list12 = AppendPairProgram.listgen(intArray4);
        List list13 = AppendPairProgram.listgen(intArray4);
        List list14 = AppendPairProgram.listgen(intArray4);
        List list15 = AppendPairProgram.listgen(intArray4);
        List list16 = AppendPairProgram.listgen(intArray4);
        List list17 = AppendPairProgram.listgen(intArray4);
        java.lang.Class<?> wildcardClass18 = list17.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 100, 1, 1]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray16 = new int[] { (byte) 10 };
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list18, (int) (byte) -1);
        int[] intArray21 = new int[] {};
        List list22 = AppendPairProgram.listgen(intArray21);
        List list23 = AppendPairProgram.listgen(intArray21);
        List list24 = AppendPairProgram.listgen(intArray21);
        List list25 = AppendPairProgram.listgen(intArray21);
        List list26 = AppendPairProgram.listgen(intArray21);
        List list27 = AppendPairProgram.listgen(intArray21);
        List list28 = AppendPairProgram.listgen(intArray21);
        List list29 = AppendPairProgram.listgen(intArray21);
        List list30 = AppendPairProgram.listgen(intArray21);
        List list31 = AppendPairProgram.listgen(intArray21);
        List list32 = AppendPairProgram.listgen(intArray21);
        List list33 = AppendPairProgram.listgen(intArray21);
        List list34 = AppendPairProgram.listgen(intArray21);
        List list35 = AppendPairProgram.listgen(intArray21);
        List list36 = AppendPairProgram.listgen(intArray21);
        appendPairProgram0.TestStudentSubmission(list36, (int) (short) 1);
        int[] intArray39 = new int[] {};
        List list40 = AppendPairProgram.listgen(intArray39);
        List list41 = AppendPairProgram.listgen(intArray39);
        List list42 = AppendPairProgram.listgen(intArray39);
        List list43 = AppendPairProgram.listgen(intArray39);
        appendPairProgram0.TestStudentSubmission(list43, (int) (short) 100);
        int[] intArray46 = new int[] {};
        List list47 = AppendPairProgram.listgen(intArray46);
        List list48 = AppendPairProgram.listgen(intArray46);
        List list49 = AppendPairProgram.listgen(intArray46);
        List list50 = AppendPairProgram.listgen(intArray46);
        List list51 = AppendPairProgram.listgen(intArray46);
        List list52 = AppendPairProgram.listgen(intArray46);
        List list53 = AppendPairProgram.listgen(intArray46);
        List list54 = AppendPairProgram.listgen(intArray46);
        List list55 = AppendPairProgram.listgen(intArray46);
        appendPairProgram0.TestStudentSubmission(list55, (int) (short) 1);
        java.lang.Class<?> wildcardClass58 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]");
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 10);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        List list14 = AppendPairProgram.listgen(intArray11);
        List list15 = AppendPairProgram.listgen(intArray11);
        List list16 = AppendPairProgram.listgen(intArray11);
        List list17 = AppendPairProgram.listgen(intArray11);
        List list18 = AppendPairProgram.listgen(intArray11);
        List list19 = AppendPairProgram.listgen(intArray11);
        List list20 = AppendPairProgram.listgen(intArray11);
        List list21 = AppendPairProgram.listgen(intArray11);
        List list22 = AppendPairProgram.listgen(intArray11);
        List list23 = AppendPairProgram.listgen(intArray11);
        List list24 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list24, (int) (byte) 0);
        int[] intArray27 = new int[] {};
        List list28 = AppendPairProgram.listgen(intArray27);
        appendPairProgram0.TestStudentSubmission(list28, 0);
        int[] intArray31 = new int[] {};
        List list32 = AppendPairProgram.listgen(intArray31);
        List list33 = AppendPairProgram.listgen(intArray31);
        List list34 = AppendPairProgram.listgen(intArray31);
        List list35 = AppendPairProgram.listgen(intArray31);
        List list36 = AppendPairProgram.listgen(intArray31);
        List list37 = AppendPairProgram.listgen(intArray31);
        List list38 = AppendPairProgram.listgen(intArray31);
        List list39 = AppendPairProgram.listgen(intArray31);
        List list40 = AppendPairProgram.listgen(intArray31);
        List list41 = AppendPairProgram.listgen(intArray31);
        List list42 = AppendPairProgram.listgen(intArray31);
        List list43 = AppendPairProgram.listgen(intArray31);
        appendPairProgram0.TestStudentSubmission(list43, (int) '4');
        int[] intArray46 = new int[] {};
        List list47 = AppendPairProgram.listgen(intArray46);
        List list48 = AppendPairProgram.listgen(intArray46);
        List list49 = AppendPairProgram.listgen(intArray46);
        List list50 = AppendPairProgram.listgen(intArray46);
        List list51 = AppendPairProgram.listgen(intArray46);
        List list52 = AppendPairProgram.listgen(intArray46);
        List list53 = AppendPairProgram.listgen(intArray46);
        List list54 = AppendPairProgram.listgen(intArray46);
        List list55 = AppendPairProgram.listgen(intArray46);
        appendPairProgram0.TestStudentSubmission(list55, 0);
        java.lang.Class<?> wildcardClass58 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[]");
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]");
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list11, 0);
        int[] intArray15 = new int[] { (byte) 10 };
        List list16 = AppendPairProgram.listgen(intArray15);
        List list17 = AppendPairProgram.listgen(intArray15);
        List list18 = AppendPairProgram.listgen(intArray15);
        List list19 = AppendPairProgram.listgen(intArray15);
        List list20 = AppendPairProgram.listgen(intArray15);
        List list21 = AppendPairProgram.listgen(intArray15);
        List list22 = AppendPairProgram.listgen(intArray15);
        List list23 = AppendPairProgram.listgen(intArray15);
        List list24 = AppendPairProgram.listgen(intArray15);
        List list25 = AppendPairProgram.listgen(intArray15);
        List list26 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list26, (int) (byte) 100);
        int[] intArray30 = new int[] { (byte) 10 };
        List list31 = AppendPairProgram.listgen(intArray30);
        List list32 = AppendPairProgram.listgen(intArray30);
        List list33 = AppendPairProgram.listgen(intArray30);
        List list34 = AppendPairProgram.listgen(intArray30);
        List list35 = AppendPairProgram.listgen(intArray30);
        List list36 = AppendPairProgram.listgen(intArray30);
        List list37 = AppendPairProgram.listgen(intArray30);
        List list38 = AppendPairProgram.listgen(intArray30);
        List list39 = AppendPairProgram.listgen(intArray30);
        List list40 = AppendPairProgram.listgen(intArray30);
        appendPairProgram0.TestStudentSubmission(list40, 1);
        int[] intArray43 = new int[] {};
        List list44 = AppendPairProgram.listgen(intArray43);
        List list45 = AppendPairProgram.listgen(intArray43);
        List list46 = AppendPairProgram.listgen(intArray43);
        List list47 = AppendPairProgram.listgen(intArray43);
        List list48 = AppendPairProgram.listgen(intArray43);
        List list49 = AppendPairProgram.listgen(intArray43);
        List list50 = AppendPairProgram.listgen(intArray43);
        List list51 = AppendPairProgram.listgen(intArray43);
        List list52 = AppendPairProgram.listgen(intArray43);
        List list53 = AppendPairProgram.listgen(intArray43);
        List list54 = AppendPairProgram.listgen(intArray43);
        List list55 = AppendPairProgram.listgen(intArray43);
        List list56 = AppendPairProgram.listgen(intArray43);
        List list57 = AppendPairProgram.listgen(intArray43);
        appendPairProgram0.TestStudentSubmission(list57, 0);
        java.lang.Class<?> wildcardClass60 = list57.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[10]");
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        int[] intArray6 = new int[] { 0, (short) 10, (short) -1, '#', (byte) 100, 1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        List list25 = AppendPairProgram.listgen(intArray6);
        List list26 = AppendPairProgram.listgen(intArray6);
        List list27 = AppendPairProgram.listgen(intArray6);
        List list28 = AppendPairProgram.listgen(intArray6);
        List list29 = AppendPairProgram.listgen(intArray6);
        List list30 = AppendPairProgram.listgen(intArray6);
        List list31 = AppendPairProgram.listgen(intArray6);
        List list32 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass33 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 10, -1, 35, 100, 1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        List list9 = AppendPairProgram.listgen(intArray5);
        List list10 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list10, 100);
        int[] intArray14 = new int[] { (byte) 10 };
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        List list17 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list17, (int) (byte) 1);
        int[] intArray20 = new int[] {};
        List list21 = AppendPairProgram.listgen(intArray20);
        List list22 = AppendPairProgram.listgen(intArray20);
        List list23 = AppendPairProgram.listgen(intArray20);
        List list24 = AppendPairProgram.listgen(intArray20);
        List list25 = AppendPairProgram.listgen(intArray20);
        appendPairProgram0.TestStudentSubmission(list25, (int) (short) 0);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list9, (int) (short) 0);
        int[] intArray12 = new int[] {};
        List list13 = AppendPairProgram.listgen(intArray12);
        List list14 = AppendPairProgram.listgen(intArray12);
        List list15 = AppendPairProgram.listgen(intArray12);
        List list16 = AppendPairProgram.listgen(intArray12);
        List list17 = AppendPairProgram.listgen(intArray12);
        List list18 = AppendPairProgram.listgen(intArray12);
        List list19 = AppendPairProgram.listgen(intArray12);
        List list20 = AppendPairProgram.listgen(intArray12);
        List list21 = AppendPairProgram.listgen(intArray12);
        List list22 = AppendPairProgram.listgen(intArray12);
        appendPairProgram0.TestStudentSubmission(list22, (int) (byte) 0);
        int[] intArray25 = new int[] {};
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        List list31 = AppendPairProgram.listgen(intArray25);
        List list32 = AppendPairProgram.listgen(intArray25);
        List list33 = AppendPairProgram.listgen(intArray25);
        List list34 = AppendPairProgram.listgen(intArray25);
        List list35 = AppendPairProgram.listgen(intArray25);
        List list36 = AppendPairProgram.listgen(intArray25);
        List list37 = AppendPairProgram.listgen(intArray25);
        List list38 = AppendPairProgram.listgen(intArray25);
        List list39 = AppendPairProgram.listgen(intArray25);
        List list40 = AppendPairProgram.listgen(intArray25);
        List list41 = AppendPairProgram.listgen(intArray25);
        List list42 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list42, (int) (byte) 10);
        int[] intArray45 = new int[] {};
        List list46 = AppendPairProgram.listgen(intArray45);
        List list47 = AppendPairProgram.listgen(intArray45);
        List list48 = AppendPairProgram.listgen(intArray45);
        List list49 = AppendPairProgram.listgen(intArray45);
        List list50 = AppendPairProgram.listgen(intArray45);
        List list51 = AppendPairProgram.listgen(intArray45);
        List list52 = AppendPairProgram.listgen(intArray45);
        List list53 = AppendPairProgram.listgen(intArray45);
        List list54 = AppendPairProgram.listgen(intArray45);
        List list55 = AppendPairProgram.listgen(intArray45);
        appendPairProgram0.TestStudentSubmission(list55, (-1));
        java.lang.Class<?> wildcardClass58 = list55.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[]");
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        int[] intArray2 = new int[] { 10, (byte) 0 };
        List list3 = AppendPairProgram.listgen(intArray2);
        List list4 = AppendPairProgram.listgen(intArray2);
        List list5 = AppendPairProgram.listgen(intArray2);
        List list6 = AppendPairProgram.listgen(intArray2);
        List list7 = AppendPairProgram.listgen(intArray2);
        List list8 = AppendPairProgram.listgen(intArray2);
        List list9 = AppendPairProgram.listgen(intArray2);
        List list10 = AppendPairProgram.listgen(intArray2);
        List list11 = AppendPairProgram.listgen(intArray2);
        List list12 = AppendPairProgram.listgen(intArray2);
        List list13 = AppendPairProgram.listgen(intArray2);
        List list14 = AppendPairProgram.listgen(intArray2);
        List list15 = AppendPairProgram.listgen(intArray2);
        List list16 = AppendPairProgram.listgen(intArray2);
        List list17 = AppendPairProgram.listgen(intArray2);
        java.lang.Class<?> wildcardClass18 = list17.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[10, 0]");
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, (int) '4');
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list26, (int) (byte) 1);
        int[] intArray29 = new int[] {};
        List list30 = AppendPairProgram.listgen(intArray29);
        List list31 = AppendPairProgram.listgen(intArray29);
        List list32 = AppendPairProgram.listgen(intArray29);
        List list33 = AppendPairProgram.listgen(intArray29);
        List list34 = AppendPairProgram.listgen(intArray29);
        List list35 = AppendPairProgram.listgen(intArray29);
        List list36 = AppendPairProgram.listgen(intArray29);
        List list37 = AppendPairProgram.listgen(intArray29);
        List list38 = AppendPairProgram.listgen(intArray29);
        List list39 = AppendPairProgram.listgen(intArray29);
        appendPairProgram0.TestStudentSubmission(list39, (-1));
        int[] intArray43 = new int[] { 0 };
        List list44 = AppendPairProgram.listgen(intArray43);
        List list45 = AppendPairProgram.listgen(intArray43);
        List list46 = AppendPairProgram.listgen(intArray43);
        appendPairProgram0.TestStudentSubmission(list46, (int) ' ');
        List list49 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list49, (-1));
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[]");
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0]");
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, (int) (byte) 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list10, (-1));
        int[] intArray13 = new int[] {};
        List list14 = AppendPairProgram.listgen(intArray13);
        List list15 = AppendPairProgram.listgen(intArray13);
        List list16 = AppendPairProgram.listgen(intArray13);
        List list17 = AppendPairProgram.listgen(intArray13);
        List list18 = AppendPairProgram.listgen(intArray13);
        List list19 = AppendPairProgram.listgen(intArray13);
        List list20 = AppendPairProgram.listgen(intArray13);
        List list21 = AppendPairProgram.listgen(intArray13);
        List list22 = AppendPairProgram.listgen(intArray13);
        List list23 = AppendPairProgram.listgen(intArray13);
        List list24 = AppendPairProgram.listgen(intArray13);
        List list25 = AppendPairProgram.listgen(intArray13);
        List list26 = AppendPairProgram.listgen(intArray13);
        List list27 = AppendPairProgram.listgen(intArray13);
        List list28 = AppendPairProgram.listgen(intArray13);
        List list29 = AppendPairProgram.listgen(intArray13);
        appendPairProgram0.TestStudentSubmission(list29, 0);
        int[] intArray33 = new int[] { (byte) 10 };
        List list34 = AppendPairProgram.listgen(intArray33);
        List list35 = AppendPairProgram.listgen(intArray33);
        List list36 = AppendPairProgram.listgen(intArray33);
        List list37 = AppendPairProgram.listgen(intArray33);
        List list38 = AppendPairProgram.listgen(intArray33);
        List list39 = AppendPairProgram.listgen(intArray33);
        List list40 = AppendPairProgram.listgen(intArray33);
        List list41 = AppendPairProgram.listgen(intArray33);
        List list42 = AppendPairProgram.listgen(intArray33);
        List list43 = AppendPairProgram.listgen(intArray33);
        List list44 = AppendPairProgram.listgen(intArray33);
        appendPairProgram0.TestStudentSubmission(list44, (int) ' ');
        java.lang.Class<?> wildcardClass47 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10]");
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, 1);
        int[] intArray17 = new int[] { (byte) 10 };
        List list18 = AppendPairProgram.listgen(intArray17);
        List list19 = AppendPairProgram.listgen(intArray17);
        List list20 = AppendPairProgram.listgen(intArray17);
        List list21 = AppendPairProgram.listgen(intArray17);
        List list22 = AppendPairProgram.listgen(intArray17);
        List list23 = AppendPairProgram.listgen(intArray17);
        List list24 = AppendPairProgram.listgen(intArray17);
        List list25 = AppendPairProgram.listgen(intArray17);
        appendPairProgram0.TestStudentSubmission(list25, (int) (short) 0);
        int[] intArray29 = new int[] { (byte) 10 };
        List list30 = AppendPairProgram.listgen(intArray29);
        List list31 = AppendPairProgram.listgen(intArray29);
        appendPairProgram0.TestStudentSubmission(list31, (-1));
        int[] intArray35 = new int[] { 0 };
        List list36 = AppendPairProgram.listgen(intArray35);
        List list37 = AppendPairProgram.listgen(intArray35);
        List list38 = AppendPairProgram.listgen(intArray35);
        appendPairProgram0.TestStudentSubmission(list38, (int) (byte) 100);
        java.lang.Class<?> wildcardClass41 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10]");
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10]");
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0]");
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray16 = new int[] { (byte) 10 };
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list22, (int) (byte) 0);
        int[] intArray25 = new int[] {};
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list30, 0);
        int[] intArray34 = new int[] { (byte) 10 };
        List list35 = AppendPairProgram.listgen(intArray34);
        List list36 = AppendPairProgram.listgen(intArray34);
        List list37 = AppendPairProgram.listgen(intArray34);
        List list38 = AppendPairProgram.listgen(intArray34);
        List list39 = AppendPairProgram.listgen(intArray34);
        List list40 = AppendPairProgram.listgen(intArray34);
        List list41 = AppendPairProgram.listgen(intArray34);
        List list42 = AppendPairProgram.listgen(intArray34);
        List list43 = AppendPairProgram.listgen(intArray34);
        List list44 = AppendPairProgram.listgen(intArray34);
        List list45 = AppendPairProgram.listgen(intArray34);
        List list46 = AppendPairProgram.listgen(intArray34);
        appendPairProgram0.TestStudentSubmission(list46, 0);
        java.lang.Class<?> wildcardClass49 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[10]");
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        int[] intArray5 = new int[] { '4', 10, (byte) 1, (byte) 100, (byte) 10 };
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        List list9 = AppendPairProgram.listgen(intArray5);
        List list10 = AppendPairProgram.listgen(intArray5);
        List list11 = AppendPairProgram.listgen(intArray5);
        List list12 = AppendPairProgram.listgen(intArray5);
        List list13 = AppendPairProgram.listgen(intArray5);
        List list14 = AppendPairProgram.listgen(intArray5);
        java.lang.Class<?> wildcardClass15 = list14.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[52, 10, 1, 100, 10]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        int[] intArray6 = new int[] { (byte) 0, (short) -1, ' ', 'a', (byte) 100, (byte) 10 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass25 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, -1, 32, 97, 100, 10]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray6 = new int[] { 0 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list11, (int) (short) -1);
        List list14 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list14, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        List list12 = AppendPairProgram.listgen(intArray9);
        List list13 = AppendPairProgram.listgen(intArray9);
        List list14 = AppendPairProgram.listgen(intArray9);
        List list15 = AppendPairProgram.listgen(intArray9);
        List list16 = AppendPairProgram.listgen(intArray9);
        List list17 = AppendPairProgram.listgen(intArray9);
        List list18 = AppendPairProgram.listgen(intArray9);
        List list19 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list19, (int) (byte) 1);
        int[] intArray22 = new int[] {};
        List list23 = AppendPairProgram.listgen(intArray22);
        List list24 = AppendPairProgram.listgen(intArray22);
        List list25 = AppendPairProgram.listgen(intArray22);
        appendPairProgram0.TestStudentSubmission(list25, (int) 'a');
        int[] intArray29 = new int[] { 0 };
        List list30 = AppendPairProgram.listgen(intArray29);
        List list31 = AppendPairProgram.listgen(intArray29);
        appendPairProgram0.TestStudentSubmission(list31, (int) (byte) 1);
        int[] intArray35 = new int[] { (byte) 10 };
        List list36 = AppendPairProgram.listgen(intArray35);
        List list37 = AppendPairProgram.listgen(intArray35);
        List list38 = AppendPairProgram.listgen(intArray35);
        List list39 = AppendPairProgram.listgen(intArray35);
        List list40 = AppendPairProgram.listgen(intArray35);
        List list41 = AppendPairProgram.listgen(intArray35);
        List list42 = AppendPairProgram.listgen(intArray35);
        List list43 = AppendPairProgram.listgen(intArray35);
        List list44 = AppendPairProgram.listgen(intArray35);
        List list45 = AppendPairProgram.listgen(intArray35);
        List list46 = AppendPairProgram.listgen(intArray35);
        List list47 = AppendPairProgram.listgen(intArray35);
        List list48 = AppendPairProgram.listgen(intArray35);
        List list49 = AppendPairProgram.listgen(intArray35);
        List list50 = AppendPairProgram.listgen(intArray35);
        List list51 = AppendPairProgram.listgen(intArray35);
        appendPairProgram0.TestStudentSubmission(list51, (int) (short) 1);
        List list54 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list54, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]");
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0]");
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[10]");
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray12 = new int[] { (byte) 10 };
        List list13 = AppendPairProgram.listgen(intArray12);
        List list14 = AppendPairProgram.listgen(intArray12);
        List list15 = AppendPairProgram.listgen(intArray12);
        appendPairProgram0.TestStudentSubmission(list15, 10);
        int[] intArray19 = new int[] { (short) -1 };
        List list20 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list20, (int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10]");
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        int[] intArray3 = new int[] { 0, '#', (short) -1 };
        List list4 = AppendPairProgram.listgen(intArray3);
        List list5 = AppendPairProgram.listgen(intArray3);
        List list6 = AppendPairProgram.listgen(intArray3);
        List list7 = AppendPairProgram.listgen(intArray3);
        List list8 = AppendPairProgram.listgen(intArray3);
        List list9 = AppendPairProgram.listgen(intArray3);
        List list10 = AppendPairProgram.listgen(intArray3);
        List list11 = AppendPairProgram.listgen(intArray3);
        List list12 = AppendPairProgram.listgen(intArray3);
        List list13 = AppendPairProgram.listgen(intArray3);
        List list14 = AppendPairProgram.listgen(intArray3);
        List list15 = AppendPairProgram.listgen(intArray3);
        List list16 = AppendPairProgram.listgen(intArray3);
        List list17 = AppendPairProgram.listgen(intArray3);
        List list18 = AppendPairProgram.listgen(intArray3);
        List list19 = AppendPairProgram.listgen(intArray3);
        List list20 = AppendPairProgram.listgen(intArray3);
        List list21 = AppendPairProgram.listgen(intArray3);
        List list22 = AppendPairProgram.listgen(intArray3);
        List list23 = AppendPairProgram.listgen(intArray3);
        List list24 = AppendPairProgram.listgen(intArray3);
        List list25 = AppendPairProgram.listgen(intArray3);
        List list26 = AppendPairProgram.listgen(intArray3);
        List list27 = AppendPairProgram.listgen(intArray3);
        java.lang.Class<?> wildcardClass28 = list27.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[0, 35, -1]");
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        int[] intArray6 = new int[] { (short) -1, '#', '4', (short) -1, (short) 100, (byte) -1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        List list25 = AppendPairProgram.listgen(intArray6);
        List list26 = AppendPairProgram.listgen(intArray6);
        List list27 = AppendPairProgram.listgen(intArray6);
        List list28 = AppendPairProgram.listgen(intArray6);
        List list29 = AppendPairProgram.listgen(intArray6);
        List list30 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass31 = list30.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 35, 52, -1, 100, -1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        int[] intArray0 = new int[] {};
        List list1 = AppendPairProgram.listgen(intArray0);
        List list2 = AppendPairProgram.listgen(intArray0);
        List list3 = AppendPairProgram.listgen(intArray0);
        List list4 = AppendPairProgram.listgen(intArray0);
        List list5 = AppendPairProgram.listgen(intArray0);
        List list6 = AppendPairProgram.listgen(intArray0);
        List list7 = AppendPairProgram.listgen(intArray0);
        List list8 = AppendPairProgram.listgen(intArray0);
        List list9 = AppendPairProgram.listgen(intArray0);
        List list10 = AppendPairProgram.listgen(intArray0);
        List list11 = AppendPairProgram.listgen(intArray0);
        List list12 = AppendPairProgram.listgen(intArray0);
        List list13 = AppendPairProgram.listgen(intArray0);
        List list14 = AppendPairProgram.listgen(intArray0);
        List list15 = AppendPairProgram.listgen(intArray0);
        List list16 = AppendPairProgram.listgen(intArray0);
        List list17 = AppendPairProgram.listgen(intArray0);
        List list18 = AppendPairProgram.listgen(intArray0);
        List list19 = AppendPairProgram.listgen(intArray0);
        List list20 = AppendPairProgram.listgen(intArray0);
        List list21 = AppendPairProgram.listgen(intArray0);
        List list22 = AppendPairProgram.listgen(intArray0);
        List list23 = AppendPairProgram.listgen(intArray0);
        List list24 = AppendPairProgram.listgen(intArray0);
        java.lang.Class<?> wildcardClass25 = list24.getClass();
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(list1);
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray17 = new int[] { (byte) 10 };
        List list18 = AppendPairProgram.listgen(intArray17);
        List list19 = AppendPairProgram.listgen(intArray17);
        List list20 = AppendPairProgram.listgen(intArray17);
        List list21 = AppendPairProgram.listgen(intArray17);
        List list22 = AppendPairProgram.listgen(intArray17);
        List list23 = AppendPairProgram.listgen(intArray17);
        List list24 = AppendPairProgram.listgen(intArray17);
        List list25 = AppendPairProgram.listgen(intArray17);
        appendPairProgram0.TestStudentSubmission(list25, (int) (byte) 100);
        int[] intArray28 = new int[] {};
        List list29 = AppendPairProgram.listgen(intArray28);
        List list30 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list30, 0);
        List list33 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list33, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10]");
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list9, (int) (short) 0);
        int[] intArray12 = new int[] {};
        List list13 = AppendPairProgram.listgen(intArray12);
        List list14 = AppendPairProgram.listgen(intArray12);
        List list15 = AppendPairProgram.listgen(intArray12);
        List list16 = AppendPairProgram.listgen(intArray12);
        List list17 = AppendPairProgram.listgen(intArray12);
        List list18 = AppendPairProgram.listgen(intArray12);
        List list19 = AppendPairProgram.listgen(intArray12);
        List list20 = AppendPairProgram.listgen(intArray12);
        List list21 = AppendPairProgram.listgen(intArray12);
        List list22 = AppendPairProgram.listgen(intArray12);
        appendPairProgram0.TestStudentSubmission(list22, (int) (byte) 0);
        int[] intArray25 = new int[] {};
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        List list31 = AppendPairProgram.listgen(intArray25);
        List list32 = AppendPairProgram.listgen(intArray25);
        List list33 = AppendPairProgram.listgen(intArray25);
        List list34 = AppendPairProgram.listgen(intArray25);
        List list35 = AppendPairProgram.listgen(intArray25);
        List list36 = AppendPairProgram.listgen(intArray25);
        List list37 = AppendPairProgram.listgen(intArray25);
        List list38 = AppendPairProgram.listgen(intArray25);
        List list39 = AppendPairProgram.listgen(intArray25);
        List list40 = AppendPairProgram.listgen(intArray25);
        List list41 = AppendPairProgram.listgen(intArray25);
        List list42 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list42, (int) (byte) 10);
        int[] intArray45 = new int[] {};
        List list46 = AppendPairProgram.listgen(intArray45);
        List list47 = AppendPairProgram.listgen(intArray45);
        List list48 = AppendPairProgram.listgen(intArray45);
        List list49 = AppendPairProgram.listgen(intArray45);
        List list50 = AppendPairProgram.listgen(intArray45);
        List list51 = AppendPairProgram.listgen(intArray45);
        List list52 = AppendPairProgram.listgen(intArray45);
        List list53 = AppendPairProgram.listgen(intArray45);
        List list54 = AppendPairProgram.listgen(intArray45);
        List list55 = AppendPairProgram.listgen(intArray45);
        appendPairProgram0.TestStudentSubmission(list55, (-1));
        java.lang.Class<?> wildcardClass58 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[]");
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray15 = new int[] {};
        List list16 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list16, (int) (short) 100);
        int[] intArray20 = new int[] { 0 };
        List list21 = AppendPairProgram.listgen(intArray20);
        appendPairProgram0.TestStudentSubmission(list21, (int) (short) -1);
        java.lang.Class<?> wildcardClass24 = list21.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0]");
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray16 = new int[] { (byte) 10 };
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list18, (int) (byte) -1);
        int[] intArray21 = new int[] {};
        List list22 = AppendPairProgram.listgen(intArray21);
        List list23 = AppendPairProgram.listgen(intArray21);
        List list24 = AppendPairProgram.listgen(intArray21);
        List list25 = AppendPairProgram.listgen(intArray21);
        List list26 = AppendPairProgram.listgen(intArray21);
        List list27 = AppendPairProgram.listgen(intArray21);
        List list28 = AppendPairProgram.listgen(intArray21);
        List list29 = AppendPairProgram.listgen(intArray21);
        List list30 = AppendPairProgram.listgen(intArray21);
        List list31 = AppendPairProgram.listgen(intArray21);
        List list32 = AppendPairProgram.listgen(intArray21);
        List list33 = AppendPairProgram.listgen(intArray21);
        List list34 = AppendPairProgram.listgen(intArray21);
        List list35 = AppendPairProgram.listgen(intArray21);
        List list36 = AppendPairProgram.listgen(intArray21);
        appendPairProgram0.TestStudentSubmission(list36, (int) (short) 1);
        int[] intArray39 = new int[] {};
        List list40 = AppendPairProgram.listgen(intArray39);
        List list41 = AppendPairProgram.listgen(intArray39);
        List list42 = AppendPairProgram.listgen(intArray39);
        List list43 = AppendPairProgram.listgen(intArray39);
        appendPairProgram0.TestStudentSubmission(list43, (int) (short) 100);
        int[] intArray46 = new int[] {};
        List list47 = AppendPairProgram.listgen(intArray46);
        List list48 = AppendPairProgram.listgen(intArray46);
        List list49 = AppendPairProgram.listgen(intArray46);
        List list50 = AppendPairProgram.listgen(intArray46);
        List list51 = AppendPairProgram.listgen(intArray46);
        List list52 = AppendPairProgram.listgen(intArray46);
        List list53 = AppendPairProgram.listgen(intArray46);
        List list54 = AppendPairProgram.listgen(intArray46);
        List list55 = AppendPairProgram.listgen(intArray46);
        List list56 = AppendPairProgram.listgen(intArray46);
        List list57 = AppendPairProgram.listgen(intArray46);
        List list58 = AppendPairProgram.listgen(intArray46);
        List list59 = AppendPairProgram.listgen(intArray46);
        List list60 = AppendPairProgram.listgen(intArray46);
        List list61 = AppendPairProgram.listgen(intArray46);
        List list62 = AppendPairProgram.listgen(intArray46);
        appendPairProgram0.TestStudentSubmission(list62, (int) (byte) 10);
        int[] intArray65 = new int[] {};
        List list66 = AppendPairProgram.listgen(intArray65);
        List list67 = AppendPairProgram.listgen(intArray65);
        appendPairProgram0.TestStudentSubmission(list67, (int) (byte) 100);
        java.lang.Class<?> wildcardClass70 = list67.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]");
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(list61);
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[]");
        org.junit.Assert.assertNotNull(list66);
        org.junit.Assert.assertNotNull(list67);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        List list9 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list9, (int) (short) -1);
        int[] intArray13 = new int[] { (byte) 10 };
        List list14 = AppendPairProgram.listgen(intArray13);
        List list15 = AppendPairProgram.listgen(intArray13);
        List list16 = AppendPairProgram.listgen(intArray13);
        List list17 = AppendPairProgram.listgen(intArray13);
        List list18 = AppendPairProgram.listgen(intArray13);
        List list19 = AppendPairProgram.listgen(intArray13);
        List list20 = AppendPairProgram.listgen(intArray13);
        List list21 = AppendPairProgram.listgen(intArray13);
        List list22 = AppendPairProgram.listgen(intArray13);
        appendPairProgram0.TestStudentSubmission(list22, (int) '#');
        int[] intArray25 = new int[] {};
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        List list31 = AppendPairProgram.listgen(intArray25);
        List list32 = AppendPairProgram.listgen(intArray25);
        List list33 = AppendPairProgram.listgen(intArray25);
        List list34 = AppendPairProgram.listgen(intArray25);
        List list35 = AppendPairProgram.listgen(intArray25);
        List list36 = AppendPairProgram.listgen(intArray25);
        List list37 = AppendPairProgram.listgen(intArray25);
        List list38 = AppendPairProgram.listgen(intArray25);
        List list39 = AppendPairProgram.listgen(intArray25);
        List list40 = AppendPairProgram.listgen(intArray25);
        List list41 = AppendPairProgram.listgen(intArray25);
        List list42 = AppendPairProgram.listgen(intArray25);
        List list43 = AppendPairProgram.listgen(intArray25);
        List list44 = AppendPairProgram.listgen(intArray25);
        List list45 = AppendPairProgram.listgen(intArray25);
        List list46 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list46, (int) (short) -1);
        int[] intArray49 = new int[] {};
        List list50 = AppendPairProgram.listgen(intArray49);
        List list51 = AppendPairProgram.listgen(intArray49);
        List list52 = AppendPairProgram.listgen(intArray49);
        List list53 = AppendPairProgram.listgen(intArray49);
        List list54 = AppendPairProgram.listgen(intArray49);
        List list55 = AppendPairProgram.listgen(intArray49);
        List list56 = AppendPairProgram.listgen(intArray49);
        appendPairProgram0.TestStudentSubmission(list56, 10);
        java.lang.Class<?> wildcardClass59 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10]");
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[]");
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        List list9 = AppendPairProgram.listgen(intArray5);
        List list10 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list10, 100);
        List list13 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list13, (-1));
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray10 = new int[] { (byte) 10 };
        List list11 = AppendPairProgram.listgen(intArray10);
        List list12 = AppendPairProgram.listgen(intArray10);
        List list13 = AppendPairProgram.listgen(intArray10);
        List list14 = AppendPairProgram.listgen(intArray10);
        List list15 = AppendPairProgram.listgen(intArray10);
        List list16 = AppendPairProgram.listgen(intArray10);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 1);
        int[] intArray20 = new int[] { (byte) 10 };
        List list21 = AppendPairProgram.listgen(intArray20);
        List list22 = AppendPairProgram.listgen(intArray20);
        List list23 = AppendPairProgram.listgen(intArray20);
        List list24 = AppendPairProgram.listgen(intArray20);
        List list25 = AppendPairProgram.listgen(intArray20);
        List list26 = AppendPairProgram.listgen(intArray20);
        List list27 = AppendPairProgram.listgen(intArray20);
        appendPairProgram0.TestStudentSubmission(list27, (int) '4');
        int[] intArray30 = new int[] {};
        List list31 = AppendPairProgram.listgen(intArray30);
        List list32 = AppendPairProgram.listgen(intArray30);
        List list33 = AppendPairProgram.listgen(intArray30);
        List list34 = AppendPairProgram.listgen(intArray30);
        List list35 = AppendPairProgram.listgen(intArray30);
        List list36 = AppendPairProgram.listgen(intArray30);
        List list37 = AppendPairProgram.listgen(intArray30);
        List list38 = AppendPairProgram.listgen(intArray30);
        List list39 = AppendPairProgram.listgen(intArray30);
        List list40 = AppendPairProgram.listgen(intArray30);
        appendPairProgram0.TestStudentSubmission(list40, 1);
        java.lang.Class<?> wildcardClass43 = list40.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10]");
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10]");
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]");
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list24, (int) (short) 0);
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list29, 100);
        int[] intArray33 = new int[] { (byte) 10 };
        List list34 = AppendPairProgram.listgen(intArray33);
        appendPairProgram0.TestStudentSubmission(list34, (-1));
        int[] intArray37 = new int[] {};
        List list38 = AppendPairProgram.listgen(intArray37);
        List list39 = AppendPairProgram.listgen(intArray37);
        List list40 = AppendPairProgram.listgen(intArray37);
        List list41 = AppendPairProgram.listgen(intArray37);
        List list42 = AppendPairProgram.listgen(intArray37);
        List list43 = AppendPairProgram.listgen(intArray37);
        List list44 = AppendPairProgram.listgen(intArray37);
        List list45 = AppendPairProgram.listgen(intArray37);
        List list46 = AppendPairProgram.listgen(intArray37);
        List list47 = AppendPairProgram.listgen(intArray37);
        List list48 = AppendPairProgram.listgen(intArray37);
        List list49 = AppendPairProgram.listgen(intArray37);
        List list50 = AppendPairProgram.listgen(intArray37);
        List list51 = AppendPairProgram.listgen(intArray37);
        appendPairProgram0.TestStudentSubmission(list51, (int) (short) 100);
        int[] intArray55 = new int[] { (byte) 10 };
        List list56 = AppendPairProgram.listgen(intArray55);
        List list57 = AppendPairProgram.listgen(intArray55);
        List list58 = AppendPairProgram.listgen(intArray55);
        List list59 = AppendPairProgram.listgen(intArray55);
        List list60 = AppendPairProgram.listgen(intArray55);
        List list61 = AppendPairProgram.listgen(intArray55);
        List list62 = AppendPairProgram.listgen(intArray55);
        List list63 = AppendPairProgram.listgen(intArray55);
        List list64 = AppendPairProgram.listgen(intArray55);
        List list65 = AppendPairProgram.listgen(intArray55);
        appendPairProgram0.TestStudentSubmission(list65, 1);
        int[] intArray68 = new int[] {};
        List list69 = AppendPairProgram.listgen(intArray68);
        List list70 = AppendPairProgram.listgen(intArray68);
        List list71 = AppendPairProgram.listgen(intArray68);
        List list72 = AppendPairProgram.listgen(intArray68);
        List list73 = AppendPairProgram.listgen(intArray68);
        List list74 = AppendPairProgram.listgen(intArray68);
        List list75 = AppendPairProgram.listgen(intArray68);
        List list76 = AppendPairProgram.listgen(intArray68);
        List list77 = AppendPairProgram.listgen(intArray68);
        List list78 = AppendPairProgram.listgen(intArray68);
        List list79 = AppendPairProgram.listgen(intArray68);
        List list80 = AppendPairProgram.listgen(intArray68);
        List list81 = AppendPairProgram.listgen(intArray68);
        List list82 = AppendPairProgram.listgen(intArray68);
        List list83 = AppendPairProgram.listgen(intArray68);
        List list84 = AppendPairProgram.listgen(intArray68);
        List list85 = AppendPairProgram.listgen(intArray68);
        List list86 = AppendPairProgram.listgen(intArray68);
        List list87 = AppendPairProgram.listgen(intArray68);
        List list88 = AppendPairProgram.listgen(intArray68);
        List list89 = AppendPairProgram.listgen(intArray68);
        List list90 = AppendPairProgram.listgen(intArray68);
        appendPairProgram0.TestStudentSubmission(list90, (int) (byte) 100);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10]");
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[]");
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[10]");
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(list61);
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(list63);
        org.junit.Assert.assertNotNull(list64);
        org.junit.Assert.assertNotNull(list65);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[]");
        org.junit.Assert.assertNotNull(list69);
        org.junit.Assert.assertNotNull(list70);
        org.junit.Assert.assertNotNull(list71);
        org.junit.Assert.assertNotNull(list72);
        org.junit.Assert.assertNotNull(list73);
        org.junit.Assert.assertNotNull(list74);
        org.junit.Assert.assertNotNull(list75);
        org.junit.Assert.assertNotNull(list76);
        org.junit.Assert.assertNotNull(list77);
        org.junit.Assert.assertNotNull(list78);
        org.junit.Assert.assertNotNull(list79);
        org.junit.Assert.assertNotNull(list80);
        org.junit.Assert.assertNotNull(list81);
        org.junit.Assert.assertNotNull(list82);
        org.junit.Assert.assertNotNull(list83);
        org.junit.Assert.assertNotNull(list84);
        org.junit.Assert.assertNotNull(list85);
        org.junit.Assert.assertNotNull(list86);
        org.junit.Assert.assertNotNull(list87);
        org.junit.Assert.assertNotNull(list88);
        org.junit.Assert.assertNotNull(list89);
        org.junit.Assert.assertNotNull(list90);
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        int[] intArray4 = new int[] { (-1), (byte) 100, (byte) 1, (byte) 1 };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        List list7 = AppendPairProgram.listgen(intArray4);
        List list8 = AppendPairProgram.listgen(intArray4);
        List list9 = AppendPairProgram.listgen(intArray4);
        List list10 = AppendPairProgram.listgen(intArray4);
        List list11 = AppendPairProgram.listgen(intArray4);
        List list12 = AppendPairProgram.listgen(intArray4);
        List list13 = AppendPairProgram.listgen(intArray4);
        List list14 = AppendPairProgram.listgen(intArray4);
        List list15 = AppendPairProgram.listgen(intArray4);
        List list16 = AppendPairProgram.listgen(intArray4);
        List list17 = AppendPairProgram.listgen(intArray4);
        java.lang.Class<?> wildcardClass18 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 100, 1, 1]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        int[] intArray5 = new int[] { '4', 10, (byte) 1, (byte) 100, (byte) 10 };
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        List list9 = AppendPairProgram.listgen(intArray5);
        List list10 = AppendPairProgram.listgen(intArray5);
        List list11 = AppendPairProgram.listgen(intArray5);
        List list12 = AppendPairProgram.listgen(intArray5);
        java.lang.Class<?> wildcardClass13 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[52, 10, 1, 100, 10]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list24, (int) (short) 0);
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list29, 100);
        int[] intArray33 = new int[] { (byte) 10 };
        List list34 = AppendPairProgram.listgen(intArray33);
        List list35 = AppendPairProgram.listgen(intArray33);
        appendPairProgram0.TestStudentSubmission(list35, 100);
        int[] intArray39 = new int[] { (byte) 10 };
        List list40 = AppendPairProgram.listgen(intArray39);
        List list41 = AppendPairProgram.listgen(intArray39);
        List list42 = AppendPairProgram.listgen(intArray39);
        appendPairProgram0.TestStudentSubmission(list42, (int) (byte) 10);
        int[] intArray45 = new int[] {};
        List list46 = AppendPairProgram.listgen(intArray45);
        List list47 = AppendPairProgram.listgen(intArray45);
        List list48 = AppendPairProgram.listgen(intArray45);
        List list49 = AppendPairProgram.listgen(intArray45);
        List list50 = AppendPairProgram.listgen(intArray45);
        List list51 = AppendPairProgram.listgen(intArray45);
        appendPairProgram0.TestStudentSubmission(list51, (int) 'a');
        List list54 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list54, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10]");
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10]");
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[]");
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, (int) (byte) 10);
        int[] intArray7 = new int[] { (byte) 10 };
        List list8 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list8, 100);
        int[] intArray12 = new int[] { (byte) 10 };
        List list13 = AppendPairProgram.listgen(intArray12);
        List list14 = AppendPairProgram.listgen(intArray12);
        appendPairProgram0.TestStudentSubmission(list14, (int) (short) 10);
        int[] intArray18 = new int[] { (byte) 10 };
        List list19 = AppendPairProgram.listgen(intArray18);
        List list20 = AppendPairProgram.listgen(intArray18);
        List list21 = AppendPairProgram.listgen(intArray18);
        List list22 = AppendPairProgram.listgen(intArray18);
        List list23 = AppendPairProgram.listgen(intArray18);
        List list24 = AppendPairProgram.listgen(intArray18);
        List list25 = AppendPairProgram.listgen(intArray18);
        List list26 = AppendPairProgram.listgen(intArray18);
        List list27 = AppendPairProgram.listgen(intArray18);
        List list28 = AppendPairProgram.listgen(intArray18);
        List list29 = AppendPairProgram.listgen(intArray18);
        List list30 = AppendPairProgram.listgen(intArray18);
        List list31 = AppendPairProgram.listgen(intArray18);
        List list32 = AppendPairProgram.listgen(intArray18);
        List list33 = AppendPairProgram.listgen(intArray18);
        List list34 = AppendPairProgram.listgen(intArray18);
        List list35 = AppendPairProgram.listgen(intArray18);
        List list36 = AppendPairProgram.listgen(intArray18);
        List list37 = AppendPairProgram.listgen(intArray18);
        List list38 = AppendPairProgram.listgen(intArray18);
        List list39 = AppendPairProgram.listgen(intArray18);
        appendPairProgram0.TestStudentSubmission(list39, (int) (byte) -1);
        int[] intArray43 = new int[] { (byte) 10 };
        List list44 = AppendPairProgram.listgen(intArray43);
        List list45 = AppendPairProgram.listgen(intArray43);
        List list46 = AppendPairProgram.listgen(intArray43);
        List list47 = AppendPairProgram.listgen(intArray43);
        List list48 = AppendPairProgram.listgen(intArray43);
        List list49 = AppendPairProgram.listgen(intArray43);
        appendPairProgram0.TestStudentSubmission(list49, 100);
        java.lang.Class<?> wildcardClass52 = list49.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10]");
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[10]");
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[10]");
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        List list14 = AppendPairProgram.listgen(intArray7);
        List list15 = AppendPairProgram.listgen(intArray7);
        List list16 = AppendPairProgram.listgen(intArray7);
        List list17 = AppendPairProgram.listgen(intArray7);
        List list18 = AppendPairProgram.listgen(intArray7);
        List list19 = AppendPairProgram.listgen(intArray7);
        List list20 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list20, (int) '#');
        int[] intArray23 = new int[] {};
        List list24 = AppendPairProgram.listgen(intArray23);
        List list25 = AppendPairProgram.listgen(intArray23);
        List list26 = AppendPairProgram.listgen(intArray23);
        List list27 = AppendPairProgram.listgen(intArray23);
        List list28 = AppendPairProgram.listgen(intArray23);
        List list29 = AppendPairProgram.listgen(intArray23);
        List list30 = AppendPairProgram.listgen(intArray23);
        List list31 = AppendPairProgram.listgen(intArray23);
        List list32 = AppendPairProgram.listgen(intArray23);
        appendPairProgram0.TestStudentSubmission(list32, (int) (short) -1);
        java.lang.Class<?> wildcardClass35 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[]");
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        List list12 = AppendPairProgram.listgen(intArray9);
        List list13 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        List list27 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list27, 100);
        int[] intArray30 = new int[] {};
        List list31 = AppendPairProgram.listgen(intArray30);
        List list32 = AppendPairProgram.listgen(intArray30);
        List list33 = AppendPairProgram.listgen(intArray30);
        List list34 = AppendPairProgram.listgen(intArray30);
        List list35 = AppendPairProgram.listgen(intArray30);
        List list36 = AppendPairProgram.listgen(intArray30);
        List list37 = AppendPairProgram.listgen(intArray30);
        List list38 = AppendPairProgram.listgen(intArray30);
        List list39 = AppendPairProgram.listgen(intArray30);
        List list40 = AppendPairProgram.listgen(intArray30);
        List list41 = AppendPairProgram.listgen(intArray30);
        List list42 = AppendPairProgram.listgen(intArray30);
        List list43 = AppendPairProgram.listgen(intArray30);
        List list44 = AppendPairProgram.listgen(intArray30);
        List list45 = AppendPairProgram.listgen(intArray30);
        List list46 = AppendPairProgram.listgen(intArray30);
        List list47 = AppendPairProgram.listgen(intArray30);
        appendPairProgram0.TestStudentSubmission(list47, (int) (byte) 1);
        int[] intArray51 = new int[] { (byte) 10 };
        List list52 = AppendPairProgram.listgen(intArray51);
        List list53 = AppendPairProgram.listgen(intArray51);
        List list54 = AppendPairProgram.listgen(intArray51);
        List list55 = AppendPairProgram.listgen(intArray51);
        List list56 = AppendPairProgram.listgen(intArray51);
        List list57 = AppendPairProgram.listgen(intArray51);
        List list58 = AppendPairProgram.listgen(intArray51);
        List list59 = AppendPairProgram.listgen(intArray51);
        List list60 = AppendPairProgram.listgen(intArray51);
        appendPairProgram0.TestStudentSubmission(list60, (int) (short) 10);
        java.lang.Class<?> wildcardClass63 = list60.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]");
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[10]");
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        List list7 = AppendPairProgram.listgen(intArray1);
        List list8 = AppendPairProgram.listgen(intArray1);
        List list9 = AppendPairProgram.listgen(intArray1);
        List list10 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list10, (int) (byte) 10);
        int[] intArray13 = new int[] {};
        List list14 = AppendPairProgram.listgen(intArray13);
        List list15 = AppendPairProgram.listgen(intArray13);
        List list16 = AppendPairProgram.listgen(intArray13);
        List list17 = AppendPairProgram.listgen(intArray13);
        List list18 = AppendPairProgram.listgen(intArray13);
        List list19 = AppendPairProgram.listgen(intArray13);
        List list20 = AppendPairProgram.listgen(intArray13);
        List list21 = AppendPairProgram.listgen(intArray13);
        List list22 = AppendPairProgram.listgen(intArray13);
        appendPairProgram0.TestStudentSubmission(list22, (int) '4');
        int[] intArray25 = new int[] {};
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        List list31 = AppendPairProgram.listgen(intArray25);
        List list32 = AppendPairProgram.listgen(intArray25);
        List list33 = AppendPairProgram.listgen(intArray25);
        List list34 = AppendPairProgram.listgen(intArray25);
        List list35 = AppendPairProgram.listgen(intArray25);
        List list36 = AppendPairProgram.listgen(intArray25);
        List list37 = AppendPairProgram.listgen(intArray25);
        List list38 = AppendPairProgram.listgen(intArray25);
        List list39 = AppendPairProgram.listgen(intArray25);
        List list40 = AppendPairProgram.listgen(intArray25);
        List list41 = AppendPairProgram.listgen(intArray25);
        List list42 = AppendPairProgram.listgen(intArray25);
        List list43 = AppendPairProgram.listgen(intArray25);
        List list44 = AppendPairProgram.listgen(intArray25);
        List list45 = AppendPairProgram.listgen(intArray25);
        List list46 = AppendPairProgram.listgen(intArray25);
        List list47 = AppendPairProgram.listgen(intArray25);
        List list48 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list48, (int) (byte) 0);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, (int) (byte) 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list8, (int) (byte) 100);
        int[] intArray12 = new int[] { 0 };
        List list13 = AppendPairProgram.listgen(intArray12);
        appendPairProgram0.TestStudentSubmission(list13, (int) (byte) 0);
        java.lang.Class<?> wildcardClass16 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0]");
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        int[] intArray4 = new int[] { 'a', (byte) -1, 100, (byte) 10 };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        List list7 = AppendPairProgram.listgen(intArray4);
        List list8 = AppendPairProgram.listgen(intArray4);
        List list9 = AppendPairProgram.listgen(intArray4);
        List list10 = AppendPairProgram.listgen(intArray4);
        List list11 = AppendPairProgram.listgen(intArray4);
        List list12 = AppendPairProgram.listgen(intArray4);
        List list13 = AppendPairProgram.listgen(intArray4);
        List list14 = AppendPairProgram.listgen(intArray4);
        List list15 = AppendPairProgram.listgen(intArray4);
        List list16 = AppendPairProgram.listgen(intArray4);
        List list17 = AppendPairProgram.listgen(intArray4);
        java.lang.Class<?> wildcardClass18 = list17.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[97, -1, 100, 10]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        int[] intArray3 = new int[] { 1, '#', (byte) 0 };
        List list4 = AppendPairProgram.listgen(intArray3);
        List list5 = AppendPairProgram.listgen(intArray3);
        java.lang.Class<?> wildcardClass6 = list5.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 35, 0]");
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray2 = new int[] { (byte) 10 };
        List list3 = AppendPairProgram.listgen(intArray2);
        List list4 = AppendPairProgram.listgen(intArray2);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 0);
        List list7 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list7, (int) '#');
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[10]");
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        int[] intArray6 = new int[] { (short) -1, '#', '4', (short) -1, (short) 100, (byte) -1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        List list25 = AppendPairProgram.listgen(intArray6);
        List list26 = AppendPairProgram.listgen(intArray6);
        List list27 = AppendPairProgram.listgen(intArray6);
        List list28 = AppendPairProgram.listgen(intArray6);
        List list29 = AppendPairProgram.listgen(intArray6);
        List list30 = AppendPairProgram.listgen(intArray6);
        List list31 = AppendPairProgram.listgen(intArray6);
        List list32 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass33 = list32.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 35, 52, -1, 100, -1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, 1);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list22, (int) (short) 1);
        int[] intArray25 = new int[] {};
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        List list31 = AppendPairProgram.listgen(intArray25);
        List list32 = AppendPairProgram.listgen(intArray25);
        List list33 = AppendPairProgram.listgen(intArray25);
        List list34 = AppendPairProgram.listgen(intArray25);
        List list35 = AppendPairProgram.listgen(intArray25);
        List list36 = AppendPairProgram.listgen(intArray25);
        List list37 = AppendPairProgram.listgen(intArray25);
        List list38 = AppendPairProgram.listgen(intArray25);
        List list39 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list39, (int) '#');
        int[] intArray42 = new int[] {};
        List list43 = AppendPairProgram.listgen(intArray42);
        List list44 = AppendPairProgram.listgen(intArray42);
        List list45 = AppendPairProgram.listgen(intArray42);
        appendPairProgram0.TestStudentSubmission(list45, 10);
        int[] intArray49 = new int[] { (byte) 10 };
        List list50 = AppendPairProgram.listgen(intArray49);
        List list51 = AppendPairProgram.listgen(intArray49);
        List list52 = AppendPairProgram.listgen(intArray49);
        List list53 = AppendPairProgram.listgen(intArray49);
        List list54 = AppendPairProgram.listgen(intArray49);
        List list55 = AppendPairProgram.listgen(intArray49);
        List list56 = AppendPairProgram.listgen(intArray49);
        List list57 = AppendPairProgram.listgen(intArray49);
        List list58 = AppendPairProgram.listgen(intArray49);
        appendPairProgram0.TestStudentSubmission(list58, (int) (byte) 0);
        int[] intArray61 = new int[] {};
        List list62 = AppendPairProgram.listgen(intArray61);
        List list63 = AppendPairProgram.listgen(intArray61);
        List list64 = AppendPairProgram.listgen(intArray61);
        List list65 = AppendPairProgram.listgen(intArray61);
        List list66 = AppendPairProgram.listgen(intArray61);
        List list67 = AppendPairProgram.listgen(intArray61);
        List list68 = AppendPairProgram.listgen(intArray61);
        List list69 = AppendPairProgram.listgen(intArray61);
        List list70 = AppendPairProgram.listgen(intArray61);
        List list71 = AppendPairProgram.listgen(intArray61);
        List list72 = AppendPairProgram.listgen(intArray61);
        List list73 = AppendPairProgram.listgen(intArray61);
        List list74 = AppendPairProgram.listgen(intArray61);
        List list75 = AppendPairProgram.listgen(intArray61);
        appendPairProgram0.TestStudentSubmission(list75, 100);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]");
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[10]");
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[]");
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(list63);
        org.junit.Assert.assertNotNull(list64);
        org.junit.Assert.assertNotNull(list65);
        org.junit.Assert.assertNotNull(list66);
        org.junit.Assert.assertNotNull(list67);
        org.junit.Assert.assertNotNull(list68);
        org.junit.Assert.assertNotNull(list69);
        org.junit.Assert.assertNotNull(list70);
        org.junit.Assert.assertNotNull(list71);
        org.junit.Assert.assertNotNull(list72);
        org.junit.Assert.assertNotNull(list73);
        org.junit.Assert.assertNotNull(list74);
        org.junit.Assert.assertNotNull(list75);
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        int[] intArray6 = new int[] { 0, (short) 10, (short) -1, '#', (byte) 100, 1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        List list25 = AppendPairProgram.listgen(intArray6);
        List list26 = AppendPairProgram.listgen(intArray6);
        List list27 = AppendPairProgram.listgen(intArray6);
        List list28 = AppendPairProgram.listgen(intArray6);
        List list29 = AppendPairProgram.listgen(intArray6);
        List list30 = AppendPairProgram.listgen(intArray6);
        List list31 = AppendPairProgram.listgen(intArray6);
        List list32 = AppendPairProgram.listgen(intArray6);
        List list33 = AppendPairProgram.listgen(intArray6);
        List list34 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass35 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 10, -1, 35, 100, 1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        int[] intArray6 = new int[] { 0, (short) 10, (short) -1, '#', (byte) 100, 1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        List list25 = AppendPairProgram.listgen(intArray6);
        List list26 = AppendPairProgram.listgen(intArray6);
        List list27 = AppendPairProgram.listgen(intArray6);
        List list28 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass29 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 10, -1, 35, 100, 1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        List list7 = AppendPairProgram.listgen(intArray1);
        List list8 = AppendPairProgram.listgen(intArray1);
        List list9 = AppendPairProgram.listgen(intArray1);
        List list10 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list10, (int) (byte) 10);
        int[] intArray14 = new int[] { 0 };
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (short) 0);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list23, 0);
        java.lang.Class<?> wildcardClass26 = list23.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, (int) (byte) 10);
        int[] intArray7 = new int[] { (byte) 10 };
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list9, (int) (short) -1);
        int[] intArray12 = new int[] {};
        List list13 = AppendPairProgram.listgen(intArray12);
        List list14 = AppendPairProgram.listgen(intArray12);
        List list15 = AppendPairProgram.listgen(intArray12);
        List list16 = AppendPairProgram.listgen(intArray12);
        List list17 = AppendPairProgram.listgen(intArray12);
        List list18 = AppendPairProgram.listgen(intArray12);
        List list19 = AppendPairProgram.listgen(intArray12);
        List list20 = AppendPairProgram.listgen(intArray12);
        List list21 = AppendPairProgram.listgen(intArray12);
        List list22 = AppendPairProgram.listgen(intArray12);
        List list23 = AppendPairProgram.listgen(intArray12);
        List list24 = AppendPairProgram.listgen(intArray12);
        List list25 = AppendPairProgram.listgen(intArray12);
        List list26 = AppendPairProgram.listgen(intArray12);
        List list27 = AppendPairProgram.listgen(intArray12);
        List list28 = AppendPairProgram.listgen(intArray12);
        List list29 = AppendPairProgram.listgen(intArray12);
        List list30 = AppendPairProgram.listgen(intArray12);
        List list31 = AppendPairProgram.listgen(intArray12);
        List list32 = AppendPairProgram.listgen(intArray12);
        List list33 = AppendPairProgram.listgen(intArray12);
        appendPairProgram0.TestStudentSubmission(list33, (int) (short) 1);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, (int) '4');
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list26, (int) (byte) 1);
        int[] intArray29 = new int[] {};
        List list30 = AppendPairProgram.listgen(intArray29);
        List list31 = AppendPairProgram.listgen(intArray29);
        List list32 = AppendPairProgram.listgen(intArray29);
        List list33 = AppendPairProgram.listgen(intArray29);
        List list34 = AppendPairProgram.listgen(intArray29);
        List list35 = AppendPairProgram.listgen(intArray29);
        List list36 = AppendPairProgram.listgen(intArray29);
        List list37 = AppendPairProgram.listgen(intArray29);
        List list38 = AppendPairProgram.listgen(intArray29);
        List list39 = AppendPairProgram.listgen(intArray29);
        appendPairProgram0.TestStudentSubmission(list39, (-1));
        int[] intArray43 = new int[] { 0 };
        List list44 = AppendPairProgram.listgen(intArray43);
        List list45 = AppendPairProgram.listgen(intArray43);
        List list46 = AppendPairProgram.listgen(intArray43);
        List list47 = AppendPairProgram.listgen(intArray43);
        appendPairProgram0.TestStudentSubmission(list47, (int) (short) 100);
        java.lang.Class<?> wildcardClass50 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[]");
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0]");
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        int[] intArray6 = new int[] { 'a', (byte) 100, 0, (byte) 10, '4', 100 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass9 = list8.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[97, 100, 0, 10, 52, 100]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) -1);
        int[] intArray14 = new int[] {};
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 10);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list23, (int) (byte) 0);
        int[] intArray26 = new int[] {};
        List list27 = AppendPairProgram.listgen(intArray26);
        List list28 = AppendPairProgram.listgen(intArray26);
        List list29 = AppendPairProgram.listgen(intArray26);
        List list30 = AppendPairProgram.listgen(intArray26);
        List list31 = AppendPairProgram.listgen(intArray26);
        List list32 = AppendPairProgram.listgen(intArray26);
        appendPairProgram0.TestStudentSubmission(list32, 100);
        int[] intArray36 = new int[] { (byte) 10 };
        List list37 = AppendPairProgram.listgen(intArray36);
        List list38 = AppendPairProgram.listgen(intArray36);
        List list39 = AppendPairProgram.listgen(intArray36);
        List list40 = AppendPairProgram.listgen(intArray36);
        List list41 = AppendPairProgram.listgen(intArray36);
        List list42 = AppendPairProgram.listgen(intArray36);
        List list43 = AppendPairProgram.listgen(intArray36);
        appendPairProgram0.TestStudentSubmission(list43, 100);
        int[] intArray46 = new int[] {};
        List list47 = AppendPairProgram.listgen(intArray46);
        List list48 = AppendPairProgram.listgen(intArray46);
        List list49 = AppendPairProgram.listgen(intArray46);
        List list50 = AppendPairProgram.listgen(intArray46);
        List list51 = AppendPairProgram.listgen(intArray46);
        appendPairProgram0.TestStudentSubmission(list51, 100);
        int[] intArray55 = new int[] { (byte) 10 };
        List list56 = AppendPairProgram.listgen(intArray55);
        List list57 = AppendPairProgram.listgen(intArray55);
        List list58 = AppendPairProgram.listgen(intArray55);
        List list59 = AppendPairProgram.listgen(intArray55);
        List list60 = AppendPairProgram.listgen(intArray55);
        List list61 = AppendPairProgram.listgen(intArray55);
        List list62 = AppendPairProgram.listgen(intArray55);
        List list63 = AppendPairProgram.listgen(intArray55);
        List list64 = AppendPairProgram.listgen(intArray55);
        List list65 = AppendPairProgram.listgen(intArray55);
        List list66 = AppendPairProgram.listgen(intArray55);
        List list67 = AppendPairProgram.listgen(intArray55);
        appendPairProgram0.TestStudentSubmission(list67, (int) (byte) 10);
        java.lang.Class<?> wildcardClass70 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[10]");
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[10]");
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(list61);
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(list63);
        org.junit.Assert.assertNotNull(list64);
        org.junit.Assert.assertNotNull(list65);
        org.junit.Assert.assertNotNull(list66);
        org.junit.Assert.assertNotNull(list67);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        List list9 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list9, (int) (short) -1);
        int[] intArray13 = new int[] { (byte) 10 };
        List list14 = AppendPairProgram.listgen(intArray13);
        List list15 = AppendPairProgram.listgen(intArray13);
        List list16 = AppendPairProgram.listgen(intArray13);
        List list17 = AppendPairProgram.listgen(intArray13);
        List list18 = AppendPairProgram.listgen(intArray13);
        List list19 = AppendPairProgram.listgen(intArray13);
        List list20 = AppendPairProgram.listgen(intArray13);
        List list21 = AppendPairProgram.listgen(intArray13);
        List list22 = AppendPairProgram.listgen(intArray13);
        appendPairProgram0.TestStudentSubmission(list22, (int) '#');
        int[] intArray25 = new int[] {};
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        List list31 = AppendPairProgram.listgen(intArray25);
        List list32 = AppendPairProgram.listgen(intArray25);
        List list33 = AppendPairProgram.listgen(intArray25);
        List list34 = AppendPairProgram.listgen(intArray25);
        List list35 = AppendPairProgram.listgen(intArray25);
        List list36 = AppendPairProgram.listgen(intArray25);
        List list37 = AppendPairProgram.listgen(intArray25);
        List list38 = AppendPairProgram.listgen(intArray25);
        List list39 = AppendPairProgram.listgen(intArray25);
        List list40 = AppendPairProgram.listgen(intArray25);
        List list41 = AppendPairProgram.listgen(intArray25);
        List list42 = AppendPairProgram.listgen(intArray25);
        List list43 = AppendPairProgram.listgen(intArray25);
        List list44 = AppendPairProgram.listgen(intArray25);
        List list45 = AppendPairProgram.listgen(intArray25);
        List list46 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list46, (int) (short) -1);
        int[] intArray49 = new int[] {};
        List list50 = AppendPairProgram.listgen(intArray49);
        List list51 = AppendPairProgram.listgen(intArray49);
        List list52 = AppendPairProgram.listgen(intArray49);
        List list53 = AppendPairProgram.listgen(intArray49);
        List list54 = AppendPairProgram.listgen(intArray49);
        List list55 = AppendPairProgram.listgen(intArray49);
        List list56 = AppendPairProgram.listgen(intArray49);
        appendPairProgram0.TestStudentSubmission(list56, 10);
        java.lang.Class<?> wildcardClass59 = list56.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10]");
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[]");
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        int[] intArray3 = new int[] { 1, '#', (byte) 0 };
        List list4 = AppendPairProgram.listgen(intArray3);
        List list5 = AppendPairProgram.listgen(intArray3);
        List list6 = AppendPairProgram.listgen(intArray3);
        java.lang.Class<?> wildcardClass7 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 35, 0]");
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        List list9 = AppendPairProgram.listgen(intArray5);
        List list10 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list10, 100);
        List list13 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list13, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        int[] intArray2 = new int[] { (byte) 100, (short) 10 };
        List list3 = AppendPairProgram.listgen(intArray2);
        java.lang.Class<?> wildcardClass4 = list3.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[100, 10]");
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        List list9 = AppendPairProgram.listgen(intArray5);
        List list10 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list10, 100);
        int[] intArray14 = new int[] { 0 };
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        List list17 = AppendPairProgram.listgen(intArray14);
        List list18 = AppendPairProgram.listgen(intArray14);
        List list19 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list19, 1);
        java.lang.Class<?> wildcardClass22 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray17 = new int[] { (byte) 10 };
        List list18 = AppendPairProgram.listgen(intArray17);
        List list19 = AppendPairProgram.listgen(intArray17);
        List list20 = AppendPairProgram.listgen(intArray17);
        List list21 = AppendPairProgram.listgen(intArray17);
        List list22 = AppendPairProgram.listgen(intArray17);
        List list23 = AppendPairProgram.listgen(intArray17);
        List list24 = AppendPairProgram.listgen(intArray17);
        List list25 = AppendPairProgram.listgen(intArray17);
        appendPairProgram0.TestStudentSubmission(list25, (int) (byte) 100);
        int[] intArray28 = new int[] {};
        List list29 = AppendPairProgram.listgen(intArray28);
        List list30 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list30, 0);
        int[] intArray34 = new int[] { (byte) 10 };
        List list35 = AppendPairProgram.listgen(intArray34);
        List list36 = AppendPairProgram.listgen(intArray34);
        List list37 = AppendPairProgram.listgen(intArray34);
        List list38 = AppendPairProgram.listgen(intArray34);
        List list39 = AppendPairProgram.listgen(intArray34);
        List list40 = AppendPairProgram.listgen(intArray34);
        List list41 = AppendPairProgram.listgen(intArray34);
        appendPairProgram0.TestStudentSubmission(list41, (int) (byte) 100);
        int[] intArray44 = new int[] {};
        List list45 = AppendPairProgram.listgen(intArray44);
        List list46 = AppendPairProgram.listgen(intArray44);
        List list47 = AppendPairProgram.listgen(intArray44);
        List list48 = AppendPairProgram.listgen(intArray44);
        List list49 = AppendPairProgram.listgen(intArray44);
        List list50 = AppendPairProgram.listgen(intArray44);
        List list51 = AppendPairProgram.listgen(intArray44);
        List list52 = AppendPairProgram.listgen(intArray44);
        appendPairProgram0.TestStudentSubmission(list52, (-1));
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10]");
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[10]");
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[]");
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, (int) (short) -1);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list19, (int) '4');
        int[] intArray22 = new int[] {};
        List list23 = AppendPairProgram.listgen(intArray22);
        List list24 = AppendPairProgram.listgen(intArray22);
        List list25 = AppendPairProgram.listgen(intArray22);
        List list26 = AppendPairProgram.listgen(intArray22);
        List list27 = AppendPairProgram.listgen(intArray22);
        List list28 = AppendPairProgram.listgen(intArray22);
        List list29 = AppendPairProgram.listgen(intArray22);
        List list30 = AppendPairProgram.listgen(intArray22);
        List list31 = AppendPairProgram.listgen(intArray22);
        List list32 = AppendPairProgram.listgen(intArray22);
        List list33 = AppendPairProgram.listgen(intArray22);
        List list34 = AppendPairProgram.listgen(intArray22);
        List list35 = AppendPairProgram.listgen(intArray22);
        List list36 = AppendPairProgram.listgen(intArray22);
        List list37 = AppendPairProgram.listgen(intArray22);
        List list38 = AppendPairProgram.listgen(intArray22);
        List list39 = AppendPairProgram.listgen(intArray22);
        List list40 = AppendPairProgram.listgen(intArray22);
        List list41 = AppendPairProgram.listgen(intArray22);
        List list42 = AppendPairProgram.listgen(intArray22);
        List list43 = AppendPairProgram.listgen(intArray22);
        List list44 = AppendPairProgram.listgen(intArray22);
        List list45 = AppendPairProgram.listgen(intArray22);
        appendPairProgram0.TestStudentSubmission(list45, 100);
        java.lang.Class<?> wildcardClass48 = list45.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]");
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list9, (int) (short) 0);
        int[] intArray12 = new int[] {};
        List list13 = AppendPairProgram.listgen(intArray12);
        List list14 = AppendPairProgram.listgen(intArray12);
        List list15 = AppendPairProgram.listgen(intArray12);
        List list16 = AppendPairProgram.listgen(intArray12);
        List list17 = AppendPairProgram.listgen(intArray12);
        List list18 = AppendPairProgram.listgen(intArray12);
        List list19 = AppendPairProgram.listgen(intArray12);
        List list20 = AppendPairProgram.listgen(intArray12);
        List list21 = AppendPairProgram.listgen(intArray12);
        List list22 = AppendPairProgram.listgen(intArray12);
        appendPairProgram0.TestStudentSubmission(list22, (int) (byte) 0);
        int[] intArray25 = new int[] {};
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        List list31 = AppendPairProgram.listgen(intArray25);
        List list32 = AppendPairProgram.listgen(intArray25);
        List list33 = AppendPairProgram.listgen(intArray25);
        List list34 = AppendPairProgram.listgen(intArray25);
        List list35 = AppendPairProgram.listgen(intArray25);
        List list36 = AppendPairProgram.listgen(intArray25);
        List list37 = AppendPairProgram.listgen(intArray25);
        List list38 = AppendPairProgram.listgen(intArray25);
        List list39 = AppendPairProgram.listgen(intArray25);
        List list40 = AppendPairProgram.listgen(intArray25);
        List list41 = AppendPairProgram.listgen(intArray25);
        List list42 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list42, (int) (byte) 10);
        List list45 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list45, 0);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        int[] intArray1 = new int[] { (byte) 10 };
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        List list7 = AppendPairProgram.listgen(intArray1);
        List list8 = AppendPairProgram.listgen(intArray1);
        List list9 = AppendPairProgram.listgen(intArray1);
        List list10 = AppendPairProgram.listgen(intArray1);
        List list11 = AppendPairProgram.listgen(intArray1);
        List list12 = AppendPairProgram.listgen(intArray1);
        List list13 = AppendPairProgram.listgen(intArray1);
        List list14 = AppendPairProgram.listgen(intArray1);
        List list15 = AppendPairProgram.listgen(intArray1);
        List list16 = AppendPairProgram.listgen(intArray1);
        List list17 = AppendPairProgram.listgen(intArray1);
        List list18 = AppendPairProgram.listgen(intArray1);
        List list19 = AppendPairProgram.listgen(intArray1);
        List list20 = AppendPairProgram.listgen(intArray1);
        List list21 = AppendPairProgram.listgen(intArray1);
        List list22 = AppendPairProgram.listgen(intArray1);
        List list23 = AppendPairProgram.listgen(intArray1);
        List list24 = AppendPairProgram.listgen(intArray1);
        java.lang.Class<?> wildcardClass25 = list24.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[10]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        int[] intArray5 = new int[] { '4', 10, (byte) 1, (byte) 100, (byte) 10 };
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        List list9 = AppendPairProgram.listgen(intArray5);
        java.lang.Class<?> wildcardClass10 = list9.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[52, 10, 1, 100, 10]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        List list9 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list9, (int) (short) -1);
        int[] intArray13 = new int[] { (byte) 10 };
        List list14 = AppendPairProgram.listgen(intArray13);
        List list15 = AppendPairProgram.listgen(intArray13);
        List list16 = AppendPairProgram.listgen(intArray13);
        List list17 = AppendPairProgram.listgen(intArray13);
        List list18 = AppendPairProgram.listgen(intArray13);
        List list19 = AppendPairProgram.listgen(intArray13);
        List list20 = AppendPairProgram.listgen(intArray13);
        List list21 = AppendPairProgram.listgen(intArray13);
        List list22 = AppendPairProgram.listgen(intArray13);
        appendPairProgram0.TestStudentSubmission(list22, 0);
        java.lang.Class<?> wildcardClass25 = list22.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10]");
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray15 = new int[] {};
        List list16 = AppendPairProgram.listgen(intArray15);
        List list17 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list17, (int) (short) 1);
        int[] intArray20 = new int[] {};
        List list21 = AppendPairProgram.listgen(intArray20);
        List list22 = AppendPairProgram.listgen(intArray20);
        List list23 = AppendPairProgram.listgen(intArray20);
        List list24 = AppendPairProgram.listgen(intArray20);
        List list25 = AppendPairProgram.listgen(intArray20);
        List list26 = AppendPairProgram.listgen(intArray20);
        List list27 = AppendPairProgram.listgen(intArray20);
        List list28 = AppendPairProgram.listgen(intArray20);
        List list29 = AppendPairProgram.listgen(intArray20);
        List list30 = AppendPairProgram.listgen(intArray20);
        List list31 = AppendPairProgram.listgen(intArray20);
        List list32 = AppendPairProgram.listgen(intArray20);
        List list33 = AppendPairProgram.listgen(intArray20);
        List list34 = AppendPairProgram.listgen(intArray20);
        List list35 = AppendPairProgram.listgen(intArray20);
        List list36 = AppendPairProgram.listgen(intArray20);
        appendPairProgram0.TestStudentSubmission(list36, 0);
        java.lang.Class<?> wildcardClass39 = list36.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, (int) '4');
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list26, (int) (byte) 1);
        int[] intArray30 = new int[] { 0 };
        List list31 = AppendPairProgram.listgen(intArray30);
        List list32 = AppendPairProgram.listgen(intArray30);
        appendPairProgram0.TestStudentSubmission(list32, (int) 'a');
        int[] intArray36 = new int[] { (byte) 10 };
        List list37 = AppendPairProgram.listgen(intArray36);
        List list38 = AppendPairProgram.listgen(intArray36);
        List list39 = AppendPairProgram.listgen(intArray36);
        List list40 = AppendPairProgram.listgen(intArray36);
        List list41 = AppendPairProgram.listgen(intArray36);
        List list42 = AppendPairProgram.listgen(intArray36);
        List list43 = AppendPairProgram.listgen(intArray36);
        List list44 = AppendPairProgram.listgen(intArray36);
        List list45 = AppendPairProgram.listgen(intArray36);
        List list46 = AppendPairProgram.listgen(intArray36);
        List list47 = AppendPairProgram.listgen(intArray36);
        List list48 = AppendPairProgram.listgen(intArray36);
        List list49 = AppendPairProgram.listgen(intArray36);
        List list50 = AppendPairProgram.listgen(intArray36);
        List list51 = AppendPairProgram.listgen(intArray36);
        appendPairProgram0.TestStudentSubmission(list51, (int) '#');
        java.lang.Class<?> wildcardClass54 = list51.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0]");
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[10]");
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list24, (int) (short) 0);
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list29, 100);
        int[] intArray32 = new int[] {};
        List list33 = AppendPairProgram.listgen(intArray32);
        List list34 = AppendPairProgram.listgen(intArray32);
        List list35 = AppendPairProgram.listgen(intArray32);
        List list36 = AppendPairProgram.listgen(intArray32);
        List list37 = AppendPairProgram.listgen(intArray32);
        List list38 = AppendPairProgram.listgen(intArray32);
        List list39 = AppendPairProgram.listgen(intArray32);
        List list40 = AppendPairProgram.listgen(intArray32);
        appendPairProgram0.TestStudentSubmission(list40, (int) (byte) 100);
        int[] intArray43 = new int[] {};
        List list44 = AppendPairProgram.listgen(intArray43);
        List list45 = AppendPairProgram.listgen(intArray43);
        List list46 = AppendPairProgram.listgen(intArray43);
        List list47 = AppendPairProgram.listgen(intArray43);
        List list48 = AppendPairProgram.listgen(intArray43);
        List list49 = AppendPairProgram.listgen(intArray43);
        List list50 = AppendPairProgram.listgen(intArray43);
        List list51 = AppendPairProgram.listgen(intArray43);
        List list52 = AppendPairProgram.listgen(intArray43);
        List list53 = AppendPairProgram.listgen(intArray43);
        List list54 = AppendPairProgram.listgen(intArray43);
        List list55 = AppendPairProgram.listgen(intArray43);
        List list56 = AppendPairProgram.listgen(intArray43);
        List list57 = AppendPairProgram.listgen(intArray43);
        List list58 = AppendPairProgram.listgen(intArray43);
        List list59 = AppendPairProgram.listgen(intArray43);
        appendPairProgram0.TestStudentSubmission(list59, 0);
        int[] intArray63 = new int[] { 0 };
        List list64 = AppendPairProgram.listgen(intArray63);
        List list65 = AppendPairProgram.listgen(intArray63);
        List list66 = AppendPairProgram.listgen(intArray63);
        List list67 = AppendPairProgram.listgen(intArray63);
        List list68 = AppendPairProgram.listgen(intArray63);
        appendPairProgram0.TestStudentSubmission(list68, (int) (short) 10);
        java.lang.Class<?> wildcardClass71 = list68.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[]");
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0]");
        org.junit.Assert.assertNotNull(list64);
        org.junit.Assert.assertNotNull(list65);
        org.junit.Assert.assertNotNull(list66);
        org.junit.Assert.assertNotNull(list67);
        org.junit.Assert.assertNotNull(list68);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray15 = new int[] {};
        List list16 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 100);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        List list24 = AppendPairProgram.listgen(intArray19);
        List list25 = AppendPairProgram.listgen(intArray19);
        List list26 = AppendPairProgram.listgen(intArray19);
        List list27 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list27, (int) (short) -1);
        int[] intArray31 = new int[] { (byte) 10 };
        List list32 = AppendPairProgram.listgen(intArray31);
        List list33 = AppendPairProgram.listgen(intArray31);
        List list34 = AppendPairProgram.listgen(intArray31);
        List list35 = AppendPairProgram.listgen(intArray31);
        List list36 = AppendPairProgram.listgen(intArray31);
        List list37 = AppendPairProgram.listgen(intArray31);
        List list38 = AppendPairProgram.listgen(intArray31);
        List list39 = AppendPairProgram.listgen(intArray31);
        List list40 = AppendPairProgram.listgen(intArray31);
        List list41 = AppendPairProgram.listgen(intArray31);
        List list42 = AppendPairProgram.listgen(intArray31);
        List list43 = AppendPairProgram.listgen(intArray31);
        List list44 = AppendPairProgram.listgen(intArray31);
        List list45 = AppendPairProgram.listgen(intArray31);
        List list46 = AppendPairProgram.listgen(intArray31);
        List list47 = AppendPairProgram.listgen(intArray31);
        List list48 = AppendPairProgram.listgen(intArray31);
        List list49 = AppendPairProgram.listgen(intArray31);
        List list50 = AppendPairProgram.listgen(intArray31);
        appendPairProgram0.TestStudentSubmission(list50, (int) ' ');
        int[] intArray54 = new int[] { (byte) 10 };
        List list55 = AppendPairProgram.listgen(intArray54);
        List list56 = AppendPairProgram.listgen(intArray54);
        List list57 = AppendPairProgram.listgen(intArray54);
        List list58 = AppendPairProgram.listgen(intArray54);
        appendPairProgram0.TestStudentSubmission(list58, 0);
        java.lang.Class<?> wildcardClass61 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10]");
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[10]");
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, (int) (byte) 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list10, (-1));
        int[] intArray13 = new int[] {};
        List list14 = AppendPairProgram.listgen(intArray13);
        List list15 = AppendPairProgram.listgen(intArray13);
        List list16 = AppendPairProgram.listgen(intArray13);
        List list17 = AppendPairProgram.listgen(intArray13);
        List list18 = AppendPairProgram.listgen(intArray13);
        List list19 = AppendPairProgram.listgen(intArray13);
        List list20 = AppendPairProgram.listgen(intArray13);
        List list21 = AppendPairProgram.listgen(intArray13);
        List list22 = AppendPairProgram.listgen(intArray13);
        List list23 = AppendPairProgram.listgen(intArray13);
        List list24 = AppendPairProgram.listgen(intArray13);
        List list25 = AppendPairProgram.listgen(intArray13);
        List list26 = AppendPairProgram.listgen(intArray13);
        List list27 = AppendPairProgram.listgen(intArray13);
        appendPairProgram0.TestStudentSubmission(list27, (int) (short) -1);
        int[] intArray31 = new int[] { (byte) 10 };
        List list32 = AppendPairProgram.listgen(intArray31);
        List list33 = AppendPairProgram.listgen(intArray31);
        List list34 = AppendPairProgram.listgen(intArray31);
        List list35 = AppendPairProgram.listgen(intArray31);
        List list36 = AppendPairProgram.listgen(intArray31);
        List list37 = AppendPairProgram.listgen(intArray31);
        List list38 = AppendPairProgram.listgen(intArray31);
        List list39 = AppendPairProgram.listgen(intArray31);
        List list40 = AppendPairProgram.listgen(intArray31);
        List list41 = AppendPairProgram.listgen(intArray31);
        List list42 = AppendPairProgram.listgen(intArray31);
        List list43 = AppendPairProgram.listgen(intArray31);
        List list44 = AppendPairProgram.listgen(intArray31);
        List list45 = AppendPairProgram.listgen(intArray31);
        List list46 = AppendPairProgram.listgen(intArray31);
        appendPairProgram0.TestStudentSubmission(list46, 0);
        int[] intArray49 = new int[] {};
        List list50 = AppendPairProgram.listgen(intArray49);
        List list51 = AppendPairProgram.listgen(intArray49);
        appendPairProgram0.TestStudentSubmission(list51, (int) (short) 1);
        java.lang.Class<?> wildcardClass54 = list51.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10]");
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[]");
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, (int) (byte) 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list8, (int) (byte) 100);
        int[] intArray12 = new int[] { 0 };
        List list13 = AppendPairProgram.listgen(intArray12);
        appendPairProgram0.TestStudentSubmission(list13, (int) (byte) 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        List list27 = AppendPairProgram.listgen(intArray16);
        List list28 = AppendPairProgram.listgen(intArray16);
        List list29 = AppendPairProgram.listgen(intArray16);
        List list30 = AppendPairProgram.listgen(intArray16);
        List list31 = AppendPairProgram.listgen(intArray16);
        List list32 = AppendPairProgram.listgen(intArray16);
        List list33 = AppendPairProgram.listgen(intArray16);
        List list34 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list34, (int) (short) 0);
        java.lang.Class<?> wildcardClass37 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0]");
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        int[] intArray1 = new int[] { 0 };
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        List list7 = AppendPairProgram.listgen(intArray1);
        List list8 = AppendPairProgram.listgen(intArray1);
        List list9 = AppendPairProgram.listgen(intArray1);
        List list10 = AppendPairProgram.listgen(intArray1);
        java.lang.Class<?> wildcardClass11 = list10.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[0]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        List list14 = AppendPairProgram.listgen(intArray11);
        List list15 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list15, (int) (byte) -1);
        int[] intArray18 = new int[] {};
        List list19 = AppendPairProgram.listgen(intArray18);
        List list20 = AppendPairProgram.listgen(intArray18);
        List list21 = AppendPairProgram.listgen(intArray18);
        appendPairProgram0.TestStudentSubmission(list21, (int) (short) 10);
        int[] intArray25 = new int[] { (byte) 10 };
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list29, 100);
        int[] intArray33 = new int[] { (byte) 10 };
        List list34 = AppendPairProgram.listgen(intArray33);
        List list35 = AppendPairProgram.listgen(intArray33);
        List list36 = AppendPairProgram.listgen(intArray33);
        List list37 = AppendPairProgram.listgen(intArray33);
        List list38 = AppendPairProgram.listgen(intArray33);
        List list39 = AppendPairProgram.listgen(intArray33);
        List list40 = AppendPairProgram.listgen(intArray33);
        List list41 = AppendPairProgram.listgen(intArray33);
        List list42 = AppendPairProgram.listgen(intArray33);
        appendPairProgram0.TestStudentSubmission(list42, 100);
        java.lang.Class<?> wildcardClass45 = list42.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[10]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10]");
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        int[] intArray6 = new int[] { (byte) 0, (short) -1, ' ', 'a', (byte) 100, (byte) 10 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        List list25 = AppendPairProgram.listgen(intArray6);
        List list26 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass27 = list26.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, -1, 32, 97, 100, 10]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray15 = new int[] {};
        List list16 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 100);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        List list24 = AppendPairProgram.listgen(intArray19);
        List list25 = AppendPairProgram.listgen(intArray19);
        List list26 = AppendPairProgram.listgen(intArray19);
        List list27 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list27, (int) (short) -1);
        int[] intArray31 = new int[] { (byte) 10 };
        List list32 = AppendPairProgram.listgen(intArray31);
        List list33 = AppendPairProgram.listgen(intArray31);
        List list34 = AppendPairProgram.listgen(intArray31);
        List list35 = AppendPairProgram.listgen(intArray31);
        List list36 = AppendPairProgram.listgen(intArray31);
        List list37 = AppendPairProgram.listgen(intArray31);
        List list38 = AppendPairProgram.listgen(intArray31);
        List list39 = AppendPairProgram.listgen(intArray31);
        List list40 = AppendPairProgram.listgen(intArray31);
        appendPairProgram0.TestStudentSubmission(list40, (int) (short) 100);
        int[] intArray44 = new int[] { 0 };
        List list45 = AppendPairProgram.listgen(intArray44);
        List list46 = AppendPairProgram.listgen(intArray44);
        appendPairProgram0.TestStudentSubmission(list46, (int) 'a');
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10]");
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0]");
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        int[] intArray6 = new int[] { 0, (short) 10, (short) -1, '#', (byte) 100, 1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        List list25 = AppendPairProgram.listgen(intArray6);
        List list26 = AppendPairProgram.listgen(intArray6);
        List list27 = AppendPairProgram.listgen(intArray6);
        List list28 = AppendPairProgram.listgen(intArray6);
        List list29 = AppendPairProgram.listgen(intArray6);
        List list30 = AppendPairProgram.listgen(intArray6);
        List list31 = AppendPairProgram.listgen(intArray6);
        List list32 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass33 = list32.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 10, -1, 35, 100, 1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        int[] intArray6 = new int[] { (short) -1, '#', '4', (short) -1, (short) 100, (byte) -1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        List list25 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass26 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 35, 52, -1, 100, -1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray16 = new int[] { (byte) 10 };
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list18, (int) (byte) -1);
        int[] intArray21 = new int[] {};
        List list22 = AppendPairProgram.listgen(intArray21);
        List list23 = AppendPairProgram.listgen(intArray21);
        List list24 = AppendPairProgram.listgen(intArray21);
        List list25 = AppendPairProgram.listgen(intArray21);
        List list26 = AppendPairProgram.listgen(intArray21);
        List list27 = AppendPairProgram.listgen(intArray21);
        List list28 = AppendPairProgram.listgen(intArray21);
        List list29 = AppendPairProgram.listgen(intArray21);
        List list30 = AppendPairProgram.listgen(intArray21);
        List list31 = AppendPairProgram.listgen(intArray21);
        List list32 = AppendPairProgram.listgen(intArray21);
        List list33 = AppendPairProgram.listgen(intArray21);
        List list34 = AppendPairProgram.listgen(intArray21);
        List list35 = AppendPairProgram.listgen(intArray21);
        List list36 = AppendPairProgram.listgen(intArray21);
        List list37 = AppendPairProgram.listgen(intArray21);
        appendPairProgram0.TestStudentSubmission(list37, (int) 'a');
        int[] intArray41 = new int[] { 0 };
        List list42 = AppendPairProgram.listgen(intArray41);
        appendPairProgram0.TestStudentSubmission(list42, 0);
        List list45 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list45, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0]");
        org.junit.Assert.assertNotNull(list42);
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, (int) (byte) 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list10, (-1));
        int[] intArray13 = new int[] {};
        List list14 = AppendPairProgram.listgen(intArray13);
        List list15 = AppendPairProgram.listgen(intArray13);
        List list16 = AppendPairProgram.listgen(intArray13);
        List list17 = AppendPairProgram.listgen(intArray13);
        List list18 = AppendPairProgram.listgen(intArray13);
        List list19 = AppendPairProgram.listgen(intArray13);
        List list20 = AppendPairProgram.listgen(intArray13);
        appendPairProgram0.TestStudentSubmission(list20, (-1));
        int[] intArray24 = new int[] { 0 };
        List list25 = AppendPairProgram.listgen(intArray24);
        List list26 = AppendPairProgram.listgen(intArray24);
        List list27 = AppendPairProgram.listgen(intArray24);
        List list28 = AppendPairProgram.listgen(intArray24);
        List list29 = AppendPairProgram.listgen(intArray24);
        List list30 = AppendPairProgram.listgen(intArray24);
        appendPairProgram0.TestStudentSubmission(list30, (int) (byte) 0);
        java.lang.Class<?> wildcardClass33 = list30.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0]");
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray16 = new int[] { (byte) 10 };
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list18, (int) (byte) -1);
        int[] intArray21 = new int[] {};
        List list22 = AppendPairProgram.listgen(intArray21);
        List list23 = AppendPairProgram.listgen(intArray21);
        List list24 = AppendPairProgram.listgen(intArray21);
        List list25 = AppendPairProgram.listgen(intArray21);
        List list26 = AppendPairProgram.listgen(intArray21);
        List list27 = AppendPairProgram.listgen(intArray21);
        List list28 = AppendPairProgram.listgen(intArray21);
        List list29 = AppendPairProgram.listgen(intArray21);
        List list30 = AppendPairProgram.listgen(intArray21);
        List list31 = AppendPairProgram.listgen(intArray21);
        List list32 = AppendPairProgram.listgen(intArray21);
        List list33 = AppendPairProgram.listgen(intArray21);
        List list34 = AppendPairProgram.listgen(intArray21);
        List list35 = AppendPairProgram.listgen(intArray21);
        List list36 = AppendPairProgram.listgen(intArray21);
        List list37 = AppendPairProgram.listgen(intArray21);
        appendPairProgram0.TestStudentSubmission(list37, (int) 'a');
        int[] intArray41 = new int[] { (byte) 10 };
        List list42 = AppendPairProgram.listgen(intArray41);
        List list43 = AppendPairProgram.listgen(intArray41);
        List list44 = AppendPairProgram.listgen(intArray41);
        List list45 = AppendPairProgram.listgen(intArray41);
        List list46 = AppendPairProgram.listgen(intArray41);
        List list47 = AppendPairProgram.listgen(intArray41);
        List list48 = AppendPairProgram.listgen(intArray41);
        List list49 = AppendPairProgram.listgen(intArray41);
        List list50 = AppendPairProgram.listgen(intArray41);
        List list51 = AppendPairProgram.listgen(intArray41);
        List list52 = AppendPairProgram.listgen(intArray41);
        List list53 = AppendPairProgram.listgen(intArray41);
        List list54 = AppendPairProgram.listgen(intArray41);
        List list55 = AppendPairProgram.listgen(intArray41);
        List list56 = AppendPairProgram.listgen(intArray41);
        List list57 = AppendPairProgram.listgen(intArray41);
        List list58 = AppendPairProgram.listgen(intArray41);
        List list59 = AppendPairProgram.listgen(intArray41);
        List list60 = AppendPairProgram.listgen(intArray41);
        List list61 = AppendPairProgram.listgen(intArray41);
        List list62 = AppendPairProgram.listgen(intArray41);
        appendPairProgram0.TestStudentSubmission(list62, (int) '4');
        java.lang.Class<?> wildcardClass65 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[10]");
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(list61);
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list11, 0);
        int[] intArray15 = new int[] { (byte) 10 };
        List list16 = AppendPairProgram.listgen(intArray15);
        List list17 = AppendPairProgram.listgen(intArray15);
        List list18 = AppendPairProgram.listgen(intArray15);
        List list19 = AppendPairProgram.listgen(intArray15);
        List list20 = AppendPairProgram.listgen(intArray15);
        List list21 = AppendPairProgram.listgen(intArray15);
        List list22 = AppendPairProgram.listgen(intArray15);
        List list23 = AppendPairProgram.listgen(intArray15);
        List list24 = AppendPairProgram.listgen(intArray15);
        List list25 = AppendPairProgram.listgen(intArray15);
        List list26 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list26, (int) (byte) 100);
        int[] intArray30 = new int[] { (byte) 10 };
        List list31 = AppendPairProgram.listgen(intArray30);
        List list32 = AppendPairProgram.listgen(intArray30);
        List list33 = AppendPairProgram.listgen(intArray30);
        List list34 = AppendPairProgram.listgen(intArray30);
        List list35 = AppendPairProgram.listgen(intArray30);
        List list36 = AppendPairProgram.listgen(intArray30);
        List list37 = AppendPairProgram.listgen(intArray30);
        List list38 = AppendPairProgram.listgen(intArray30);
        List list39 = AppendPairProgram.listgen(intArray30);
        List list40 = AppendPairProgram.listgen(intArray30);
        appendPairProgram0.TestStudentSubmission(list40, 1);
        int[] intArray43 = new int[] {};
        List list44 = AppendPairProgram.listgen(intArray43);
        List list45 = AppendPairProgram.listgen(intArray43);
        List list46 = AppendPairProgram.listgen(intArray43);
        appendPairProgram0.TestStudentSubmission(list46, (int) 'a');
        java.lang.Class<?> wildcardClass49 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[10]");
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray12 = new int[] { (byte) 10 };
        List list13 = AppendPairProgram.listgen(intArray12);
        List list14 = AppendPairProgram.listgen(intArray12);
        List list15 = AppendPairProgram.listgen(intArray12);
        appendPairProgram0.TestStudentSubmission(list15, 10);
        int[] intArray19 = new int[] { (short) -1 };
        List list20 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list20, (int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = list20.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10]");
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray16 = new int[] { (byte) 10 };
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list18, (int) (byte) -1);
        int[] intArray21 = new int[] {};
        List list22 = AppendPairProgram.listgen(intArray21);
        List list23 = AppendPairProgram.listgen(intArray21);
        List list24 = AppendPairProgram.listgen(intArray21);
        List list25 = AppendPairProgram.listgen(intArray21);
        List list26 = AppendPairProgram.listgen(intArray21);
        List list27 = AppendPairProgram.listgen(intArray21);
        List list28 = AppendPairProgram.listgen(intArray21);
        List list29 = AppendPairProgram.listgen(intArray21);
        List list30 = AppendPairProgram.listgen(intArray21);
        appendPairProgram0.TestStudentSubmission(list30, (int) (short) -1);
        int[] intArray34 = new int[] { 0 };
        List list35 = AppendPairProgram.listgen(intArray34);
        List list36 = AppendPairProgram.listgen(intArray34);
        List list37 = AppendPairProgram.listgen(intArray34);
        List list38 = AppendPairProgram.listgen(intArray34);
        appendPairProgram0.TestStudentSubmission(list38, (int) (byte) 100);
        java.lang.Class<?> wildcardClass41 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0]");
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        int[] intArray1 = new int[] { (byte) 10 };
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        List list7 = AppendPairProgram.listgen(intArray1);
        List list8 = AppendPairProgram.listgen(intArray1);
        List list9 = AppendPairProgram.listgen(intArray1);
        List list10 = AppendPairProgram.listgen(intArray1);
        List list11 = AppendPairProgram.listgen(intArray1);
        List list12 = AppendPairProgram.listgen(intArray1);
        List list13 = AppendPairProgram.listgen(intArray1);
        List list14 = AppendPairProgram.listgen(intArray1);
        List list15 = AppendPairProgram.listgen(intArray1);
        List list16 = AppendPairProgram.listgen(intArray1);
        List list17 = AppendPairProgram.listgen(intArray1);
        List list18 = AppendPairProgram.listgen(intArray1);
        List list19 = AppendPairProgram.listgen(intArray1);
        List list20 = AppendPairProgram.listgen(intArray1);
        List list21 = AppendPairProgram.listgen(intArray1);
        List list22 = AppendPairProgram.listgen(intArray1);
        List list23 = AppendPairProgram.listgen(intArray1);
        List list24 = AppendPairProgram.listgen(intArray1);
        java.lang.Class<?> wildcardClass25 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[10]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray10 = new int[] { (byte) 10 };
        List list11 = AppendPairProgram.listgen(intArray10);
        List list12 = AppendPairProgram.listgen(intArray10);
        List list13 = AppendPairProgram.listgen(intArray10);
        List list14 = AppendPairProgram.listgen(intArray10);
        List list15 = AppendPairProgram.listgen(intArray10);
        List list16 = AppendPairProgram.listgen(intArray10);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 1);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        List list24 = AppendPairProgram.listgen(intArray19);
        List list25 = AppendPairProgram.listgen(intArray19);
        List list26 = AppendPairProgram.listgen(intArray19);
        List list27 = AppendPairProgram.listgen(intArray19);
        List list28 = AppendPairProgram.listgen(intArray19);
        List list29 = AppendPairProgram.listgen(intArray19);
        List list30 = AppendPairProgram.listgen(intArray19);
        List list31 = AppendPairProgram.listgen(intArray19);
        List list32 = AppendPairProgram.listgen(intArray19);
        List list33 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list33, (int) (byte) 1);
        int[] intArray37 = new int[] { (byte) 10 };
        List list38 = AppendPairProgram.listgen(intArray37);
        List list39 = AppendPairProgram.listgen(intArray37);
        List list40 = AppendPairProgram.listgen(intArray37);
        List list41 = AppendPairProgram.listgen(intArray37);
        List list42 = AppendPairProgram.listgen(intArray37);
        List list43 = AppendPairProgram.listgen(intArray37);
        List list44 = AppendPairProgram.listgen(intArray37);
        List list45 = AppendPairProgram.listgen(intArray37);
        List list46 = AppendPairProgram.listgen(intArray37);
        List list47 = AppendPairProgram.listgen(intArray37);
        appendPairProgram0.TestStudentSubmission(list47, (int) (byte) 100);
        int[] intArray51 = new int[] { (byte) 10 };
        List list52 = AppendPairProgram.listgen(intArray51);
        List list53 = AppendPairProgram.listgen(intArray51);
        List list54 = AppendPairProgram.listgen(intArray51);
        List list55 = AppendPairProgram.listgen(intArray51);
        appendPairProgram0.TestStudentSubmission(list55, (int) (byte) 10);
        java.lang.Class<?> wildcardClass58 = list55.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10]");
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[10]");
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[10]");
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) -1);
        int[] intArray14 = new int[] {};
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 10);
        int[] intArray20 = new int[] { 0 };
        List list21 = AppendPairProgram.listgen(intArray20);
        List list22 = AppendPairProgram.listgen(intArray20);
        List list23 = AppendPairProgram.listgen(intArray20);
        List list24 = AppendPairProgram.listgen(intArray20);
        appendPairProgram0.TestStudentSubmission(list24, (int) (short) 10);
        int[] intArray28 = new int[] { 0 };
        List list29 = AppendPairProgram.listgen(intArray28);
        List list30 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list30, (int) '4');
        java.lang.Class<?> wildcardClass33 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0]");
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray16 = new int[] { (byte) 10 };
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list18, (int) (byte) -1);
        int[] intArray21 = new int[] {};
        List list22 = AppendPairProgram.listgen(intArray21);
        List list23 = AppendPairProgram.listgen(intArray21);
        List list24 = AppendPairProgram.listgen(intArray21);
        List list25 = AppendPairProgram.listgen(intArray21);
        List list26 = AppendPairProgram.listgen(intArray21);
        List list27 = AppendPairProgram.listgen(intArray21);
        List list28 = AppendPairProgram.listgen(intArray21);
        List list29 = AppendPairProgram.listgen(intArray21);
        List list30 = AppendPairProgram.listgen(intArray21);
        List list31 = AppendPairProgram.listgen(intArray21);
        List list32 = AppendPairProgram.listgen(intArray21);
        List list33 = AppendPairProgram.listgen(intArray21);
        List list34 = AppendPairProgram.listgen(intArray21);
        List list35 = AppendPairProgram.listgen(intArray21);
        List list36 = AppendPairProgram.listgen(intArray21);
        List list37 = AppendPairProgram.listgen(intArray21);
        appendPairProgram0.TestStudentSubmission(list37, (int) 'a');
        java.lang.Class<?> wildcardClass40 = list37.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray15 = new int[] {};
        List list16 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 100);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        List list24 = AppendPairProgram.listgen(intArray19);
        List list25 = AppendPairProgram.listgen(intArray19);
        List list26 = AppendPairProgram.listgen(intArray19);
        List list27 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list27, (int) (short) -1);
        int[] intArray31 = new int[] { (byte) 10 };
        List list32 = AppendPairProgram.listgen(intArray31);
        List list33 = AppendPairProgram.listgen(intArray31);
        List list34 = AppendPairProgram.listgen(intArray31);
        List list35 = AppendPairProgram.listgen(intArray31);
        List list36 = AppendPairProgram.listgen(intArray31);
        List list37 = AppendPairProgram.listgen(intArray31);
        List list38 = AppendPairProgram.listgen(intArray31);
        List list39 = AppendPairProgram.listgen(intArray31);
        List list40 = AppendPairProgram.listgen(intArray31);
        List list41 = AppendPairProgram.listgen(intArray31);
        List list42 = AppendPairProgram.listgen(intArray31);
        List list43 = AppendPairProgram.listgen(intArray31);
        List list44 = AppendPairProgram.listgen(intArray31);
        List list45 = AppendPairProgram.listgen(intArray31);
        List list46 = AppendPairProgram.listgen(intArray31);
        List list47 = AppendPairProgram.listgen(intArray31);
        List list48 = AppendPairProgram.listgen(intArray31);
        List list49 = AppendPairProgram.listgen(intArray31);
        List list50 = AppendPairProgram.listgen(intArray31);
        appendPairProgram0.TestStudentSubmission(list50, (int) ' ');
        int[] intArray54 = new int[] { (byte) 10 };
        List list55 = AppendPairProgram.listgen(intArray54);
        List list56 = AppendPairProgram.listgen(intArray54);
        List list57 = AppendPairProgram.listgen(intArray54);
        List list58 = AppendPairProgram.listgen(intArray54);
        appendPairProgram0.TestStudentSubmission(list58, 0);
        java.lang.Class<?> wildcardClass61 = list58.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10]");
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[10]");
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        int[] intArray4 = new int[] { '4', (byte) 100, (short) 10, '4' };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        List list7 = AppendPairProgram.listgen(intArray4);
        List list8 = AppendPairProgram.listgen(intArray4);
        List list9 = AppendPairProgram.listgen(intArray4);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[52, 100, 10, 52]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, (int) (byte) 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list10, (-1));
        int[] intArray13 = new int[] {};
        List list14 = AppendPairProgram.listgen(intArray13);
        List list15 = AppendPairProgram.listgen(intArray13);
        appendPairProgram0.TestStudentSubmission(list15, (int) (byte) 1);
        int[] intArray19 = new int[] { (byte) 10 };
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        List list24 = AppendPairProgram.listgen(intArray19);
        List list25 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list25, (int) (short) -1);
        int[] intArray28 = new int[] {};
        List list29 = AppendPairProgram.listgen(intArray28);
        List list30 = AppendPairProgram.listgen(intArray28);
        List list31 = AppendPairProgram.listgen(intArray28);
        List list32 = AppendPairProgram.listgen(intArray28);
        List list33 = AppendPairProgram.listgen(intArray28);
        List list34 = AppendPairProgram.listgen(intArray28);
        List list35 = AppendPairProgram.listgen(intArray28);
        List list36 = AppendPairProgram.listgen(intArray28);
        List list37 = AppendPairProgram.listgen(intArray28);
        List list38 = AppendPairProgram.listgen(intArray28);
        List list39 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list39, (int) (short) 0);
        int[] intArray43 = new int[] { 0 };
        List list44 = AppendPairProgram.listgen(intArray43);
        List list45 = AppendPairProgram.listgen(intArray43);
        List list46 = AppendPairProgram.listgen(intArray43);
        List list47 = AppendPairProgram.listgen(intArray43);
        List list48 = AppendPairProgram.listgen(intArray43);
        List list49 = AppendPairProgram.listgen(intArray43);
        List list50 = AppendPairProgram.listgen(intArray43);
        List list51 = AppendPairProgram.listgen(intArray43);
        List list52 = AppendPairProgram.listgen(intArray43);
        List list53 = AppendPairProgram.listgen(intArray43);
        appendPairProgram0.TestStudentSubmission(list53, 100);
        java.lang.Class<?> wildcardClass56 = list53.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0]");
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 10);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        List list14 = AppendPairProgram.listgen(intArray11);
        List list15 = AppendPairProgram.listgen(intArray11);
        List list16 = AppendPairProgram.listgen(intArray11);
        List list17 = AppendPairProgram.listgen(intArray11);
        List list18 = AppendPairProgram.listgen(intArray11);
        List list19 = AppendPairProgram.listgen(intArray11);
        List list20 = AppendPairProgram.listgen(intArray11);
        List list21 = AppendPairProgram.listgen(intArray11);
        List list22 = AppendPairProgram.listgen(intArray11);
        List list23 = AppendPairProgram.listgen(intArray11);
        List list24 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list24, (int) (byte) 0);
        int[] intArray27 = new int[] {};
        List list28 = AppendPairProgram.listgen(intArray27);
        appendPairProgram0.TestStudentSubmission(list28, 0);
        int[] intArray31 = new int[] {};
        List list32 = AppendPairProgram.listgen(intArray31);
        List list33 = AppendPairProgram.listgen(intArray31);
        List list34 = AppendPairProgram.listgen(intArray31);
        List list35 = AppendPairProgram.listgen(intArray31);
        List list36 = AppendPairProgram.listgen(intArray31);
        List list37 = AppendPairProgram.listgen(intArray31);
        List list38 = AppendPairProgram.listgen(intArray31);
        List list39 = AppendPairProgram.listgen(intArray31);
        List list40 = AppendPairProgram.listgen(intArray31);
        List list41 = AppendPairProgram.listgen(intArray31);
        List list42 = AppendPairProgram.listgen(intArray31);
        List list43 = AppendPairProgram.listgen(intArray31);
        appendPairProgram0.TestStudentSubmission(list43, (int) '4');
        java.lang.Class<?> wildcardClass46 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[]");
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]");
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, (int) (byte) 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list10, (-1));
        int[] intArray13 = new int[] {};
        List list14 = AppendPairProgram.listgen(intArray13);
        List list15 = AppendPairProgram.listgen(intArray13);
        List list16 = AppendPairProgram.listgen(intArray13);
        List list17 = AppendPairProgram.listgen(intArray13);
        List list18 = AppendPairProgram.listgen(intArray13);
        List list19 = AppendPairProgram.listgen(intArray13);
        List list20 = AppendPairProgram.listgen(intArray13);
        List list21 = AppendPairProgram.listgen(intArray13);
        List list22 = AppendPairProgram.listgen(intArray13);
        List list23 = AppendPairProgram.listgen(intArray13);
        List list24 = AppendPairProgram.listgen(intArray13);
        List list25 = AppendPairProgram.listgen(intArray13);
        List list26 = AppendPairProgram.listgen(intArray13);
        List list27 = AppendPairProgram.listgen(intArray13);
        appendPairProgram0.TestStudentSubmission(list27, (int) (short) -1);
        int[] intArray31 = new int[] { (byte) 10 };
        List list32 = AppendPairProgram.listgen(intArray31);
        List list33 = AppendPairProgram.listgen(intArray31);
        List list34 = AppendPairProgram.listgen(intArray31);
        List list35 = AppendPairProgram.listgen(intArray31);
        List list36 = AppendPairProgram.listgen(intArray31);
        List list37 = AppendPairProgram.listgen(intArray31);
        List list38 = AppendPairProgram.listgen(intArray31);
        List list39 = AppendPairProgram.listgen(intArray31);
        List list40 = AppendPairProgram.listgen(intArray31);
        List list41 = AppendPairProgram.listgen(intArray31);
        List list42 = AppendPairProgram.listgen(intArray31);
        List list43 = AppendPairProgram.listgen(intArray31);
        List list44 = AppendPairProgram.listgen(intArray31);
        List list45 = AppendPairProgram.listgen(intArray31);
        List list46 = AppendPairProgram.listgen(intArray31);
        appendPairProgram0.TestStudentSubmission(list46, 0);
        int[] intArray49 = new int[] {};
        List list50 = AppendPairProgram.listgen(intArray49);
        List list51 = AppendPairProgram.listgen(intArray49);
        appendPairProgram0.TestStudentSubmission(list51, (int) (short) 1);
        int[] intArray55 = new int[] { 0 };
        List list56 = AppendPairProgram.listgen(intArray55);
        appendPairProgram0.TestStudentSubmission(list56, (-1));
        java.lang.Class<?> wildcardClass59 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10]");
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[]");
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0]");
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, (int) (byte) 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list10, (-1));
        int[] intArray13 = new int[] {};
        List list14 = AppendPairProgram.listgen(intArray13);
        List list15 = AppendPairProgram.listgen(intArray13);
        List list16 = AppendPairProgram.listgen(intArray13);
        List list17 = AppendPairProgram.listgen(intArray13);
        List list18 = AppendPairProgram.listgen(intArray13);
        List list19 = AppendPairProgram.listgen(intArray13);
        List list20 = AppendPairProgram.listgen(intArray13);
        appendPairProgram0.TestStudentSubmission(list20, (-1));
        int[] intArray23 = new int[] {};
        List list24 = AppendPairProgram.listgen(intArray23);
        List list25 = AppendPairProgram.listgen(intArray23);
        List list26 = AppendPairProgram.listgen(intArray23);
        List list27 = AppendPairProgram.listgen(intArray23);
        List list28 = AppendPairProgram.listgen(intArray23);
        List list29 = AppendPairProgram.listgen(intArray23);
        List list30 = AppendPairProgram.listgen(intArray23);
        List list31 = AppendPairProgram.listgen(intArray23);
        List list32 = AppendPairProgram.listgen(intArray23);
        List list33 = AppendPairProgram.listgen(intArray23);
        List list34 = AppendPairProgram.listgen(intArray23);
        List list35 = AppendPairProgram.listgen(intArray23);
        List list36 = AppendPairProgram.listgen(intArray23);
        List list37 = AppendPairProgram.listgen(intArray23);
        List list38 = AppendPairProgram.listgen(intArray23);
        List list39 = AppendPairProgram.listgen(intArray23);
        List list40 = AppendPairProgram.listgen(intArray23);
        appendPairProgram0.TestStudentSubmission(list40, (int) (short) 100);
        int[] intArray43 = new int[] {};
        List list44 = AppendPairProgram.listgen(intArray43);
        List list45 = AppendPairProgram.listgen(intArray43);
        List list46 = AppendPairProgram.listgen(intArray43);
        List list47 = AppendPairProgram.listgen(intArray43);
        List list48 = AppendPairProgram.listgen(intArray43);
        List list49 = AppendPairProgram.listgen(intArray43);
        List list50 = AppendPairProgram.listgen(intArray43);
        List list51 = AppendPairProgram.listgen(intArray43);
        List list52 = AppendPairProgram.listgen(intArray43);
        List list53 = AppendPairProgram.listgen(intArray43);
        List list54 = AppendPairProgram.listgen(intArray43);
        List list55 = AppendPairProgram.listgen(intArray43);
        List list56 = AppendPairProgram.listgen(intArray43);
        List list57 = AppendPairProgram.listgen(intArray43);
        List list58 = AppendPairProgram.listgen(intArray43);
        List list59 = AppendPairProgram.listgen(intArray43);
        appendPairProgram0.TestStudentSubmission(list59, (int) (byte) 0);
        java.lang.Class<?> wildcardClass62 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[]");
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        List list9 = AppendPairProgram.listgen(intArray5);
        List list10 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list10, 100);
        int[] intArray14 = new int[] { (byte) 10 };
        List list15 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list15, (int) '#');
        int[] intArray19 = new int[] { (byte) 10 };
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        List list24 = AppendPairProgram.listgen(intArray19);
        List list25 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list25, (int) (short) 1);
        List list28 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list28, (int) '#');
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) -1);
        int[] intArray14 = new int[] {};
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 10);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        List list24 = AppendPairProgram.listgen(intArray19);
        List list25 = AppendPairProgram.listgen(intArray19);
        List list26 = AppendPairProgram.listgen(intArray19);
        List list27 = AppendPairProgram.listgen(intArray19);
        List list28 = AppendPairProgram.listgen(intArray19);
        List list29 = AppendPairProgram.listgen(intArray19);
        List list30 = AppendPairProgram.listgen(intArray19);
        List list31 = AppendPairProgram.listgen(intArray19);
        List list32 = AppendPairProgram.listgen(intArray19);
        List list33 = AppendPairProgram.listgen(intArray19);
        List list34 = AppendPairProgram.listgen(intArray19);
        List list35 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list35, 0);
        int[] intArray39 = new int[] { (byte) 10 };
        List list40 = AppendPairProgram.listgen(intArray39);
        List list41 = AppendPairProgram.listgen(intArray39);
        List list42 = AppendPairProgram.listgen(intArray39);
        List list43 = AppendPairProgram.listgen(intArray39);
        List list44 = AppendPairProgram.listgen(intArray39);
        List list45 = AppendPairProgram.listgen(intArray39);
        List list46 = AppendPairProgram.listgen(intArray39);
        List list47 = AppendPairProgram.listgen(intArray39);
        List list48 = AppendPairProgram.listgen(intArray39);
        List list49 = AppendPairProgram.listgen(intArray39);
        List list50 = AppendPairProgram.listgen(intArray39);
        List list51 = AppendPairProgram.listgen(intArray39);
        List list52 = AppendPairProgram.listgen(intArray39);
        appendPairProgram0.TestStudentSubmission(list52, 10);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10]");
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        int[] intArray4 = new int[] { (-1), (byte) 100, (byte) 1, (byte) 1 };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        List list7 = AppendPairProgram.listgen(intArray4);
        List list8 = AppendPairProgram.listgen(intArray4);
        List list9 = AppendPairProgram.listgen(intArray4);
        List list10 = AppendPairProgram.listgen(intArray4);
        List list11 = AppendPairProgram.listgen(intArray4);
        List list12 = AppendPairProgram.listgen(intArray4);
        List list13 = AppendPairProgram.listgen(intArray4);
        List list14 = AppendPairProgram.listgen(intArray4);
        List list15 = AppendPairProgram.listgen(intArray4);
        List list16 = AppendPairProgram.listgen(intArray4);
        List list17 = AppendPairProgram.listgen(intArray4);
        List list18 = AppendPairProgram.listgen(intArray4);
        java.lang.Class<?> wildcardClass19 = list18.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 100, 1, 1]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray10 = new int[] { (byte) 10 };
        List list11 = AppendPairProgram.listgen(intArray10);
        List list12 = AppendPairProgram.listgen(intArray10);
        List list13 = AppendPairProgram.listgen(intArray10);
        List list14 = AppendPairProgram.listgen(intArray10);
        List list15 = AppendPairProgram.listgen(intArray10);
        List list16 = AppendPairProgram.listgen(intArray10);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 1);
        int[] intArray20 = new int[] { (byte) 10 };
        List list21 = AppendPairProgram.listgen(intArray20);
        List list22 = AppendPairProgram.listgen(intArray20);
        List list23 = AppendPairProgram.listgen(intArray20);
        List list24 = AppendPairProgram.listgen(intArray20);
        List list25 = AppendPairProgram.listgen(intArray20);
        List list26 = AppendPairProgram.listgen(intArray20);
        List list27 = AppendPairProgram.listgen(intArray20);
        appendPairProgram0.TestStudentSubmission(list27, (int) '4');
        int[] intArray30 = new int[] {};
        List list31 = AppendPairProgram.listgen(intArray30);
        List list32 = AppendPairProgram.listgen(intArray30);
        List list33 = AppendPairProgram.listgen(intArray30);
        List list34 = AppendPairProgram.listgen(intArray30);
        List list35 = AppendPairProgram.listgen(intArray30);
        List list36 = AppendPairProgram.listgen(intArray30);
        List list37 = AppendPairProgram.listgen(intArray30);
        List list38 = AppendPairProgram.listgen(intArray30);
        List list39 = AppendPairProgram.listgen(intArray30);
        List list40 = AppendPairProgram.listgen(intArray30);
        appendPairProgram0.TestStudentSubmission(list40, 1);
        java.lang.Class<?> wildcardClass43 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10]");
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10]");
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]");
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray15 = new int[] {};
        List list16 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list16, (int) (short) 100);
        int[] intArray20 = new int[] { 0 };
        List list21 = AppendPairProgram.listgen(intArray20);
        appendPairProgram0.TestStudentSubmission(list21, (int) (short) -1);
        List list24 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list24, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0]");
        org.junit.Assert.assertNotNull(list21);
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, (int) (byte) 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list10, (-1));
        int[] intArray13 = new int[] {};
        List list14 = AppendPairProgram.listgen(intArray13);
        List list15 = AppendPairProgram.listgen(intArray13);
        List list16 = AppendPairProgram.listgen(intArray13);
        List list17 = AppendPairProgram.listgen(intArray13);
        List list18 = AppendPairProgram.listgen(intArray13);
        List list19 = AppendPairProgram.listgen(intArray13);
        List list20 = AppendPairProgram.listgen(intArray13);
        List list21 = AppendPairProgram.listgen(intArray13);
        List list22 = AppendPairProgram.listgen(intArray13);
        List list23 = AppendPairProgram.listgen(intArray13);
        List list24 = AppendPairProgram.listgen(intArray13);
        List list25 = AppendPairProgram.listgen(intArray13);
        List list26 = AppendPairProgram.listgen(intArray13);
        List list27 = AppendPairProgram.listgen(intArray13);
        List list28 = AppendPairProgram.listgen(intArray13);
        List list29 = AppendPairProgram.listgen(intArray13);
        appendPairProgram0.TestStudentSubmission(list29, 0);
        int[] intArray33 = new int[] { (byte) 10 };
        List list34 = AppendPairProgram.listgen(intArray33);
        List list35 = AppendPairProgram.listgen(intArray33);
        List list36 = AppendPairProgram.listgen(intArray33);
        List list37 = AppendPairProgram.listgen(intArray33);
        List list38 = AppendPairProgram.listgen(intArray33);
        List list39 = AppendPairProgram.listgen(intArray33);
        List list40 = AppendPairProgram.listgen(intArray33);
        List list41 = AppendPairProgram.listgen(intArray33);
        List list42 = AppendPairProgram.listgen(intArray33);
        List list43 = AppendPairProgram.listgen(intArray33);
        List list44 = AppendPairProgram.listgen(intArray33);
        appendPairProgram0.TestStudentSubmission(list44, (int) ' ');
        java.lang.Class<?> wildcardClass47 = list44.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10]");
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        List list12 = AppendPairProgram.listgen(intArray9);
        List list13 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        List list27 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list27, 100);
        int[] intArray31 = new int[] { (byte) 10 };
        List list32 = AppendPairProgram.listgen(intArray31);
        List list33 = AppendPairProgram.listgen(intArray31);
        List list34 = AppendPairProgram.listgen(intArray31);
        List list35 = AppendPairProgram.listgen(intArray31);
        List list36 = AppendPairProgram.listgen(intArray31);
        appendPairProgram0.TestStudentSubmission(list36, (int) (byte) 100);
        java.lang.Class<?> wildcardClass39 = list36.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10]");
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, (int) '4');
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list26, (int) (byte) 1);
        int[] intArray30 = new int[] { 0 };
        List list31 = AppendPairProgram.listgen(intArray30);
        List list32 = AppendPairProgram.listgen(intArray30);
        appendPairProgram0.TestStudentSubmission(list32, (int) 'a');
        int[] intArray35 = new int[] {};
        List list36 = AppendPairProgram.listgen(intArray35);
        List list37 = AppendPairProgram.listgen(intArray35);
        List list38 = AppendPairProgram.listgen(intArray35);
        List list39 = AppendPairProgram.listgen(intArray35);
        List list40 = AppendPairProgram.listgen(intArray35);
        List list41 = AppendPairProgram.listgen(intArray35);
        List list42 = AppendPairProgram.listgen(intArray35);
        List list43 = AppendPairProgram.listgen(intArray35);
        List list44 = AppendPairProgram.listgen(intArray35);
        appendPairProgram0.TestStudentSubmission(list44, (int) '#');
        int[] intArray48 = new int[] { (byte) 10 };
        List list49 = AppendPairProgram.listgen(intArray48);
        List list50 = AppendPairProgram.listgen(intArray48);
        List list51 = AppendPairProgram.listgen(intArray48);
        List list52 = AppendPairProgram.listgen(intArray48);
        List list53 = AppendPairProgram.listgen(intArray48);
        List list54 = AppendPairProgram.listgen(intArray48);
        List list55 = AppendPairProgram.listgen(intArray48);
        appendPairProgram0.TestStudentSubmission(list55, (int) 'a');
        int[] intArray58 = new int[] {};
        List list59 = AppendPairProgram.listgen(intArray58);
        List list60 = AppendPairProgram.listgen(intArray58);
        List list61 = AppendPairProgram.listgen(intArray58);
        List list62 = AppendPairProgram.listgen(intArray58);
        List list63 = AppendPairProgram.listgen(intArray58);
        List list64 = AppendPairProgram.listgen(intArray58);
        List list65 = AppendPairProgram.listgen(intArray58);
        List list66 = AppendPairProgram.listgen(intArray58);
        List list67 = AppendPairProgram.listgen(intArray58);
        List list68 = AppendPairProgram.listgen(intArray58);
        List list69 = AppendPairProgram.listgen(intArray58);
        appendPairProgram0.TestStudentSubmission(list69, (int) (short) -1);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0]");
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[]");
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[10]");
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[]");
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(list61);
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(list63);
        org.junit.Assert.assertNotNull(list64);
        org.junit.Assert.assertNotNull(list65);
        org.junit.Assert.assertNotNull(list66);
        org.junit.Assert.assertNotNull(list67);
        org.junit.Assert.assertNotNull(list68);
        org.junit.Assert.assertNotNull(list69);
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray16 = new int[] { (byte) 10 };
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list18, (int) (byte) -1);
        int[] intArray21 = new int[] {};
        List list22 = AppendPairProgram.listgen(intArray21);
        List list23 = AppendPairProgram.listgen(intArray21);
        List list24 = AppendPairProgram.listgen(intArray21);
        List list25 = AppendPairProgram.listgen(intArray21);
        List list26 = AppendPairProgram.listgen(intArray21);
        List list27 = AppendPairProgram.listgen(intArray21);
        List list28 = AppendPairProgram.listgen(intArray21);
        List list29 = AppendPairProgram.listgen(intArray21);
        List list30 = AppendPairProgram.listgen(intArray21);
        List list31 = AppendPairProgram.listgen(intArray21);
        List list32 = AppendPairProgram.listgen(intArray21);
        List list33 = AppendPairProgram.listgen(intArray21);
        List list34 = AppendPairProgram.listgen(intArray21);
        List list35 = AppendPairProgram.listgen(intArray21);
        List list36 = AppendPairProgram.listgen(intArray21);
        List list37 = AppendPairProgram.listgen(intArray21);
        appendPairProgram0.TestStudentSubmission(list37, (int) 'a');
        int[] intArray41 = new int[] { 0 };
        List list42 = AppendPairProgram.listgen(intArray41);
        appendPairProgram0.TestStudentSubmission(list42, 0);
        int[] intArray45 = new int[] {};
        List list46 = AppendPairProgram.listgen(intArray45);
        appendPairProgram0.TestStudentSubmission(list46, (int) (short) 0);
        java.lang.Class<?> wildcardClass49 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0]");
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[]");
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        int[] intArray1 = new int[] { (short) -1 };
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        java.lang.Class<?> wildcardClass6 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[-1]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        int[] intArray4 = new int[] { (-1), (byte) 100, (byte) 1, (byte) 1 };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        List list7 = AppendPairProgram.listgen(intArray4);
        List list8 = AppendPairProgram.listgen(intArray4);
        List list9 = AppendPairProgram.listgen(intArray4);
        List list10 = AppendPairProgram.listgen(intArray4);
        List list11 = AppendPairProgram.listgen(intArray4);
        List list12 = AppendPairProgram.listgen(intArray4);
        List list13 = AppendPairProgram.listgen(intArray4);
        List list14 = AppendPairProgram.listgen(intArray4);
        java.lang.Class<?> wildcardClass15 = list14.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 100, 1, 1]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, (int) (byte) 10);
        int[] intArray7 = new int[] { (byte) 10 };
        List list8 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list8, 100);
        int[] intArray12 = new int[] { (byte) 10 };
        List list13 = AppendPairProgram.listgen(intArray12);
        List list14 = AppendPairProgram.listgen(intArray12);
        appendPairProgram0.TestStudentSubmission(list14, (int) (short) 10);
        int[] intArray18 = new int[] { (byte) 10 };
        List list19 = AppendPairProgram.listgen(intArray18);
        List list20 = AppendPairProgram.listgen(intArray18);
        List list21 = AppendPairProgram.listgen(intArray18);
        List list22 = AppendPairProgram.listgen(intArray18);
        List list23 = AppendPairProgram.listgen(intArray18);
        List list24 = AppendPairProgram.listgen(intArray18);
        List list25 = AppendPairProgram.listgen(intArray18);
        List list26 = AppendPairProgram.listgen(intArray18);
        List list27 = AppendPairProgram.listgen(intArray18);
        List list28 = AppendPairProgram.listgen(intArray18);
        List list29 = AppendPairProgram.listgen(intArray18);
        List list30 = AppendPairProgram.listgen(intArray18);
        List list31 = AppendPairProgram.listgen(intArray18);
        List list32 = AppendPairProgram.listgen(intArray18);
        List list33 = AppendPairProgram.listgen(intArray18);
        List list34 = AppendPairProgram.listgen(intArray18);
        List list35 = AppendPairProgram.listgen(intArray18);
        List list36 = AppendPairProgram.listgen(intArray18);
        List list37 = AppendPairProgram.listgen(intArray18);
        List list38 = AppendPairProgram.listgen(intArray18);
        List list39 = AppendPairProgram.listgen(intArray18);
        appendPairProgram0.TestStudentSubmission(list39, (int) (byte) -1);
        int[] intArray43 = new int[] { (byte) 10 };
        List list44 = AppendPairProgram.listgen(intArray43);
        List list45 = AppendPairProgram.listgen(intArray43);
        List list46 = AppendPairProgram.listgen(intArray43);
        List list47 = AppendPairProgram.listgen(intArray43);
        List list48 = AppendPairProgram.listgen(intArray43);
        List list49 = AppendPairProgram.listgen(intArray43);
        List list50 = AppendPairProgram.listgen(intArray43);
        List list51 = AppendPairProgram.listgen(intArray43);
        List list52 = AppendPairProgram.listgen(intArray43);
        List list53 = AppendPairProgram.listgen(intArray43);
        List list54 = AppendPairProgram.listgen(intArray43);
        List list55 = AppendPairProgram.listgen(intArray43);
        List list56 = AppendPairProgram.listgen(intArray43);
        List list57 = AppendPairProgram.listgen(intArray43);
        List list58 = AppendPairProgram.listgen(intArray43);
        List list59 = AppendPairProgram.listgen(intArray43);
        List list60 = AppendPairProgram.listgen(intArray43);
        List list61 = AppendPairProgram.listgen(intArray43);
        List list62 = AppendPairProgram.listgen(intArray43);
        appendPairProgram0.TestStudentSubmission(list62, (int) '#');
        java.lang.Class<?> wildcardClass65 = list62.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10]");
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[10]");
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[10]");
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(list61);
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, (int) (short) -1);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list19, (int) (byte) 10);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        int[] intArray4 = new int[] { (-1), (byte) 100, (byte) 1, (byte) 1 };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        List list7 = AppendPairProgram.listgen(intArray4);
        List list8 = AppendPairProgram.listgen(intArray4);
        List list9 = AppendPairProgram.listgen(intArray4);
        List list10 = AppendPairProgram.listgen(intArray4);
        List list11 = AppendPairProgram.listgen(intArray4);
        List list12 = AppendPairProgram.listgen(intArray4);
        List list13 = AppendPairProgram.listgen(intArray4);
        List list14 = AppendPairProgram.listgen(intArray4);
        List list15 = AppendPairProgram.listgen(intArray4);
        List list16 = AppendPairProgram.listgen(intArray4);
        List list17 = AppendPairProgram.listgen(intArray4);
        List list18 = AppendPairProgram.listgen(intArray4);
        List list19 = AppendPairProgram.listgen(intArray4);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 100, 1, 1]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray15 = new int[] {};
        List list16 = AppendPairProgram.listgen(intArray15);
        List list17 = AppendPairProgram.listgen(intArray15);
        List list18 = AppendPairProgram.listgen(intArray15);
        List list19 = AppendPairProgram.listgen(intArray15);
        List list20 = AppendPairProgram.listgen(intArray15);
        List list21 = AppendPairProgram.listgen(intArray15);
        List list22 = AppendPairProgram.listgen(intArray15);
        List list23 = AppendPairProgram.listgen(intArray15);
        List list24 = AppendPairProgram.listgen(intArray15);
        List list25 = AppendPairProgram.listgen(intArray15);
        List list26 = AppendPairProgram.listgen(intArray15);
        List list27 = AppendPairProgram.listgen(intArray15);
        List list28 = AppendPairProgram.listgen(intArray15);
        List list29 = AppendPairProgram.listgen(intArray15);
        List list30 = AppendPairProgram.listgen(intArray15);
        List list31 = AppendPairProgram.listgen(intArray15);
        List list32 = AppendPairProgram.listgen(intArray15);
        List list33 = AppendPairProgram.listgen(intArray15);
        List list34 = AppendPairProgram.listgen(intArray15);
        List list35 = AppendPairProgram.listgen(intArray15);
        List list36 = AppendPairProgram.listgen(intArray15);
        List list37 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list37, (int) (byte) 10);
        java.lang.Class<?> wildcardClass40 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list24, (int) (short) 0);
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list29, 100);
        int[] intArray33 = new int[] { (byte) 10 };
        List list34 = AppendPairProgram.listgen(intArray33);
        appendPairProgram0.TestStudentSubmission(list34, 1);
        List list37 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list37, 10);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10]");
        org.junit.Assert.assertNotNull(list34);
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        List list9 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list9, 100);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) -1);
        int[] intArray14 = new int[] {};
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 10);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list23, (int) (byte) 0);
        int[] intArray26 = new int[] {};
        List list27 = AppendPairProgram.listgen(intArray26);
        List list28 = AppendPairProgram.listgen(intArray26);
        List list29 = AppendPairProgram.listgen(intArray26);
        List list30 = AppendPairProgram.listgen(intArray26);
        List list31 = AppendPairProgram.listgen(intArray26);
        List list32 = AppendPairProgram.listgen(intArray26);
        appendPairProgram0.TestStudentSubmission(list32, 100);
        int[] intArray36 = new int[] { (byte) 10 };
        List list37 = AppendPairProgram.listgen(intArray36);
        List list38 = AppendPairProgram.listgen(intArray36);
        List list39 = AppendPairProgram.listgen(intArray36);
        List list40 = AppendPairProgram.listgen(intArray36);
        List list41 = AppendPairProgram.listgen(intArray36);
        List list42 = AppendPairProgram.listgen(intArray36);
        List list43 = AppendPairProgram.listgen(intArray36);
        appendPairProgram0.TestStudentSubmission(list43, 100);
        int[] intArray47 = new int[] { 0 };
        List list48 = AppendPairProgram.listgen(intArray47);
        List list49 = AppendPairProgram.listgen(intArray47);
        List list50 = AppendPairProgram.listgen(intArray47);
        List list51 = AppendPairProgram.listgen(intArray47);
        appendPairProgram0.TestStudentSubmission(list51, 0);
        List list54 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list54, 100);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[10]");
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0]");
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        List list12 = AppendPairProgram.listgen(intArray9);
        List list13 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        List list27 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list27, 100);
        int[] intArray30 = new int[] {};
        List list31 = AppendPairProgram.listgen(intArray30);
        List list32 = AppendPairProgram.listgen(intArray30);
        List list33 = AppendPairProgram.listgen(intArray30);
        List list34 = AppendPairProgram.listgen(intArray30);
        List list35 = AppendPairProgram.listgen(intArray30);
        List list36 = AppendPairProgram.listgen(intArray30);
        List list37 = AppendPairProgram.listgen(intArray30);
        List list38 = AppendPairProgram.listgen(intArray30);
        List list39 = AppendPairProgram.listgen(intArray30);
        List list40 = AppendPairProgram.listgen(intArray30);
        List list41 = AppendPairProgram.listgen(intArray30);
        List list42 = AppendPairProgram.listgen(intArray30);
        List list43 = AppendPairProgram.listgen(intArray30);
        List list44 = AppendPairProgram.listgen(intArray30);
        List list45 = AppendPairProgram.listgen(intArray30);
        List list46 = AppendPairProgram.listgen(intArray30);
        List list47 = AppendPairProgram.listgen(intArray30);
        appendPairProgram0.TestStudentSubmission(list47, (int) (byte) 1);
        java.lang.Class<?> wildcardClass50 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]");
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        int[] intArray4 = new int[] { (-1), (byte) 100, (byte) 1, (byte) 1 };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        List list7 = AppendPairProgram.listgen(intArray4);
        List list8 = AppendPairProgram.listgen(intArray4);
        List list9 = AppendPairProgram.listgen(intArray4);
        List list10 = AppendPairProgram.listgen(intArray4);
        List list11 = AppendPairProgram.listgen(intArray4);
        java.lang.Class<?> wildcardClass12 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 100, 1, 1]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray17 = new int[] { 0 };
        List list18 = AppendPairProgram.listgen(intArray17);
        List list19 = AppendPairProgram.listgen(intArray17);
        List list20 = AppendPairProgram.listgen(intArray17);
        appendPairProgram0.TestStudentSubmission(list20, (int) (short) -1);
        int[] intArray24 = new int[] { (byte) 10 };
        List list25 = AppendPairProgram.listgen(intArray24);
        List list26 = AppendPairProgram.listgen(intArray24);
        List list27 = AppendPairProgram.listgen(intArray24);
        List list28 = AppendPairProgram.listgen(intArray24);
        List list29 = AppendPairProgram.listgen(intArray24);
        List list30 = AppendPairProgram.listgen(intArray24);
        List list31 = AppendPairProgram.listgen(intArray24);
        List list32 = AppendPairProgram.listgen(intArray24);
        List list33 = AppendPairProgram.listgen(intArray24);
        List list34 = AppendPairProgram.listgen(intArray24);
        List list35 = AppendPairProgram.listgen(intArray24);
        List list36 = AppendPairProgram.listgen(intArray24);
        List list37 = AppendPairProgram.listgen(intArray24);
        List list38 = AppendPairProgram.listgen(intArray24);
        List list39 = AppendPairProgram.listgen(intArray24);
        List list40 = AppendPairProgram.listgen(intArray24);
        appendPairProgram0.TestStudentSubmission(list40, 100);
        int[] intArray44 = new int[] { 0 };
        List list45 = AppendPairProgram.listgen(intArray44);
        List list46 = AppendPairProgram.listgen(intArray44);
        List list47 = AppendPairProgram.listgen(intArray44);
        List list48 = AppendPairProgram.listgen(intArray44);
        List list49 = AppendPairProgram.listgen(intArray44);
        List list50 = AppendPairProgram.listgen(intArray44);
        appendPairProgram0.TestStudentSubmission(list50, (int) (byte) -1);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0]");
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[10]");
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0]");
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, 1);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list22, (int) (short) 1);
        int[] intArray26 = new int[] { (byte) 10 };
        List list27 = AppendPairProgram.listgen(intArray26);
        List list28 = AppendPairProgram.listgen(intArray26);
        List list29 = AppendPairProgram.listgen(intArray26);
        List list30 = AppendPairProgram.listgen(intArray26);
        List list31 = AppendPairProgram.listgen(intArray26);
        List list32 = AppendPairProgram.listgen(intArray26);
        appendPairProgram0.TestStudentSubmission(list32, (int) (short) 1);
        java.lang.Class<?> wildcardClass35 = list32.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10]");
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray16 = new int[] { (byte) 10 };
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list18, (int) (byte) -1);
        int[] intArray21 = new int[] {};
        List list22 = AppendPairProgram.listgen(intArray21);
        List list23 = AppendPairProgram.listgen(intArray21);
        List list24 = AppendPairProgram.listgen(intArray21);
        List list25 = AppendPairProgram.listgen(intArray21);
        List list26 = AppendPairProgram.listgen(intArray21);
        List list27 = AppendPairProgram.listgen(intArray21);
        List list28 = AppendPairProgram.listgen(intArray21);
        List list29 = AppendPairProgram.listgen(intArray21);
        List list30 = AppendPairProgram.listgen(intArray21);
        List list31 = AppendPairProgram.listgen(intArray21);
        List list32 = AppendPairProgram.listgen(intArray21);
        List list33 = AppendPairProgram.listgen(intArray21);
        List list34 = AppendPairProgram.listgen(intArray21);
        List list35 = AppendPairProgram.listgen(intArray21);
        List list36 = AppendPairProgram.listgen(intArray21);
        appendPairProgram0.TestStudentSubmission(list36, (int) (short) 1);
        List list39 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list39, 10);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list24, (int) (short) 0);
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list29, 100);
        int[] intArray33 = new int[] { (byte) 10 };
        List list34 = AppendPairProgram.listgen(intArray33);
        appendPairProgram0.TestStudentSubmission(list34, 1);
        int[] intArray38 = new int[] { (byte) 10 };
        List list39 = AppendPairProgram.listgen(intArray38);
        List list40 = AppendPairProgram.listgen(intArray38);
        List list41 = AppendPairProgram.listgen(intArray38);
        List list42 = AppendPairProgram.listgen(intArray38);
        List list43 = AppendPairProgram.listgen(intArray38);
        List list44 = AppendPairProgram.listgen(intArray38);
        List list45 = AppendPairProgram.listgen(intArray38);
        List list46 = AppendPairProgram.listgen(intArray38);
        List list47 = AppendPairProgram.listgen(intArray38);
        List list48 = AppendPairProgram.listgen(intArray38);
        List list49 = AppendPairProgram.listgen(intArray38);
        List list50 = AppendPairProgram.listgen(intArray38);
        List list51 = AppendPairProgram.listgen(intArray38);
        List list52 = AppendPairProgram.listgen(intArray38);
        appendPairProgram0.TestStudentSubmission(list52, (int) (byte) 100);
        java.lang.Class<?> wildcardClass55 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10]");
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[10]");
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray16 = new int[] { (byte) 10 };
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list18, (int) (byte) -1);
        int[] intArray21 = new int[] {};
        List list22 = AppendPairProgram.listgen(intArray21);
        List list23 = AppendPairProgram.listgen(intArray21);
        List list24 = AppendPairProgram.listgen(intArray21);
        List list25 = AppendPairProgram.listgen(intArray21);
        List list26 = AppendPairProgram.listgen(intArray21);
        List list27 = AppendPairProgram.listgen(intArray21);
        List list28 = AppendPairProgram.listgen(intArray21);
        List list29 = AppendPairProgram.listgen(intArray21);
        List list30 = AppendPairProgram.listgen(intArray21);
        appendPairProgram0.TestStudentSubmission(list30, (int) (short) -1);
        int[] intArray33 = new int[] {};
        List list34 = AppendPairProgram.listgen(intArray33);
        List list35 = AppendPairProgram.listgen(intArray33);
        List list36 = AppendPairProgram.listgen(intArray33);
        List list37 = AppendPairProgram.listgen(intArray33);
        appendPairProgram0.TestStudentSubmission(list37, 100);
        int[] intArray40 = new int[] {};
        List list41 = AppendPairProgram.listgen(intArray40);
        List list42 = AppendPairProgram.listgen(intArray40);
        List list43 = AppendPairProgram.listgen(intArray40);
        List list44 = AppendPairProgram.listgen(intArray40);
        List list45 = AppendPairProgram.listgen(intArray40);
        List list46 = AppendPairProgram.listgen(intArray40);
        List list47 = AppendPairProgram.listgen(intArray40);
        List list48 = AppendPairProgram.listgen(intArray40);
        List list49 = AppendPairProgram.listgen(intArray40);
        List list50 = AppendPairProgram.listgen(intArray40);
        List list51 = AppendPairProgram.listgen(intArray40);
        List list52 = AppendPairProgram.listgen(intArray40);
        List list53 = AppendPairProgram.listgen(intArray40);
        List list54 = AppendPairProgram.listgen(intArray40);
        appendPairProgram0.TestStudentSubmission(list54, 100);
        java.lang.Class<?> wildcardClass57 = list54.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]");
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[]");
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, 1);
        int[] intArray17 = new int[] { (byte) 10 };
        List list18 = AppendPairProgram.listgen(intArray17);
        List list19 = AppendPairProgram.listgen(intArray17);
        List list20 = AppendPairProgram.listgen(intArray17);
        List list21 = AppendPairProgram.listgen(intArray17);
        List list22 = AppendPairProgram.listgen(intArray17);
        List list23 = AppendPairProgram.listgen(intArray17);
        List list24 = AppendPairProgram.listgen(intArray17);
        List list25 = AppendPairProgram.listgen(intArray17);
        appendPairProgram0.TestStudentSubmission(list25, (int) (short) 0);
        int[] intArray29 = new int[] { (byte) 10 };
        List list30 = AppendPairProgram.listgen(intArray29);
        List list31 = AppendPairProgram.listgen(intArray29);
        appendPairProgram0.TestStudentSubmission(list31, (-1));
        int[] intArray35 = new int[] { 0 };
        List list36 = AppendPairProgram.listgen(intArray35);
        List list37 = AppendPairProgram.listgen(intArray35);
        List list38 = AppendPairProgram.listgen(intArray35);
        appendPairProgram0.TestStudentSubmission(list38, (int) (byte) 100);
        int[] intArray42 = new int[] { (byte) 10 };
        List list43 = AppendPairProgram.listgen(intArray42);
        List list44 = AppendPairProgram.listgen(intArray42);
        List list45 = AppendPairProgram.listgen(intArray42);
        List list46 = AppendPairProgram.listgen(intArray42);
        List list47 = AppendPairProgram.listgen(intArray42);
        List list48 = AppendPairProgram.listgen(intArray42);
        List list49 = AppendPairProgram.listgen(intArray42);
        List list50 = AppendPairProgram.listgen(intArray42);
        List list51 = AppendPairProgram.listgen(intArray42);
        List list52 = AppendPairProgram.listgen(intArray42);
        List list53 = AppendPairProgram.listgen(intArray42);
        List list54 = AppendPairProgram.listgen(intArray42);
        List list55 = AppendPairProgram.listgen(intArray42);
        List list56 = AppendPairProgram.listgen(intArray42);
        List list57 = AppendPairProgram.listgen(intArray42);
        List list58 = AppendPairProgram.listgen(intArray42);
        List list59 = AppendPairProgram.listgen(intArray42);
        appendPairProgram0.TestStudentSubmission(list59, 10);
        java.lang.Class<?> wildcardClass62 = list59.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10]");
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10]");
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0]");
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[10]");
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        int[] intArray1 = new int[] { (short) -1 };
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        java.lang.Class<?> wildcardClass7 = list6.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[-1]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray16 = new int[] { (byte) 10 };
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list22, (int) (byte) 0);
        int[] intArray26 = new int[] { 0 };
        List list27 = AppendPairProgram.listgen(intArray26);
        appendPairProgram0.TestStudentSubmission(list27, 0);
        int[] intArray30 = new int[] {};
        List list31 = AppendPairProgram.listgen(intArray30);
        List list32 = AppendPairProgram.listgen(intArray30);
        List list33 = AppendPairProgram.listgen(intArray30);
        List list34 = AppendPairProgram.listgen(intArray30);
        List list35 = AppendPairProgram.listgen(intArray30);
        List list36 = AppendPairProgram.listgen(intArray30);
        List list37 = AppendPairProgram.listgen(intArray30);
        List list38 = AppendPairProgram.listgen(intArray30);
        List list39 = AppendPairProgram.listgen(intArray30);
        List list40 = AppendPairProgram.listgen(intArray30);
        List list41 = AppendPairProgram.listgen(intArray30);
        List list42 = AppendPairProgram.listgen(intArray30);
        List list43 = AppendPairProgram.listgen(intArray30);
        List list44 = AppendPairProgram.listgen(intArray30);
        List list45 = AppendPairProgram.listgen(intArray30);
        appendPairProgram0.TestStudentSubmission(list45, (int) ' ');
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0]");
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]");
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list9, (int) (short) 0);
        int[] intArray12 = new int[] {};
        List list13 = AppendPairProgram.listgen(intArray12);
        List list14 = AppendPairProgram.listgen(intArray12);
        List list15 = AppendPairProgram.listgen(intArray12);
        List list16 = AppendPairProgram.listgen(intArray12);
        List list17 = AppendPairProgram.listgen(intArray12);
        List list18 = AppendPairProgram.listgen(intArray12);
        List list19 = AppendPairProgram.listgen(intArray12);
        List list20 = AppendPairProgram.listgen(intArray12);
        List list21 = AppendPairProgram.listgen(intArray12);
        List list22 = AppendPairProgram.listgen(intArray12);
        List list23 = AppendPairProgram.listgen(intArray12);
        List list24 = AppendPairProgram.listgen(intArray12);
        List list25 = AppendPairProgram.listgen(intArray12);
        List list26 = AppendPairProgram.listgen(intArray12);
        List list27 = AppendPairProgram.listgen(intArray12);
        List list28 = AppendPairProgram.listgen(intArray12);
        List list29 = AppendPairProgram.listgen(intArray12);
        List list30 = AppendPairProgram.listgen(intArray12);
        List list31 = AppendPairProgram.listgen(intArray12);
        List list32 = AppendPairProgram.listgen(intArray12);
        List list33 = AppendPairProgram.listgen(intArray12);
        List list34 = AppendPairProgram.listgen(intArray12);
        List list35 = AppendPairProgram.listgen(intArray12);
        appendPairProgram0.TestStudentSubmission(list35, (int) (short) -1);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray12 = new int[] { (byte) 10 };
        List list13 = AppendPairProgram.listgen(intArray12);
        List list14 = AppendPairProgram.listgen(intArray12);
        List list15 = AppendPairProgram.listgen(intArray12);
        appendPairProgram0.TestStudentSubmission(list15, 10);
        int[] intArray18 = new int[] {};
        List list19 = AppendPairProgram.listgen(intArray18);
        List list20 = AppendPairProgram.listgen(intArray18);
        List list21 = AppendPairProgram.listgen(intArray18);
        List list22 = AppendPairProgram.listgen(intArray18);
        List list23 = AppendPairProgram.listgen(intArray18);
        appendPairProgram0.TestStudentSubmission(list23, 0);
        int[] intArray26 = new int[] {};
        List list27 = AppendPairProgram.listgen(intArray26);
        List list28 = AppendPairProgram.listgen(intArray26);
        List list29 = AppendPairProgram.listgen(intArray26);
        List list30 = AppendPairProgram.listgen(intArray26);
        List list31 = AppendPairProgram.listgen(intArray26);
        List list32 = AppendPairProgram.listgen(intArray26);
        List list33 = AppendPairProgram.listgen(intArray26);
        List list34 = AppendPairProgram.listgen(intArray26);
        List list35 = AppendPairProgram.listgen(intArray26);
        List list36 = AppendPairProgram.listgen(intArray26);
        List list37 = AppendPairProgram.listgen(intArray26);
        appendPairProgram0.TestStudentSubmission(list37, (int) (byte) 10);
        int[] intArray41 = new int[] { (byte) 10 };
        List list42 = AppendPairProgram.listgen(intArray41);
        List list43 = AppendPairProgram.listgen(intArray41);
        List list44 = AppendPairProgram.listgen(intArray41);
        List list45 = AppendPairProgram.listgen(intArray41);
        List list46 = AppendPairProgram.listgen(intArray41);
        List list47 = AppendPairProgram.listgen(intArray41);
        List list48 = AppendPairProgram.listgen(intArray41);
        List list49 = AppendPairProgram.listgen(intArray41);
        List list50 = AppendPairProgram.listgen(intArray41);
        List list51 = AppendPairProgram.listgen(intArray41);
        List list52 = AppendPairProgram.listgen(intArray41);
        List list53 = AppendPairProgram.listgen(intArray41);
        List list54 = AppendPairProgram.listgen(intArray41);
        List list55 = AppendPairProgram.listgen(intArray41);
        List list56 = AppendPairProgram.listgen(intArray41);
        List list57 = AppendPairProgram.listgen(intArray41);
        List list58 = AppendPairProgram.listgen(intArray41);
        appendPairProgram0.TestStudentSubmission(list58, 1);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10]");
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[10]");
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list24, (int) (short) 0);
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list29, 100);
        int[] intArray33 = new int[] { (byte) 10 };
        List list34 = AppendPairProgram.listgen(intArray33);
        List list35 = AppendPairProgram.listgen(intArray33);
        appendPairProgram0.TestStudentSubmission(list35, 100);
        int[] intArray39 = new int[] { (byte) 10 };
        List list40 = AppendPairProgram.listgen(intArray39);
        List list41 = AppendPairProgram.listgen(intArray39);
        List list42 = AppendPairProgram.listgen(intArray39);
        appendPairProgram0.TestStudentSubmission(list42, (int) (byte) 10);
        java.lang.Class<?> wildcardClass45 = list42.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10]");
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10]");
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        int[] intArray3 = new int[] { 1, '#', (byte) 0 };
        List list4 = AppendPairProgram.listgen(intArray3);
        List list5 = AppendPairProgram.listgen(intArray3);
        java.lang.Class<?> wildcardClass6 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 35, 0]");
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, (int) (byte) 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list10, (-1));
        int[] intArray13 = new int[] {};
        List list14 = AppendPairProgram.listgen(intArray13);
        List list15 = AppendPairProgram.listgen(intArray13);
        List list16 = AppendPairProgram.listgen(intArray13);
        List list17 = AppendPairProgram.listgen(intArray13);
        List list18 = AppendPairProgram.listgen(intArray13);
        List list19 = AppendPairProgram.listgen(intArray13);
        List list20 = AppendPairProgram.listgen(intArray13);
        List list21 = AppendPairProgram.listgen(intArray13);
        List list22 = AppendPairProgram.listgen(intArray13);
        List list23 = AppendPairProgram.listgen(intArray13);
        List list24 = AppendPairProgram.listgen(intArray13);
        List list25 = AppendPairProgram.listgen(intArray13);
        List list26 = AppendPairProgram.listgen(intArray13);
        List list27 = AppendPairProgram.listgen(intArray13);
        appendPairProgram0.TestStudentSubmission(list27, (int) (short) -1);
        int[] intArray31 = new int[] { (byte) 10 };
        List list32 = AppendPairProgram.listgen(intArray31);
        List list33 = AppendPairProgram.listgen(intArray31);
        List list34 = AppendPairProgram.listgen(intArray31);
        List list35 = AppendPairProgram.listgen(intArray31);
        List list36 = AppendPairProgram.listgen(intArray31);
        List list37 = AppendPairProgram.listgen(intArray31);
        List list38 = AppendPairProgram.listgen(intArray31);
        List list39 = AppendPairProgram.listgen(intArray31);
        List list40 = AppendPairProgram.listgen(intArray31);
        List list41 = AppendPairProgram.listgen(intArray31);
        List list42 = AppendPairProgram.listgen(intArray31);
        List list43 = AppendPairProgram.listgen(intArray31);
        List list44 = AppendPairProgram.listgen(intArray31);
        List list45 = AppendPairProgram.listgen(intArray31);
        List list46 = AppendPairProgram.listgen(intArray31);
        appendPairProgram0.TestStudentSubmission(list46, 0);
        int[] intArray49 = new int[] {};
        List list50 = AppendPairProgram.listgen(intArray49);
        List list51 = AppendPairProgram.listgen(intArray49);
        appendPairProgram0.TestStudentSubmission(list51, (int) (short) 1);
        java.lang.Class<?> wildcardClass54 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10]");
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[]");
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        List list14 = AppendPairProgram.listgen(intArray7);
        List list15 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list15, (int) (byte) 0);
        int[] intArray19 = new int[] { (byte) 10 };
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        List list24 = AppendPairProgram.listgen(intArray19);
        List list25 = AppendPairProgram.listgen(intArray19);
        List list26 = AppendPairProgram.listgen(intArray19);
        List list27 = AppendPairProgram.listgen(intArray19);
        List list28 = AppendPairProgram.listgen(intArray19);
        List list29 = AppendPairProgram.listgen(intArray19);
        List list30 = AppendPairProgram.listgen(intArray19);
        List list31 = AppendPairProgram.listgen(intArray19);
        List list32 = AppendPairProgram.listgen(intArray19);
        List list33 = AppendPairProgram.listgen(intArray19);
        List list34 = AppendPairProgram.listgen(intArray19);
        List list35 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list35, (int) ' ');
        java.lang.Class<?> wildcardClass38 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, (int) '4');
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list26, (int) (byte) 1);
        int[] intArray30 = new int[] { 0 };
        List list31 = AppendPairProgram.listgen(intArray30);
        List list32 = AppendPairProgram.listgen(intArray30);
        appendPairProgram0.TestStudentSubmission(list32, (int) 'a');
        int[] intArray36 = new int[] { 0 };
        List list37 = AppendPairProgram.listgen(intArray36);
        List list38 = AppendPairProgram.listgen(intArray36);
        List list39 = AppendPairProgram.listgen(intArray36);
        appendPairProgram0.TestStudentSubmission(list39, (int) (short) 1);
        int[] intArray42 = new int[] {};
        List list43 = AppendPairProgram.listgen(intArray42);
        List list44 = AppendPairProgram.listgen(intArray42);
        List list45 = AppendPairProgram.listgen(intArray42);
        List list46 = AppendPairProgram.listgen(intArray42);
        List list47 = AppendPairProgram.listgen(intArray42);
        List list48 = AppendPairProgram.listgen(intArray42);
        List list49 = AppendPairProgram.listgen(intArray42);
        List list50 = AppendPairProgram.listgen(intArray42);
        List list51 = AppendPairProgram.listgen(intArray42);
        List list52 = AppendPairProgram.listgen(intArray42);
        List list53 = AppendPairProgram.listgen(intArray42);
        List list54 = AppendPairProgram.listgen(intArray42);
        List list55 = AppendPairProgram.listgen(intArray42);
        List list56 = AppendPairProgram.listgen(intArray42);
        List list57 = AppendPairProgram.listgen(intArray42);
        appendPairProgram0.TestStudentSubmission(list57, (int) (byte) -1);
        java.lang.Class<?> wildcardClass60 = list57.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0]");
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0]");
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]");
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, (int) (byte) 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list8, (int) (byte) 100);
        int[] intArray12 = new int[] { (byte) 10 };
        List list13 = AppendPairProgram.listgen(intArray12);
        List list14 = AppendPairProgram.listgen(intArray12);
        List list15 = AppendPairProgram.listgen(intArray12);
        List list16 = AppendPairProgram.listgen(intArray12);
        List list17 = AppendPairProgram.listgen(intArray12);
        List list18 = AppendPairProgram.listgen(intArray12);
        List list19 = AppendPairProgram.listgen(intArray12);
        List list20 = AppendPairProgram.listgen(intArray12);
        List list21 = AppendPairProgram.listgen(intArray12);
        List list22 = AppendPairProgram.listgen(intArray12);
        List list23 = AppendPairProgram.listgen(intArray12);
        List list24 = AppendPairProgram.listgen(intArray12);
        List list25 = AppendPairProgram.listgen(intArray12);
        List list26 = AppendPairProgram.listgen(intArray12);
        List list27 = AppendPairProgram.listgen(intArray12);
        List list28 = AppendPairProgram.listgen(intArray12);
        appendPairProgram0.TestStudentSubmission(list28, (-1));
        int[] intArray32 = new int[] { (byte) 10 };
        List list33 = AppendPairProgram.listgen(intArray32);
        List list34 = AppendPairProgram.listgen(intArray32);
        List list35 = AppendPairProgram.listgen(intArray32);
        List list36 = AppendPairProgram.listgen(intArray32);
        List list37 = AppendPairProgram.listgen(intArray32);
        List list38 = AppendPairProgram.listgen(intArray32);
        List list39 = AppendPairProgram.listgen(intArray32);
        List list40 = AppendPairProgram.listgen(intArray32);
        List list41 = AppendPairProgram.listgen(intArray32);
        List list42 = AppendPairProgram.listgen(intArray32);
        List list43 = AppendPairProgram.listgen(intArray32);
        List list44 = AppendPairProgram.listgen(intArray32);
        List list45 = AppendPairProgram.listgen(intArray32);
        List list46 = AppendPairProgram.listgen(intArray32);
        List list47 = AppendPairProgram.listgen(intArray32);
        List list48 = AppendPairProgram.listgen(intArray32);
        List list49 = AppendPairProgram.listgen(intArray32);
        List list50 = AppendPairProgram.listgen(intArray32);
        List list51 = AppendPairProgram.listgen(intArray32);
        appendPairProgram0.TestStudentSubmission(list51, (int) (byte) 1);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10]");
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[10]");
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, (int) '4');
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list26, (int) (byte) 1);
        int[] intArray30 = new int[] { (byte) 10 };
        List list31 = AppendPairProgram.listgen(intArray30);
        List list32 = AppendPairProgram.listgen(intArray30);
        List list33 = AppendPairProgram.listgen(intArray30);
        List list34 = AppendPairProgram.listgen(intArray30);
        List list35 = AppendPairProgram.listgen(intArray30);
        List list36 = AppendPairProgram.listgen(intArray30);
        List list37 = AppendPairProgram.listgen(intArray30);
        List list38 = AppendPairProgram.listgen(intArray30);
        List list39 = AppendPairProgram.listgen(intArray30);
        List list40 = AppendPairProgram.listgen(intArray30);
        List list41 = AppendPairProgram.listgen(intArray30);
        List list42 = AppendPairProgram.listgen(intArray30);
        appendPairProgram0.TestStudentSubmission(list42, (int) '#');
        List list45 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list45, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[10]");
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        int[] intArray4 = new int[] { 'a', (byte) -1, 100, (byte) 10 };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        List list7 = AppendPairProgram.listgen(intArray4);
        List list8 = AppendPairProgram.listgen(intArray4);
        List list9 = AppendPairProgram.listgen(intArray4);
        List list10 = AppendPairProgram.listgen(intArray4);
        List list11 = AppendPairProgram.listgen(intArray4);
        List list12 = AppendPairProgram.listgen(intArray4);
        List list13 = AppendPairProgram.listgen(intArray4);
        List list14 = AppendPairProgram.listgen(intArray4);
        List list15 = AppendPairProgram.listgen(intArray4);
        List list16 = AppendPairProgram.listgen(intArray4);
        List list17 = AppendPairProgram.listgen(intArray4);
        List list18 = AppendPairProgram.listgen(intArray4);
        List list19 = AppendPairProgram.listgen(intArray4);
        List list20 = AppendPairProgram.listgen(intArray4);
        List list21 = AppendPairProgram.listgen(intArray4);
        java.lang.Class<?> wildcardClass22 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[97, -1, 100, 10]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        int[] intArray6 = new int[] { (short) -1, '#', '4', (short) -1, (short) 100, (byte) -1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        List list25 = AppendPairProgram.listgen(intArray6);
        List list26 = AppendPairProgram.listgen(intArray6);
        List list27 = AppendPairProgram.listgen(intArray6);
        List list28 = AppendPairProgram.listgen(intArray6);
        List list29 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass30 = list29.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 35, 52, -1, 100, -1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        List list14 = AppendPairProgram.listgen(intArray7);
        List list15 = AppendPairProgram.listgen(intArray7);
        List list16 = AppendPairProgram.listgen(intArray7);
        List list17 = AppendPairProgram.listgen(intArray7);
        List list18 = AppendPairProgram.listgen(intArray7);
        List list19 = AppendPairProgram.listgen(intArray7);
        List list20 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list20, (int) '#');
        List list23 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list23, 1);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        List list7 = AppendPairProgram.listgen(intArray1);
        List list8 = AppendPairProgram.listgen(intArray1);
        List list9 = AppendPairProgram.listgen(intArray1);
        List list10 = AppendPairProgram.listgen(intArray1);
        List list11 = AppendPairProgram.listgen(intArray1);
        List list12 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list12, 10);
        java.lang.Class<?> wildcardClass15 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        int[] intArray6 = new int[] { (byte) 0, (short) -1, ' ', 'a', (byte) 100, (byte) 10 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        List list25 = AppendPairProgram.listgen(intArray6);
        List list26 = AppendPairProgram.listgen(intArray6);
        List list27 = AppendPairProgram.listgen(intArray6);
        List list28 = AppendPairProgram.listgen(intArray6);
        List list29 = AppendPairProgram.listgen(intArray6);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, -1, 32, 97, 100, 10]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        List list14 = AppendPairProgram.listgen(intArray11);
        List list15 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list15, (int) (byte) -1);
        int[] intArray18 = new int[] {};
        List list19 = AppendPairProgram.listgen(intArray18);
        List list20 = AppendPairProgram.listgen(intArray18);
        List list21 = AppendPairProgram.listgen(intArray18);
        appendPairProgram0.TestStudentSubmission(list21, (int) (short) 10);
        int[] intArray25 = new int[] { (byte) 10 };
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list29, 100);
        int[] intArray33 = new int[] { (byte) 10 };
        List list34 = AppendPairProgram.listgen(intArray33);
        List list35 = AppendPairProgram.listgen(intArray33);
        List list36 = AppendPairProgram.listgen(intArray33);
        List list37 = AppendPairProgram.listgen(intArray33);
        List list38 = AppendPairProgram.listgen(intArray33);
        List list39 = AppendPairProgram.listgen(intArray33);
        List list40 = AppendPairProgram.listgen(intArray33);
        List list41 = AppendPairProgram.listgen(intArray33);
        List list42 = AppendPairProgram.listgen(intArray33);
        appendPairProgram0.TestStudentSubmission(list42, 100);
        int[] intArray45 = new int[] {};
        List list46 = AppendPairProgram.listgen(intArray45);
        List list47 = AppendPairProgram.listgen(intArray45);
        List list48 = AppendPairProgram.listgen(intArray45);
        List list49 = AppendPairProgram.listgen(intArray45);
        List list50 = AppendPairProgram.listgen(intArray45);
        List list51 = AppendPairProgram.listgen(intArray45);
        List list52 = AppendPairProgram.listgen(intArray45);
        appendPairProgram0.TestStudentSubmission(list52, (int) (short) -1);
        java.lang.Class<?> wildcardClass55 = list52.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[10]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10]");
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[]");
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        int[] intArray4 = new int[] { (byte) 100, 'a', (byte) 0, 'a' };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        List list7 = AppendPairProgram.listgen(intArray4);
        List list8 = AppendPairProgram.listgen(intArray4);
        List list9 = AppendPairProgram.listgen(intArray4);
        List list10 = AppendPairProgram.listgen(intArray4);
        List list11 = AppendPairProgram.listgen(intArray4);
        List list12 = AppendPairProgram.listgen(intArray4);
        List list13 = AppendPairProgram.listgen(intArray4);
        List list14 = AppendPairProgram.listgen(intArray4);
        java.lang.Class<?> wildcardClass15 = list14.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, 97, 0, 97]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        int[] intArray5 = new int[] { '4', 10, (byte) 1, (byte) 100, (byte) 10 };
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        List list9 = AppendPairProgram.listgen(intArray5);
        java.lang.Class<?> wildcardClass10 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[52, 10, 1, 100, 10]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        int[] intArray4 = new int[] { (byte) 100, 'a', (byte) 0, 'a' };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        List list7 = AppendPairProgram.listgen(intArray4);
        List list8 = AppendPairProgram.listgen(intArray4);
        List list9 = AppendPairProgram.listgen(intArray4);
        List list10 = AppendPairProgram.listgen(intArray4);
        List list11 = AppendPairProgram.listgen(intArray4);
        List list12 = AppendPairProgram.listgen(intArray4);
        List list13 = AppendPairProgram.listgen(intArray4);
        List list14 = AppendPairProgram.listgen(intArray4);
        List list15 = AppendPairProgram.listgen(intArray4);
        java.lang.Class<?> wildcardClass16 = list15.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, 97, 0, 97]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list24, (int) (short) 0);
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list29, 100);
        int[] intArray32 = new int[] {};
        List list33 = AppendPairProgram.listgen(intArray32);
        List list34 = AppendPairProgram.listgen(intArray32);
        List list35 = AppendPairProgram.listgen(intArray32);
        List list36 = AppendPairProgram.listgen(intArray32);
        List list37 = AppendPairProgram.listgen(intArray32);
        List list38 = AppendPairProgram.listgen(intArray32);
        List list39 = AppendPairProgram.listgen(intArray32);
        List list40 = AppendPairProgram.listgen(intArray32);
        appendPairProgram0.TestStudentSubmission(list40, (int) (byte) 100);
        int[] intArray43 = new int[] {};
        List list44 = AppendPairProgram.listgen(intArray43);
        List list45 = AppendPairProgram.listgen(intArray43);
        List list46 = AppendPairProgram.listgen(intArray43);
        List list47 = AppendPairProgram.listgen(intArray43);
        List list48 = AppendPairProgram.listgen(intArray43);
        List list49 = AppendPairProgram.listgen(intArray43);
        List list50 = AppendPairProgram.listgen(intArray43);
        List list51 = AppendPairProgram.listgen(intArray43);
        List list52 = AppendPairProgram.listgen(intArray43);
        List list53 = AppendPairProgram.listgen(intArray43);
        List list54 = AppendPairProgram.listgen(intArray43);
        List list55 = AppendPairProgram.listgen(intArray43);
        List list56 = AppendPairProgram.listgen(intArray43);
        List list57 = AppendPairProgram.listgen(intArray43);
        List list58 = AppendPairProgram.listgen(intArray43);
        List list59 = AppendPairProgram.listgen(intArray43);
        appendPairProgram0.TestStudentSubmission(list59, 0);
        int[] intArray62 = new int[] {};
        List list63 = AppendPairProgram.listgen(intArray62);
        List list64 = AppendPairProgram.listgen(intArray62);
        List list65 = AppendPairProgram.listgen(intArray62);
        List list66 = AppendPairProgram.listgen(intArray62);
        List list67 = AppendPairProgram.listgen(intArray62);
        List list68 = AppendPairProgram.listgen(intArray62);
        List list69 = AppendPairProgram.listgen(intArray62);
        List list70 = AppendPairProgram.listgen(intArray62);
        List list71 = AppendPairProgram.listgen(intArray62);
        List list72 = AppendPairProgram.listgen(intArray62);
        List list73 = AppendPairProgram.listgen(intArray62);
        List list74 = AppendPairProgram.listgen(intArray62);
        List list75 = AppendPairProgram.listgen(intArray62);
        appendPairProgram0.TestStudentSubmission(list75, (int) (short) 0);
        int[] intArray79 = new int[] { 0 };
        List list80 = AppendPairProgram.listgen(intArray79);
        List list81 = AppendPairProgram.listgen(intArray79);
        List list82 = AppendPairProgram.listgen(intArray79);
        List list83 = AppendPairProgram.listgen(intArray79);
        appendPairProgram0.TestStudentSubmission(list83, (int) (byte) 1);
        java.lang.Class<?> wildcardClass86 = list83.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[]");
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[]");
        org.junit.Assert.assertNotNull(list63);
        org.junit.Assert.assertNotNull(list64);
        org.junit.Assert.assertNotNull(list65);
        org.junit.Assert.assertNotNull(list66);
        org.junit.Assert.assertNotNull(list67);
        org.junit.Assert.assertNotNull(list68);
        org.junit.Assert.assertNotNull(list69);
        org.junit.Assert.assertNotNull(list70);
        org.junit.Assert.assertNotNull(list71);
        org.junit.Assert.assertNotNull(list72);
        org.junit.Assert.assertNotNull(list73);
        org.junit.Assert.assertNotNull(list74);
        org.junit.Assert.assertNotNull(list75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0]");
        org.junit.Assert.assertNotNull(list80);
        org.junit.Assert.assertNotNull(list81);
        org.junit.Assert.assertNotNull(list82);
        org.junit.Assert.assertNotNull(list83);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, (int) (short) -1);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list19, (int) '4');
        int[] intArray22 = new int[] {};
        List list23 = AppendPairProgram.listgen(intArray22);
        List list24 = AppendPairProgram.listgen(intArray22);
        List list25 = AppendPairProgram.listgen(intArray22);
        List list26 = AppendPairProgram.listgen(intArray22);
        List list27 = AppendPairProgram.listgen(intArray22);
        List list28 = AppendPairProgram.listgen(intArray22);
        List list29 = AppendPairProgram.listgen(intArray22);
        List list30 = AppendPairProgram.listgen(intArray22);
        List list31 = AppendPairProgram.listgen(intArray22);
        List list32 = AppendPairProgram.listgen(intArray22);
        List list33 = AppendPairProgram.listgen(intArray22);
        List list34 = AppendPairProgram.listgen(intArray22);
        List list35 = AppendPairProgram.listgen(intArray22);
        List list36 = AppendPairProgram.listgen(intArray22);
        List list37 = AppendPairProgram.listgen(intArray22);
        List list38 = AppendPairProgram.listgen(intArray22);
        List list39 = AppendPairProgram.listgen(intArray22);
        List list40 = AppendPairProgram.listgen(intArray22);
        appendPairProgram0.TestStudentSubmission(list40, (int) (short) 10);
        java.lang.Class<?> wildcardClass43 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]");
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        int[] intArray4 = new int[] { 'a', (byte) -1, 100, (byte) 10 };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        List list7 = AppendPairProgram.listgen(intArray4);
        List list8 = AppendPairProgram.listgen(intArray4);
        List list9 = AppendPairProgram.listgen(intArray4);
        List list10 = AppendPairProgram.listgen(intArray4);
        List list11 = AppendPairProgram.listgen(intArray4);
        List list12 = AppendPairProgram.listgen(intArray4);
        List list13 = AppendPairProgram.listgen(intArray4);
        List list14 = AppendPairProgram.listgen(intArray4);
        List list15 = AppendPairProgram.listgen(intArray4);
        List list16 = AppendPairProgram.listgen(intArray4);
        List list17 = AppendPairProgram.listgen(intArray4);
        List list18 = AppendPairProgram.listgen(intArray4);
        List list19 = AppendPairProgram.listgen(intArray4);
        List list20 = AppendPairProgram.listgen(intArray4);
        java.lang.Class<?> wildcardClass21 = list20.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[97, -1, 100, 10]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) -1);
        int[] intArray14 = new int[] {};
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 10);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list23, (int) (byte) 0);
        int[] intArray26 = new int[] {};
        List list27 = AppendPairProgram.listgen(intArray26);
        List list28 = AppendPairProgram.listgen(intArray26);
        List list29 = AppendPairProgram.listgen(intArray26);
        List list30 = AppendPairProgram.listgen(intArray26);
        List list31 = AppendPairProgram.listgen(intArray26);
        appendPairProgram0.TestStudentSubmission(list31, (-1));
        int[] intArray35 = new int[] { (byte) 10 };
        List list36 = AppendPairProgram.listgen(intArray35);
        List list37 = AppendPairProgram.listgen(intArray35);
        List list38 = AppendPairProgram.listgen(intArray35);
        List list39 = AppendPairProgram.listgen(intArray35);
        List list40 = AppendPairProgram.listgen(intArray35);
        List list41 = AppendPairProgram.listgen(intArray35);
        List list42 = AppendPairProgram.listgen(intArray35);
        List list43 = AppendPairProgram.listgen(intArray35);
        List list44 = AppendPairProgram.listgen(intArray35);
        List list45 = AppendPairProgram.listgen(intArray35);
        List list46 = AppendPairProgram.listgen(intArray35);
        List list47 = AppendPairProgram.listgen(intArray35);
        List list48 = AppendPairProgram.listgen(intArray35);
        List list49 = AppendPairProgram.listgen(intArray35);
        List list50 = AppendPairProgram.listgen(intArray35);
        List list51 = AppendPairProgram.listgen(intArray35);
        appendPairProgram0.TestStudentSubmission(list51, (int) (byte) -1);
        java.lang.Class<?> wildcardClass54 = list51.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[10]");
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        int[] intArray1 = new int[] { (short) -1 };
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        java.lang.Class<?> wildcardClass7 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[-1]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        int[] intArray1 = new int[] { 0 };
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        List list7 = AppendPairProgram.listgen(intArray1);
        List list8 = AppendPairProgram.listgen(intArray1);
        List list9 = AppendPairProgram.listgen(intArray1);
        List list10 = AppendPairProgram.listgen(intArray1);
        List list11 = AppendPairProgram.listgen(intArray1);
        List list12 = AppendPairProgram.listgen(intArray1);
        List list13 = AppendPairProgram.listgen(intArray1);
        java.lang.Class<?> wildcardClass14 = list13.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[0]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        int[] intArray0 = new int[] {};
        List list1 = AppendPairProgram.listgen(intArray0);
        List list2 = AppendPairProgram.listgen(intArray0);
        List list3 = AppendPairProgram.listgen(intArray0);
        List list4 = AppendPairProgram.listgen(intArray0);
        List list5 = AppendPairProgram.listgen(intArray0);
        List list6 = AppendPairProgram.listgen(intArray0);
        List list7 = AppendPairProgram.listgen(intArray0);
        List list8 = AppendPairProgram.listgen(intArray0);
        List list9 = AppendPairProgram.listgen(intArray0);
        List list10 = AppendPairProgram.listgen(intArray0);
        List list11 = AppendPairProgram.listgen(intArray0);
        List list12 = AppendPairProgram.listgen(intArray0);
        List list13 = AppendPairProgram.listgen(intArray0);
        List list14 = AppendPairProgram.listgen(intArray0);
        List list15 = AppendPairProgram.listgen(intArray0);
        List list16 = AppendPairProgram.listgen(intArray0);
        List list17 = AppendPairProgram.listgen(intArray0);
        List list18 = AppendPairProgram.listgen(intArray0);
        List list19 = AppendPairProgram.listgen(intArray0);
        java.lang.Class<?> wildcardClass20 = list19.getClass();
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(list1);
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list24, (int) (short) 0);
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list29, 100);
        int[] intArray32 = new int[] {};
        List list33 = AppendPairProgram.listgen(intArray32);
        List list34 = AppendPairProgram.listgen(intArray32);
        List list35 = AppendPairProgram.listgen(intArray32);
        List list36 = AppendPairProgram.listgen(intArray32);
        List list37 = AppendPairProgram.listgen(intArray32);
        List list38 = AppendPairProgram.listgen(intArray32);
        List list39 = AppendPairProgram.listgen(intArray32);
        List list40 = AppendPairProgram.listgen(intArray32);
        appendPairProgram0.TestStudentSubmission(list40, (int) (byte) 100);
        int[] intArray43 = new int[] {};
        List list44 = AppendPairProgram.listgen(intArray43);
        List list45 = AppendPairProgram.listgen(intArray43);
        List list46 = AppendPairProgram.listgen(intArray43);
        List list47 = AppendPairProgram.listgen(intArray43);
        List list48 = AppendPairProgram.listgen(intArray43);
        List list49 = AppendPairProgram.listgen(intArray43);
        List list50 = AppendPairProgram.listgen(intArray43);
        List list51 = AppendPairProgram.listgen(intArray43);
        List list52 = AppendPairProgram.listgen(intArray43);
        List list53 = AppendPairProgram.listgen(intArray43);
        List list54 = AppendPairProgram.listgen(intArray43);
        List list55 = AppendPairProgram.listgen(intArray43);
        appendPairProgram0.TestStudentSubmission(list55, (int) '4');
        java.lang.Class<?> wildcardClass58 = list55.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[]");
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        int[] intArray5 = new int[] { '4', 10, (byte) 1, (byte) 100, (byte) 10 };
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        List list9 = AppendPairProgram.listgen(intArray5);
        List list10 = AppendPairProgram.listgen(intArray5);
        List list11 = AppendPairProgram.listgen(intArray5);
        List list12 = AppendPairProgram.listgen(intArray5);
        List list13 = AppendPairProgram.listgen(intArray5);
        java.lang.Class<?> wildcardClass14 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[52, 10, 1, 100, 10]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, (int) '4');
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list26, (int) (byte) 1);
        int[] intArray29 = new int[] {};
        List list30 = AppendPairProgram.listgen(intArray29);
        List list31 = AppendPairProgram.listgen(intArray29);
        List list32 = AppendPairProgram.listgen(intArray29);
        List list33 = AppendPairProgram.listgen(intArray29);
        List list34 = AppendPairProgram.listgen(intArray29);
        List list35 = AppendPairProgram.listgen(intArray29);
        List list36 = AppendPairProgram.listgen(intArray29);
        List list37 = AppendPairProgram.listgen(intArray29);
        List list38 = AppendPairProgram.listgen(intArray29);
        List list39 = AppendPairProgram.listgen(intArray29);
        appendPairProgram0.TestStudentSubmission(list39, (-1));
        int[] intArray43 = new int[] { 0 };
        List list44 = AppendPairProgram.listgen(intArray43);
        List list45 = AppendPairProgram.listgen(intArray43);
        List list46 = AppendPairProgram.listgen(intArray43);
        appendPairProgram0.TestStudentSubmission(list46, 0);
        int[] intArray49 = new int[] {};
        List list50 = AppendPairProgram.listgen(intArray49);
        List list51 = AppendPairProgram.listgen(intArray49);
        List list52 = AppendPairProgram.listgen(intArray49);
        List list53 = AppendPairProgram.listgen(intArray49);
        List list54 = AppendPairProgram.listgen(intArray49);
        List list55 = AppendPairProgram.listgen(intArray49);
        List list56 = AppendPairProgram.listgen(intArray49);
        List list57 = AppendPairProgram.listgen(intArray49);
        List list58 = AppendPairProgram.listgen(intArray49);
        List list59 = AppendPairProgram.listgen(intArray49);
        List list60 = AppendPairProgram.listgen(intArray49);
        List list61 = AppendPairProgram.listgen(intArray49);
        List list62 = AppendPairProgram.listgen(intArray49);
        List list63 = AppendPairProgram.listgen(intArray49);
        List list64 = AppendPairProgram.listgen(intArray49);
        List list65 = AppendPairProgram.listgen(intArray49);
        List list66 = AppendPairProgram.listgen(intArray49);
        List list67 = AppendPairProgram.listgen(intArray49);
        List list68 = AppendPairProgram.listgen(intArray49);
        appendPairProgram0.TestStudentSubmission(list68, (int) (short) 1);
        int[] intArray71 = new int[] {};
        List list72 = AppendPairProgram.listgen(intArray71);
        List list73 = AppendPairProgram.listgen(intArray71);
        List list74 = AppendPairProgram.listgen(intArray71);
        List list75 = AppendPairProgram.listgen(intArray71);
        List list76 = AppendPairProgram.listgen(intArray71);
        List list77 = AppendPairProgram.listgen(intArray71);
        List list78 = AppendPairProgram.listgen(intArray71);
        List list79 = AppendPairProgram.listgen(intArray71);
        List list80 = AppendPairProgram.listgen(intArray71);
        List list81 = AppendPairProgram.listgen(intArray71);
        List list82 = AppendPairProgram.listgen(intArray71);
        List list83 = AppendPairProgram.listgen(intArray71);
        List list84 = AppendPairProgram.listgen(intArray71);
        List list85 = AppendPairProgram.listgen(intArray71);
        List list86 = AppendPairProgram.listgen(intArray71);
        List list87 = AppendPairProgram.listgen(intArray71);
        List list88 = AppendPairProgram.listgen(intArray71);
        appendPairProgram0.TestStudentSubmission(list88, 10);
        java.lang.Class<?> wildcardClass91 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[]");
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0]");
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[]");
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(list61);
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(list63);
        org.junit.Assert.assertNotNull(list64);
        org.junit.Assert.assertNotNull(list65);
        org.junit.Assert.assertNotNull(list66);
        org.junit.Assert.assertNotNull(list67);
        org.junit.Assert.assertNotNull(list68);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[]");
        org.junit.Assert.assertNotNull(list72);
        org.junit.Assert.assertNotNull(list73);
        org.junit.Assert.assertNotNull(list74);
        org.junit.Assert.assertNotNull(list75);
        org.junit.Assert.assertNotNull(list76);
        org.junit.Assert.assertNotNull(list77);
        org.junit.Assert.assertNotNull(list78);
        org.junit.Assert.assertNotNull(list79);
        org.junit.Assert.assertNotNull(list80);
        org.junit.Assert.assertNotNull(list81);
        org.junit.Assert.assertNotNull(list82);
        org.junit.Assert.assertNotNull(list83);
        org.junit.Assert.assertNotNull(list84);
        org.junit.Assert.assertNotNull(list85);
        org.junit.Assert.assertNotNull(list86);
        org.junit.Assert.assertNotNull(list87);
        org.junit.Assert.assertNotNull(list88);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, 0);
        int[] intArray10 = new int[] { (byte) 10 };
        List list11 = AppendPairProgram.listgen(intArray10);
        List list12 = AppendPairProgram.listgen(intArray10);
        List list13 = AppendPairProgram.listgen(intArray10);
        List list14 = AppendPairProgram.listgen(intArray10);
        List list15 = AppendPairProgram.listgen(intArray10);
        List list16 = AppendPairProgram.listgen(intArray10);
        List list17 = AppendPairProgram.listgen(intArray10);
        List list18 = AppendPairProgram.listgen(intArray10);
        List list19 = AppendPairProgram.listgen(intArray10);
        List list20 = AppendPairProgram.listgen(intArray10);
        List list21 = AppendPairProgram.listgen(intArray10);
        appendPairProgram0.TestStudentSubmission(list21, (int) (short) 100);
        int[] intArray25 = new int[] { 0 };
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        List list31 = AppendPairProgram.listgen(intArray25);
        List list32 = AppendPairProgram.listgen(intArray25);
        List list33 = AppendPairProgram.listgen(intArray25);
        List list34 = AppendPairProgram.listgen(intArray25);
        List list35 = AppendPairProgram.listgen(intArray25);
        List list36 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list36, 100);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10]");
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list24, (int) (short) 0);
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list29, 100);
        int[] intArray32 = new int[] {};
        List list33 = AppendPairProgram.listgen(intArray32);
        List list34 = AppendPairProgram.listgen(intArray32);
        List list35 = AppendPairProgram.listgen(intArray32);
        List list36 = AppendPairProgram.listgen(intArray32);
        List list37 = AppendPairProgram.listgen(intArray32);
        List list38 = AppendPairProgram.listgen(intArray32);
        List list39 = AppendPairProgram.listgen(intArray32);
        List list40 = AppendPairProgram.listgen(intArray32);
        appendPairProgram0.TestStudentSubmission(list40, (int) (byte) 100);
        int[] intArray43 = new int[] {};
        List list44 = AppendPairProgram.listgen(intArray43);
        List list45 = AppendPairProgram.listgen(intArray43);
        List list46 = AppendPairProgram.listgen(intArray43);
        List list47 = AppendPairProgram.listgen(intArray43);
        List list48 = AppendPairProgram.listgen(intArray43);
        List list49 = AppendPairProgram.listgen(intArray43);
        List list50 = AppendPairProgram.listgen(intArray43);
        List list51 = AppendPairProgram.listgen(intArray43);
        List list52 = AppendPairProgram.listgen(intArray43);
        List list53 = AppendPairProgram.listgen(intArray43);
        List list54 = AppendPairProgram.listgen(intArray43);
        List list55 = AppendPairProgram.listgen(intArray43);
        appendPairProgram0.TestStudentSubmission(list55, (int) '4');
        java.lang.Class<?> wildcardClass58 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[]");
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, (int) (byte) 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list19, (int) (byte) 1);
        List list22 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list22, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) -1);
        int[] intArray14 = new int[] {};
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 10);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list23, (int) (byte) 0);
        int[] intArray26 = new int[] {};
        List list27 = AppendPairProgram.listgen(intArray26);
        List list28 = AppendPairProgram.listgen(intArray26);
        List list29 = AppendPairProgram.listgen(intArray26);
        List list30 = AppendPairProgram.listgen(intArray26);
        List list31 = AppendPairProgram.listgen(intArray26);
        List list32 = AppendPairProgram.listgen(intArray26);
        appendPairProgram0.TestStudentSubmission(list32, 100);
        int[] intArray36 = new int[] { (byte) 10 };
        List list37 = AppendPairProgram.listgen(intArray36);
        List list38 = AppendPairProgram.listgen(intArray36);
        List list39 = AppendPairProgram.listgen(intArray36);
        List list40 = AppendPairProgram.listgen(intArray36);
        List list41 = AppendPairProgram.listgen(intArray36);
        List list42 = AppendPairProgram.listgen(intArray36);
        List list43 = AppendPairProgram.listgen(intArray36);
        appendPairProgram0.TestStudentSubmission(list43, 100);
        int[] intArray47 = new int[] { 0 };
        List list48 = AppendPairProgram.listgen(intArray47);
        List list49 = AppendPairProgram.listgen(intArray47);
        List list50 = AppendPairProgram.listgen(intArray47);
        List list51 = AppendPairProgram.listgen(intArray47);
        appendPairProgram0.TestStudentSubmission(list51, 0);
        java.lang.Class<?> wildcardClass54 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[10]");
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0]");
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray16 = new int[] { (byte) 10 };
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list18, (int) (byte) -1);
        int[] intArray21 = new int[] {};
        List list22 = AppendPairProgram.listgen(intArray21);
        List list23 = AppendPairProgram.listgen(intArray21);
        List list24 = AppendPairProgram.listgen(intArray21);
        List list25 = AppendPairProgram.listgen(intArray21);
        List list26 = AppendPairProgram.listgen(intArray21);
        List list27 = AppendPairProgram.listgen(intArray21);
        List list28 = AppendPairProgram.listgen(intArray21);
        List list29 = AppendPairProgram.listgen(intArray21);
        List list30 = AppendPairProgram.listgen(intArray21);
        appendPairProgram0.TestStudentSubmission(list30, (int) (short) -1);
        int[] intArray34 = new int[] { 0 };
        List list35 = AppendPairProgram.listgen(intArray34);
        List list36 = AppendPairProgram.listgen(intArray34);
        List list37 = AppendPairProgram.listgen(intArray34);
        List list38 = AppendPairProgram.listgen(intArray34);
        appendPairProgram0.TestStudentSubmission(list38, (int) (byte) 100);
        java.lang.Class<?> wildcardClass41 = list38.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0]");
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray15 = new int[] {};
        List list16 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list16, (int) (short) 100);
        int[] intArray20 = new int[] { 0 };
        List list21 = AppendPairProgram.listgen(intArray20);
        appendPairProgram0.TestStudentSubmission(list21, (int) (short) -1);
        java.lang.Class<?> wildcardClass24 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0]");
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        List list12 = AppendPairProgram.listgen(intArray9);
        List list13 = AppendPairProgram.listgen(intArray9);
        List list14 = AppendPairProgram.listgen(intArray9);
        List list15 = AppendPairProgram.listgen(intArray9);
        List list16 = AppendPairProgram.listgen(intArray9);
        List list17 = AppendPairProgram.listgen(intArray9);
        List list18 = AppendPairProgram.listgen(intArray9);
        List list19 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list19, (int) (byte) 1);
        int[] intArray22 = new int[] {};
        List list23 = AppendPairProgram.listgen(intArray22);
        List list24 = AppendPairProgram.listgen(intArray22);
        List list25 = AppendPairProgram.listgen(intArray22);
        appendPairProgram0.TestStudentSubmission(list25, (int) 'a');
        int[] intArray29 = new int[] { 0 };
        List list30 = AppendPairProgram.listgen(intArray29);
        List list31 = AppendPairProgram.listgen(intArray29);
        appendPairProgram0.TestStudentSubmission(list31, (int) (byte) 1);
        int[] intArray35 = new int[] { (byte) 10 };
        List list36 = AppendPairProgram.listgen(intArray35);
        List list37 = AppendPairProgram.listgen(intArray35);
        List list38 = AppendPairProgram.listgen(intArray35);
        List list39 = AppendPairProgram.listgen(intArray35);
        List list40 = AppendPairProgram.listgen(intArray35);
        List list41 = AppendPairProgram.listgen(intArray35);
        List list42 = AppendPairProgram.listgen(intArray35);
        List list43 = AppendPairProgram.listgen(intArray35);
        List list44 = AppendPairProgram.listgen(intArray35);
        List list45 = AppendPairProgram.listgen(intArray35);
        List list46 = AppendPairProgram.listgen(intArray35);
        List list47 = AppendPairProgram.listgen(intArray35);
        List list48 = AppendPairProgram.listgen(intArray35);
        List list49 = AppendPairProgram.listgen(intArray35);
        List list50 = AppendPairProgram.listgen(intArray35);
        appendPairProgram0.TestStudentSubmission(list50, 100);
        java.lang.Class<?> wildcardClass53 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]");
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0]");
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[10]");
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray15 = new int[] {};
        List list16 = AppendPairProgram.listgen(intArray15);
        List list17 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list17, (int) (short) 1);
        int[] intArray21 = new int[] { (byte) 10 };
        List list22 = AppendPairProgram.listgen(intArray21);
        List list23 = AppendPairProgram.listgen(intArray21);
        List list24 = AppendPairProgram.listgen(intArray21);
        List list25 = AppendPairProgram.listgen(intArray21);
        List list26 = AppendPairProgram.listgen(intArray21);
        List list27 = AppendPairProgram.listgen(intArray21);
        List list28 = AppendPairProgram.listgen(intArray21);
        List list29 = AppendPairProgram.listgen(intArray21);
        List list30 = AppendPairProgram.listgen(intArray21);
        List list31 = AppendPairProgram.listgen(intArray21);
        List list32 = AppendPairProgram.listgen(intArray21);
        List list33 = AppendPairProgram.listgen(intArray21);
        appendPairProgram0.TestStudentSubmission(list33, 10);
        List list36 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list36, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10]");
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        int[] intArray6 = new int[] { (short) -1, '#', '4', (short) -1, (short) 100, (byte) -1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        List list25 = AppendPairProgram.listgen(intArray6);
        List list26 = AppendPairProgram.listgen(intArray6);
        List list27 = AppendPairProgram.listgen(intArray6);
        List list28 = AppendPairProgram.listgen(intArray6);
        List list29 = AppendPairProgram.listgen(intArray6);
        List list30 = AppendPairProgram.listgen(intArray6);
        List list31 = AppendPairProgram.listgen(intArray6);
        List list32 = AppendPairProgram.listgen(intArray6);
        List list33 = AppendPairProgram.listgen(intArray6);
        List list34 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass35 = list34.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 35, 52, -1, 100, -1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        int[] intArray2 = new int[] { 10, (byte) 0 };
        List list3 = AppendPairProgram.listgen(intArray2);
        List list4 = AppendPairProgram.listgen(intArray2);
        List list5 = AppendPairProgram.listgen(intArray2);
        List list6 = AppendPairProgram.listgen(intArray2);
        List list7 = AppendPairProgram.listgen(intArray2);
        List list8 = AppendPairProgram.listgen(intArray2);
        List list9 = AppendPairProgram.listgen(intArray2);
        List list10 = AppendPairProgram.listgen(intArray2);
        List list11 = AppendPairProgram.listgen(intArray2);
        List list12 = AppendPairProgram.listgen(intArray2);
        List list13 = AppendPairProgram.listgen(intArray2);
        List list14 = AppendPairProgram.listgen(intArray2);
        List list15 = AppendPairProgram.listgen(intArray2);
        List list16 = AppendPairProgram.listgen(intArray2);
        List list17 = AppendPairProgram.listgen(intArray2);
        List list18 = AppendPairProgram.listgen(intArray2);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[10, 0]");
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        int[] intArray4 = new int[] { '4', (byte) 100, (short) 10, '4' };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        List list7 = AppendPairProgram.listgen(intArray4);
        List list8 = AppendPairProgram.listgen(intArray4);
        java.lang.Class<?> wildcardClass9 = list8.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[52, 100, 10, 52]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        int[] intArray1 = new int[] { (byte) 10 };
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        List list7 = AppendPairProgram.listgen(intArray1);
        List list8 = AppendPairProgram.listgen(intArray1);
        List list9 = AppendPairProgram.listgen(intArray1);
        List list10 = AppendPairProgram.listgen(intArray1);
        List list11 = AppendPairProgram.listgen(intArray1);
        List list12 = AppendPairProgram.listgen(intArray1);
        List list13 = AppendPairProgram.listgen(intArray1);
        List list14 = AppendPairProgram.listgen(intArray1);
        List list15 = AppendPairProgram.listgen(intArray1);
        List list16 = AppendPairProgram.listgen(intArray1);
        List list17 = AppendPairProgram.listgen(intArray1);
        List list18 = AppendPairProgram.listgen(intArray1);
        List list19 = AppendPairProgram.listgen(intArray1);
        List list20 = AppendPairProgram.listgen(intArray1);
        List list21 = AppendPairProgram.listgen(intArray1);
        List list22 = AppendPairProgram.listgen(intArray1);
        List list23 = AppendPairProgram.listgen(intArray1);
        java.lang.Class<?> wildcardClass24 = list23.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[10]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        List list27 = AppendPairProgram.listgen(intArray16);
        List list28 = AppendPairProgram.listgen(intArray16);
        List list29 = AppendPairProgram.listgen(intArray16);
        List list30 = AppendPairProgram.listgen(intArray16);
        List list31 = AppendPairProgram.listgen(intArray16);
        List list32 = AppendPairProgram.listgen(intArray16);
        List list33 = AppendPairProgram.listgen(intArray16);
        List list34 = AppendPairProgram.listgen(intArray16);
        List list35 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list35, 0);
        java.lang.Class<?> wildcardClass38 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        int[] intArray1 = new int[] { (byte) 10 };
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        List list7 = AppendPairProgram.listgen(intArray1);
        List list8 = AppendPairProgram.listgen(intArray1);
        List list9 = AppendPairProgram.listgen(intArray1);
        List list10 = AppendPairProgram.listgen(intArray1);
        List list11 = AppendPairProgram.listgen(intArray1);
        List list12 = AppendPairProgram.listgen(intArray1);
        List list13 = AppendPairProgram.listgen(intArray1);
        List list14 = AppendPairProgram.listgen(intArray1);
        List list15 = AppendPairProgram.listgen(intArray1);
        List list16 = AppendPairProgram.listgen(intArray1);
        List list17 = AppendPairProgram.listgen(intArray1);
        List list18 = AppendPairProgram.listgen(intArray1);
        List list19 = AppendPairProgram.listgen(intArray1);
        List list20 = AppendPairProgram.listgen(intArray1);
        List list21 = AppendPairProgram.listgen(intArray1);
        List list22 = AppendPairProgram.listgen(intArray1);
        List list23 = AppendPairProgram.listgen(intArray1);
        List list24 = AppendPairProgram.listgen(intArray1);
        List list25 = AppendPairProgram.listgen(intArray1);
        List list26 = AppendPairProgram.listgen(intArray1);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[10]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        List list12 = AppendPairProgram.listgen(intArray9);
        List list13 = AppendPairProgram.listgen(intArray9);
        List list14 = AppendPairProgram.listgen(intArray9);
        List list15 = AppendPairProgram.listgen(intArray9);
        List list16 = AppendPairProgram.listgen(intArray9);
        List list17 = AppendPairProgram.listgen(intArray9);
        List list18 = AppendPairProgram.listgen(intArray9);
        List list19 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list19, (int) (byte) 1);
        int[] intArray22 = new int[] {};
        List list23 = AppendPairProgram.listgen(intArray22);
        List list24 = AppendPairProgram.listgen(intArray22);
        List list25 = AppendPairProgram.listgen(intArray22);
        appendPairProgram0.TestStudentSubmission(list25, (int) 'a');
        int[] intArray29 = new int[] { 0 };
        List list30 = AppendPairProgram.listgen(intArray29);
        List list31 = AppendPairProgram.listgen(intArray29);
        appendPairProgram0.TestStudentSubmission(list31, (int) (byte) 1);
        int[] intArray35 = new int[] { (byte) 10 };
        List list36 = AppendPairProgram.listgen(intArray35);
        List list37 = AppendPairProgram.listgen(intArray35);
        List list38 = AppendPairProgram.listgen(intArray35);
        List list39 = AppendPairProgram.listgen(intArray35);
        List list40 = AppendPairProgram.listgen(intArray35);
        List list41 = AppendPairProgram.listgen(intArray35);
        List list42 = AppendPairProgram.listgen(intArray35);
        List list43 = AppendPairProgram.listgen(intArray35);
        List list44 = AppendPairProgram.listgen(intArray35);
        List list45 = AppendPairProgram.listgen(intArray35);
        List list46 = AppendPairProgram.listgen(intArray35);
        List list47 = AppendPairProgram.listgen(intArray35);
        List list48 = AppendPairProgram.listgen(intArray35);
        List list49 = AppendPairProgram.listgen(intArray35);
        List list50 = AppendPairProgram.listgen(intArray35);
        appendPairProgram0.TestStudentSubmission(list50, 100);
        java.lang.Class<?> wildcardClass53 = list50.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]");
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0]");
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[10]");
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray15 = new int[] {};
        List list16 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 100);
        int[] intArray20 = new int[] { (byte) 10 };
        List list21 = AppendPairProgram.listgen(intArray20);
        appendPairProgram0.TestStudentSubmission(list21, (-1));
        int[] intArray25 = new int[] { 0 };
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        List list31 = AppendPairProgram.listgen(intArray25);
        List list32 = AppendPairProgram.listgen(intArray25);
        List list33 = AppendPairProgram.listgen(intArray25);
        List list34 = AppendPairProgram.listgen(intArray25);
        List list35 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list35, (int) '#');
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10]");
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        int[] intArray5 = new int[] { (-1), 100, (short) 0, (byte) 100, (short) 100 };
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        List list9 = AppendPairProgram.listgen(intArray5);
        List list10 = AppendPairProgram.listgen(intArray5);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 0, 100, 100]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list9, (int) (short) 0);
        int[] intArray12 = new int[] {};
        List list13 = AppendPairProgram.listgen(intArray12);
        List list14 = AppendPairProgram.listgen(intArray12);
        List list15 = AppendPairProgram.listgen(intArray12);
        List list16 = AppendPairProgram.listgen(intArray12);
        List list17 = AppendPairProgram.listgen(intArray12);
        List list18 = AppendPairProgram.listgen(intArray12);
        List list19 = AppendPairProgram.listgen(intArray12);
        List list20 = AppendPairProgram.listgen(intArray12);
        List list21 = AppendPairProgram.listgen(intArray12);
        List list22 = AppendPairProgram.listgen(intArray12);
        appendPairProgram0.TestStudentSubmission(list22, (int) (byte) 0);
        int[] intArray25 = new int[] {};
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        List list31 = AppendPairProgram.listgen(intArray25);
        List list32 = AppendPairProgram.listgen(intArray25);
        List list33 = AppendPairProgram.listgen(intArray25);
        List list34 = AppendPairProgram.listgen(intArray25);
        List list35 = AppendPairProgram.listgen(intArray25);
        List list36 = AppendPairProgram.listgen(intArray25);
        List list37 = AppendPairProgram.listgen(intArray25);
        List list38 = AppendPairProgram.listgen(intArray25);
        List list39 = AppendPairProgram.listgen(intArray25);
        List list40 = AppendPairProgram.listgen(intArray25);
        List list41 = AppendPairProgram.listgen(intArray25);
        List list42 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list42, (int) (byte) 10);
        int[] intArray45 = new int[] {};
        List list46 = AppendPairProgram.listgen(intArray45);
        List list47 = AppendPairProgram.listgen(intArray45);
        List list48 = AppendPairProgram.listgen(intArray45);
        List list49 = AppendPairProgram.listgen(intArray45);
        List list50 = AppendPairProgram.listgen(intArray45);
        List list51 = AppendPairProgram.listgen(intArray45);
        List list52 = AppendPairProgram.listgen(intArray45);
        List list53 = AppendPairProgram.listgen(intArray45);
        List list54 = AppendPairProgram.listgen(intArray45);
        List list55 = AppendPairProgram.listgen(intArray45);
        appendPairProgram0.TestStudentSubmission(list55, (-1));
        int[] intArray59 = new int[] { (byte) 10 };
        List list60 = AppendPairProgram.listgen(intArray59);
        List list61 = AppendPairProgram.listgen(intArray59);
        List list62 = AppendPairProgram.listgen(intArray59);
        List list63 = AppendPairProgram.listgen(intArray59);
        List list64 = AppendPairProgram.listgen(intArray59);
        List list65 = AppendPairProgram.listgen(intArray59);
        List list66 = AppendPairProgram.listgen(intArray59);
        List list67 = AppendPairProgram.listgen(intArray59);
        List list68 = AppendPairProgram.listgen(intArray59);
        List list69 = AppendPairProgram.listgen(intArray59);
        List list70 = AppendPairProgram.listgen(intArray59);
        List list71 = AppendPairProgram.listgen(intArray59);
        List list72 = AppendPairProgram.listgen(intArray59);
        appendPairProgram0.TestStudentSubmission(list72, (int) (short) 10);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[]");
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[10]");
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(list61);
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(list63);
        org.junit.Assert.assertNotNull(list64);
        org.junit.Assert.assertNotNull(list65);
        org.junit.Assert.assertNotNull(list66);
        org.junit.Assert.assertNotNull(list67);
        org.junit.Assert.assertNotNull(list68);
        org.junit.Assert.assertNotNull(list69);
        org.junit.Assert.assertNotNull(list70);
        org.junit.Assert.assertNotNull(list71);
        org.junit.Assert.assertNotNull(list72);
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, (int) '4');
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list26, (int) (byte) 1);
        int[] intArray30 = new int[] { 0 };
        List list31 = AppendPairProgram.listgen(intArray30);
        List list32 = AppendPairProgram.listgen(intArray30);
        appendPairProgram0.TestStudentSubmission(list32, (int) 'a');
        int[] intArray36 = new int[] { 0 };
        List list37 = AppendPairProgram.listgen(intArray36);
        List list38 = AppendPairProgram.listgen(intArray36);
        List list39 = AppendPairProgram.listgen(intArray36);
        appendPairProgram0.TestStudentSubmission(list39, (int) (short) 1);
        int[] intArray42 = new int[] {};
        List list43 = AppendPairProgram.listgen(intArray42);
        List list44 = AppendPairProgram.listgen(intArray42);
        List list45 = AppendPairProgram.listgen(intArray42);
        List list46 = AppendPairProgram.listgen(intArray42);
        List list47 = AppendPairProgram.listgen(intArray42);
        List list48 = AppendPairProgram.listgen(intArray42);
        List list49 = AppendPairProgram.listgen(intArray42);
        List list50 = AppendPairProgram.listgen(intArray42);
        List list51 = AppendPairProgram.listgen(intArray42);
        List list52 = AppendPairProgram.listgen(intArray42);
        List list53 = AppendPairProgram.listgen(intArray42);
        List list54 = AppendPairProgram.listgen(intArray42);
        List list55 = AppendPairProgram.listgen(intArray42);
        List list56 = AppendPairProgram.listgen(intArray42);
        List list57 = AppendPairProgram.listgen(intArray42);
        appendPairProgram0.TestStudentSubmission(list57, (int) (byte) -1);
        int[] intArray60 = new int[] {};
        List list61 = AppendPairProgram.listgen(intArray60);
        List list62 = AppendPairProgram.listgen(intArray60);
        List list63 = AppendPairProgram.listgen(intArray60);
        List list64 = AppendPairProgram.listgen(intArray60);
        List list65 = AppendPairProgram.listgen(intArray60);
        List list66 = AppendPairProgram.listgen(intArray60);
        List list67 = AppendPairProgram.listgen(intArray60);
        List list68 = AppendPairProgram.listgen(intArray60);
        appendPairProgram0.TestStudentSubmission(list68, 0);
        java.lang.Class<?> wildcardClass71 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0]");
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0]");
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]");
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[]");
        org.junit.Assert.assertNotNull(list61);
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(list63);
        org.junit.Assert.assertNotNull(list64);
        org.junit.Assert.assertNotNull(list65);
        org.junit.Assert.assertNotNull(list66);
        org.junit.Assert.assertNotNull(list67);
        org.junit.Assert.assertNotNull(list68);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray17 = new int[] { (byte) 10 };
        List list18 = AppendPairProgram.listgen(intArray17);
        List list19 = AppendPairProgram.listgen(intArray17);
        List list20 = AppendPairProgram.listgen(intArray17);
        List list21 = AppendPairProgram.listgen(intArray17);
        List list22 = AppendPairProgram.listgen(intArray17);
        List list23 = AppendPairProgram.listgen(intArray17);
        List list24 = AppendPairProgram.listgen(intArray17);
        List list25 = AppendPairProgram.listgen(intArray17);
        appendPairProgram0.TestStudentSubmission(list25, (int) (byte) 100);
        int[] intArray28 = new int[] {};
        List list29 = AppendPairProgram.listgen(intArray28);
        List list30 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list30, 0);
        int[] intArray34 = new int[] { (byte) 10 };
        List list35 = AppendPairProgram.listgen(intArray34);
        List list36 = AppendPairProgram.listgen(intArray34);
        List list37 = AppendPairProgram.listgen(intArray34);
        List list38 = AppendPairProgram.listgen(intArray34);
        List list39 = AppendPairProgram.listgen(intArray34);
        List list40 = AppendPairProgram.listgen(intArray34);
        List list41 = AppendPairProgram.listgen(intArray34);
        appendPairProgram0.TestStudentSubmission(list41, (int) (byte) 100);
        int[] intArray44 = new int[] {};
        List list45 = AppendPairProgram.listgen(intArray44);
        List list46 = AppendPairProgram.listgen(intArray44);
        List list47 = AppendPairProgram.listgen(intArray44);
        appendPairProgram0.TestStudentSubmission(list47, (int) (byte) 1);
        int[] intArray50 = new int[] {};
        List list51 = AppendPairProgram.listgen(intArray50);
        List list52 = AppendPairProgram.listgen(intArray50);
        List list53 = AppendPairProgram.listgen(intArray50);
        List list54 = AppendPairProgram.listgen(intArray50);
        List list55 = AppendPairProgram.listgen(intArray50);
        List list56 = AppendPairProgram.listgen(intArray50);
        List list57 = AppendPairProgram.listgen(intArray50);
        List list58 = AppendPairProgram.listgen(intArray50);
        List list59 = AppendPairProgram.listgen(intArray50);
        List list60 = AppendPairProgram.listgen(intArray50);
        List list61 = AppendPairProgram.listgen(intArray50);
        List list62 = AppendPairProgram.listgen(intArray50);
        List list63 = AppendPairProgram.listgen(intArray50);
        List list64 = AppendPairProgram.listgen(intArray50);
        List list65 = AppendPairProgram.listgen(intArray50);
        appendPairProgram0.TestStudentSubmission(list65, (int) (short) -1);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10]");
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[10]");
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[]");
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[]");
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(list61);
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(list63);
        org.junit.Assert.assertNotNull(list64);
        org.junit.Assert.assertNotNull(list65);
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, 0);
        int[] intArray10 = new int[] { (byte) 10 };
        List list11 = AppendPairProgram.listgen(intArray10);
        List list12 = AppendPairProgram.listgen(intArray10);
        List list13 = AppendPairProgram.listgen(intArray10);
        List list14 = AppendPairProgram.listgen(intArray10);
        List list15 = AppendPairProgram.listgen(intArray10);
        List list16 = AppendPairProgram.listgen(intArray10);
        List list17 = AppendPairProgram.listgen(intArray10);
        List list18 = AppendPairProgram.listgen(intArray10);
        List list19 = AppendPairProgram.listgen(intArray10);
        List list20 = AppendPairProgram.listgen(intArray10);
        List list21 = AppendPairProgram.listgen(intArray10);
        appendPairProgram0.TestStudentSubmission(list21, (int) (short) 100);
        List list24 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list24, 10);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10]");
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        List list12 = AppendPairProgram.listgen(intArray9);
        List list13 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        List list27 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list27, 100);
        int[] intArray31 = new int[] { (byte) 10 };
        List list32 = AppendPairProgram.listgen(intArray31);
        List list33 = AppendPairProgram.listgen(intArray31);
        List list34 = AppendPairProgram.listgen(intArray31);
        List list35 = AppendPairProgram.listgen(intArray31);
        List list36 = AppendPairProgram.listgen(intArray31);
        appendPairProgram0.TestStudentSubmission(list36, (int) (byte) 100);
        List list39 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list39, 1);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10]");
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        int[] intArray2 = new int[] { (byte) 100, (short) 10 };
        List list3 = AppendPairProgram.listgen(intArray2);
        List list4 = AppendPairProgram.listgen(intArray2);
        List list5 = AppendPairProgram.listgen(intArray2);
        java.lang.Class<?> wildcardClass6 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[100, 10]");
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray15 = new int[] {};
        List list16 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 100);
        List list19 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list19, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]");
        org.junit.Assert.assertNotNull(list16);
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        int[] intArray6 = new int[] { 0, (short) 10, (short) -1, '#', (byte) 100, 1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        List list25 = AppendPairProgram.listgen(intArray6);
        List list26 = AppendPairProgram.listgen(intArray6);
        List list27 = AppendPairProgram.listgen(intArray6);
        List list28 = AppendPairProgram.listgen(intArray6);
        List list29 = AppendPairProgram.listgen(intArray6);
        List list30 = AppendPairProgram.listgen(intArray6);
        List list31 = AppendPairProgram.listgen(intArray6);
        List list32 = AppendPairProgram.listgen(intArray6);
        List list33 = AppendPairProgram.listgen(intArray6);
        List list34 = AppendPairProgram.listgen(intArray6);
        List list35 = AppendPairProgram.listgen(intArray6);
        List list36 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass37 = list36.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 10, -1, 35, 100, 1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        int[] intArray2 = new int[] { (byte) 100, (short) 10 };
        List list3 = AppendPairProgram.listgen(intArray2);
        List list4 = AppendPairProgram.listgen(intArray2);
        List list5 = AppendPairProgram.listgen(intArray2);
        List list6 = AppendPairProgram.listgen(intArray2);
        List list7 = AppendPairProgram.listgen(intArray2);
        java.lang.Class<?> wildcardClass8 = list7.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[100, 10]");
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, 1);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list22, (int) (short) 1);
        int[] intArray25 = new int[] {};
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        List list31 = AppendPairProgram.listgen(intArray25);
        List list32 = AppendPairProgram.listgen(intArray25);
        List list33 = AppendPairProgram.listgen(intArray25);
        List list34 = AppendPairProgram.listgen(intArray25);
        List list35 = AppendPairProgram.listgen(intArray25);
        List list36 = AppendPairProgram.listgen(intArray25);
        List list37 = AppendPairProgram.listgen(intArray25);
        List list38 = AppendPairProgram.listgen(intArray25);
        List list39 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list39, (int) '#');
        int[] intArray42 = new int[] {};
        List list43 = AppendPairProgram.listgen(intArray42);
        List list44 = AppendPairProgram.listgen(intArray42);
        List list45 = AppendPairProgram.listgen(intArray42);
        appendPairProgram0.TestStudentSubmission(list45, 10);
        int[] intArray48 = new int[] {};
        List list49 = AppendPairProgram.listgen(intArray48);
        List list50 = AppendPairProgram.listgen(intArray48);
        List list51 = AppendPairProgram.listgen(intArray48);
        List list52 = AppendPairProgram.listgen(intArray48);
        List list53 = AppendPairProgram.listgen(intArray48);
        List list54 = AppendPairProgram.listgen(intArray48);
        appendPairProgram0.TestStudentSubmission(list54, (int) (short) 1);
        int[] intArray58 = new int[] { (byte) 10 };
        List list59 = AppendPairProgram.listgen(intArray58);
        List list60 = AppendPairProgram.listgen(intArray58);
        List list61 = AppendPairProgram.listgen(intArray58);
        List list62 = AppendPairProgram.listgen(intArray58);
        appendPairProgram0.TestStudentSubmission(list62, 1);
        int[] intArray65 = new int[] {};
        List list66 = AppendPairProgram.listgen(intArray65);
        List list67 = AppendPairProgram.listgen(intArray65);
        List list68 = AppendPairProgram.listgen(intArray65);
        List list69 = AppendPairProgram.listgen(intArray65);
        List list70 = AppendPairProgram.listgen(intArray65);
        List list71 = AppendPairProgram.listgen(intArray65);
        List list72 = AppendPairProgram.listgen(intArray65);
        List list73 = AppendPairProgram.listgen(intArray65);
        List list74 = AppendPairProgram.listgen(intArray65);
        appendPairProgram0.TestStudentSubmission(list74, (int) (short) 0);
        List list77 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list77, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]");
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[]");
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[10]");
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(list61);
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[]");
        org.junit.Assert.assertNotNull(list66);
        org.junit.Assert.assertNotNull(list67);
        org.junit.Assert.assertNotNull(list68);
        org.junit.Assert.assertNotNull(list69);
        org.junit.Assert.assertNotNull(list70);
        org.junit.Assert.assertNotNull(list71);
        org.junit.Assert.assertNotNull(list72);
        org.junit.Assert.assertNotNull(list73);
        org.junit.Assert.assertNotNull(list74);
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray16 = new int[] { (byte) 10 };
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list18, (int) (byte) -1);
        int[] intArray21 = new int[] {};
        List list22 = AppendPairProgram.listgen(intArray21);
        List list23 = AppendPairProgram.listgen(intArray21);
        List list24 = AppendPairProgram.listgen(intArray21);
        List list25 = AppendPairProgram.listgen(intArray21);
        List list26 = AppendPairProgram.listgen(intArray21);
        List list27 = AppendPairProgram.listgen(intArray21);
        List list28 = AppendPairProgram.listgen(intArray21);
        List list29 = AppendPairProgram.listgen(intArray21);
        List list30 = AppendPairProgram.listgen(intArray21);
        List list31 = AppendPairProgram.listgen(intArray21);
        List list32 = AppendPairProgram.listgen(intArray21);
        List list33 = AppendPairProgram.listgen(intArray21);
        List list34 = AppendPairProgram.listgen(intArray21);
        List list35 = AppendPairProgram.listgen(intArray21);
        List list36 = AppendPairProgram.listgen(intArray21);
        List list37 = AppendPairProgram.listgen(intArray21);
        appendPairProgram0.TestStudentSubmission(list37, (int) 'a');
        int[] intArray41 = new int[] { 0 };
        List list42 = AppendPairProgram.listgen(intArray41);
        appendPairProgram0.TestStudentSubmission(list42, 0);
        java.lang.Class<?> wildcardClass45 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0]");
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray17 = new int[] { (byte) 10 };
        List list18 = AppendPairProgram.listgen(intArray17);
        List list19 = AppendPairProgram.listgen(intArray17);
        List list20 = AppendPairProgram.listgen(intArray17);
        List list21 = AppendPairProgram.listgen(intArray17);
        List list22 = AppendPairProgram.listgen(intArray17);
        List list23 = AppendPairProgram.listgen(intArray17);
        List list24 = AppendPairProgram.listgen(intArray17);
        List list25 = AppendPairProgram.listgen(intArray17);
        appendPairProgram0.TestStudentSubmission(list25, (int) (byte) 100);
        int[] intArray28 = new int[] {};
        List list29 = AppendPairProgram.listgen(intArray28);
        List list30 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list30, 0);
        int[] intArray34 = new int[] { (byte) 10 };
        List list35 = AppendPairProgram.listgen(intArray34);
        List list36 = AppendPairProgram.listgen(intArray34);
        List list37 = AppendPairProgram.listgen(intArray34);
        List list38 = AppendPairProgram.listgen(intArray34);
        List list39 = AppendPairProgram.listgen(intArray34);
        List list40 = AppendPairProgram.listgen(intArray34);
        List list41 = AppendPairProgram.listgen(intArray34);
        appendPairProgram0.TestStudentSubmission(list41, (int) (byte) 100);
        int[] intArray44 = new int[] {};
        List list45 = AppendPairProgram.listgen(intArray44);
        List list46 = AppendPairProgram.listgen(intArray44);
        List list47 = AppendPairProgram.listgen(intArray44);
        List list48 = AppendPairProgram.listgen(intArray44);
        List list49 = AppendPairProgram.listgen(intArray44);
        List list50 = AppendPairProgram.listgen(intArray44);
        List list51 = AppendPairProgram.listgen(intArray44);
        List list52 = AppendPairProgram.listgen(intArray44);
        List list53 = AppendPairProgram.listgen(intArray44);
        List list54 = AppendPairProgram.listgen(intArray44);
        List list55 = AppendPairProgram.listgen(intArray44);
        List list56 = AppendPairProgram.listgen(intArray44);
        List list57 = AppendPairProgram.listgen(intArray44);
        List list58 = AppendPairProgram.listgen(intArray44);
        List list59 = AppendPairProgram.listgen(intArray44);
        List list60 = AppendPairProgram.listgen(intArray44);
        List list61 = AppendPairProgram.listgen(intArray44);
        List list62 = AppendPairProgram.listgen(intArray44);
        List list63 = AppendPairProgram.listgen(intArray44);
        appendPairProgram0.TestStudentSubmission(list63, (int) ' ');
        java.lang.Class<?> wildcardClass66 = list63.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10]");
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[10]");
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[]");
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(list61);
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(list63);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        int[] intArray4 = new int[] { (-1), (byte) 100, (byte) 1, (byte) 1 };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        List list7 = AppendPairProgram.listgen(intArray4);
        List list8 = AppendPairProgram.listgen(intArray4);
        List list9 = AppendPairProgram.listgen(intArray4);
        List list10 = AppendPairProgram.listgen(intArray4);
        List list11 = AppendPairProgram.listgen(intArray4);
        List list12 = AppendPairProgram.listgen(intArray4);
        java.lang.Class<?> wildcardClass13 = list12.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 100, 1, 1]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        List list14 = AppendPairProgram.listgen(intArray11);
        List list15 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list15, (int) (byte) -1);
        int[] intArray18 = new int[] {};
        List list19 = AppendPairProgram.listgen(intArray18);
        List list20 = AppendPairProgram.listgen(intArray18);
        List list21 = AppendPairProgram.listgen(intArray18);
        appendPairProgram0.TestStudentSubmission(list21, (int) (short) 0);
        int[] intArray25 = new int[] { 0 };
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list27, (int) (short) 0);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        List list12 = AppendPairProgram.listgen(intArray9);
        List list13 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        List list27 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list27, 100);
        int[] intArray30 = new int[] {};
        List list31 = AppendPairProgram.listgen(intArray30);
        List list32 = AppendPairProgram.listgen(intArray30);
        List list33 = AppendPairProgram.listgen(intArray30);
        List list34 = AppendPairProgram.listgen(intArray30);
        List list35 = AppendPairProgram.listgen(intArray30);
        List list36 = AppendPairProgram.listgen(intArray30);
        List list37 = AppendPairProgram.listgen(intArray30);
        List list38 = AppendPairProgram.listgen(intArray30);
        List list39 = AppendPairProgram.listgen(intArray30);
        List list40 = AppendPairProgram.listgen(intArray30);
        List list41 = AppendPairProgram.listgen(intArray30);
        List list42 = AppendPairProgram.listgen(intArray30);
        List list43 = AppendPairProgram.listgen(intArray30);
        List list44 = AppendPairProgram.listgen(intArray30);
        List list45 = AppendPairProgram.listgen(intArray30);
        List list46 = AppendPairProgram.listgen(intArray30);
        List list47 = AppendPairProgram.listgen(intArray30);
        appendPairProgram0.TestStudentSubmission(list47, (int) (byte) 1);
        int[] intArray51 = new int[] { (byte) 10 };
        List list52 = AppendPairProgram.listgen(intArray51);
        List list53 = AppendPairProgram.listgen(intArray51);
        List list54 = AppendPairProgram.listgen(intArray51);
        List list55 = AppendPairProgram.listgen(intArray51);
        List list56 = AppendPairProgram.listgen(intArray51);
        List list57 = AppendPairProgram.listgen(intArray51);
        List list58 = AppendPairProgram.listgen(intArray51);
        List list59 = AppendPairProgram.listgen(intArray51);
        List list60 = AppendPairProgram.listgen(intArray51);
        appendPairProgram0.TestStudentSubmission(list60, (int) (short) 10);
        int[] intArray64 = new int[] { (byte) 10 };
        List list65 = AppendPairProgram.listgen(intArray64);
        List list66 = AppendPairProgram.listgen(intArray64);
        List list67 = AppendPairProgram.listgen(intArray64);
        List list68 = AppendPairProgram.listgen(intArray64);
        List list69 = AppendPairProgram.listgen(intArray64);
        List list70 = AppendPairProgram.listgen(intArray64);
        List list71 = AppendPairProgram.listgen(intArray64);
        List list72 = AppendPairProgram.listgen(intArray64);
        List list73 = AppendPairProgram.listgen(intArray64);
        List list74 = AppendPairProgram.listgen(intArray64);
        appendPairProgram0.TestStudentSubmission(list74, (-1));
        List list77 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list77, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]");
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[10]");
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[10]");
        org.junit.Assert.assertNotNull(list65);
        org.junit.Assert.assertNotNull(list66);
        org.junit.Assert.assertNotNull(list67);
        org.junit.Assert.assertNotNull(list68);
        org.junit.Assert.assertNotNull(list69);
        org.junit.Assert.assertNotNull(list70);
        org.junit.Assert.assertNotNull(list71);
        org.junit.Assert.assertNotNull(list72);
        org.junit.Assert.assertNotNull(list73);
        org.junit.Assert.assertNotNull(list74);
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray15 = new int[] {};
        List list16 = AppendPairProgram.listgen(intArray15);
        List list17 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list17, (int) (short) 1);
        int[] intArray21 = new int[] { (byte) 10 };
        List list22 = AppendPairProgram.listgen(intArray21);
        List list23 = AppendPairProgram.listgen(intArray21);
        List list24 = AppendPairProgram.listgen(intArray21);
        List list25 = AppendPairProgram.listgen(intArray21);
        List list26 = AppendPairProgram.listgen(intArray21);
        List list27 = AppendPairProgram.listgen(intArray21);
        List list28 = AppendPairProgram.listgen(intArray21);
        List list29 = AppendPairProgram.listgen(intArray21);
        List list30 = AppendPairProgram.listgen(intArray21);
        List list31 = AppendPairProgram.listgen(intArray21);
        List list32 = AppendPairProgram.listgen(intArray21);
        List list33 = AppendPairProgram.listgen(intArray21);
        appendPairProgram0.TestStudentSubmission(list33, 10);
        int[] intArray37 = new int[] { (byte) 10 };
        List list38 = AppendPairProgram.listgen(intArray37);
        List list39 = AppendPairProgram.listgen(intArray37);
        List list40 = AppendPairProgram.listgen(intArray37);
        List list41 = AppendPairProgram.listgen(intArray37);
        List list42 = AppendPairProgram.listgen(intArray37);
        appendPairProgram0.TestStudentSubmission(list42, (int) (byte) 100);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10]");
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[10]");
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray10 = new int[] { (byte) 10 };
        List list11 = AppendPairProgram.listgen(intArray10);
        List list12 = AppendPairProgram.listgen(intArray10);
        List list13 = AppendPairProgram.listgen(intArray10);
        List list14 = AppendPairProgram.listgen(intArray10);
        List list15 = AppendPairProgram.listgen(intArray10);
        List list16 = AppendPairProgram.listgen(intArray10);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 1);
        int[] intArray20 = new int[] { (byte) 10 };
        List list21 = AppendPairProgram.listgen(intArray20);
        List list22 = AppendPairProgram.listgen(intArray20);
        List list23 = AppendPairProgram.listgen(intArray20);
        List list24 = AppendPairProgram.listgen(intArray20);
        List list25 = AppendPairProgram.listgen(intArray20);
        List list26 = AppendPairProgram.listgen(intArray20);
        List list27 = AppendPairProgram.listgen(intArray20);
        appendPairProgram0.TestStudentSubmission(list27, (int) '4');
        List list30 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list30, 10);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10]");
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10]");
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        int[] intArray1 = new int[] { (byte) 10 };
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        List list7 = AppendPairProgram.listgen(intArray1);
        List list8 = AppendPairProgram.listgen(intArray1);
        List list9 = AppendPairProgram.listgen(intArray1);
        List list10 = AppendPairProgram.listgen(intArray1);
        List list11 = AppendPairProgram.listgen(intArray1);
        List list12 = AppendPairProgram.listgen(intArray1);
        List list13 = AppendPairProgram.listgen(intArray1);
        List list14 = AppendPairProgram.listgen(intArray1);
        List list15 = AppendPairProgram.listgen(intArray1);
        List list16 = AppendPairProgram.listgen(intArray1);
        List list17 = AppendPairProgram.listgen(intArray1);
        List list18 = AppendPairProgram.listgen(intArray1);
        List list19 = AppendPairProgram.listgen(intArray1);
        List list20 = AppendPairProgram.listgen(intArray1);
        List list21 = AppendPairProgram.listgen(intArray1);
        List list22 = AppendPairProgram.listgen(intArray1);
        List list23 = AppendPairProgram.listgen(intArray1);
        List list24 = AppendPairProgram.listgen(intArray1);
        List list25 = AppendPairProgram.listgen(intArray1);
        java.lang.Class<?> wildcardClass26 = list25.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[10]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        int[] intArray1 = new int[] { 0 };
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        List list7 = AppendPairProgram.listgen(intArray1);
        List list8 = AppendPairProgram.listgen(intArray1);
        List list9 = AppendPairProgram.listgen(intArray1);
        List list10 = AppendPairProgram.listgen(intArray1);
        List list11 = AppendPairProgram.listgen(intArray1);
        List list12 = AppendPairProgram.listgen(intArray1);
        List list13 = AppendPairProgram.listgen(intArray1);
        List list14 = AppendPairProgram.listgen(intArray1);
        List list15 = AppendPairProgram.listgen(intArray1);
        List list16 = AppendPairProgram.listgen(intArray1);
        java.lang.Class<?> wildcardClass17 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[0]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, (int) (byte) 10);
        int[] intArray7 = new int[] { (byte) 10 };
        List list8 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list8, 100);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        List list14 = AppendPairProgram.listgen(intArray11);
        List list15 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list15, (int) (short) 100);
        int[] intArray19 = new int[] { (byte) 10 };
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        List list24 = AppendPairProgram.listgen(intArray19);
        List list25 = AppendPairProgram.listgen(intArray19);
        List list26 = AppendPairProgram.listgen(intArray19);
        List list27 = AppendPairProgram.listgen(intArray19);
        List list28 = AppendPairProgram.listgen(intArray19);
        List list29 = AppendPairProgram.listgen(intArray19);
        List list30 = AppendPairProgram.listgen(intArray19);
        List list31 = AppendPairProgram.listgen(intArray19);
        List list32 = AppendPairProgram.listgen(intArray19);
        List list33 = AppendPairProgram.listgen(intArray19);
        List list34 = AppendPairProgram.listgen(intArray19);
        List list35 = AppendPairProgram.listgen(intArray19);
        List list36 = AppendPairProgram.listgen(intArray19);
        List list37 = AppendPairProgram.listgen(intArray19);
        List list38 = AppendPairProgram.listgen(intArray19);
        List list39 = AppendPairProgram.listgen(intArray19);
        List list40 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list40, (int) (byte) 10);
        java.lang.Class<?> wildcardClass43 = list40.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        int[] intArray4 = new int[] { 'a', (byte) -1, 100, (byte) 10 };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        List list7 = AppendPairProgram.listgen(intArray4);
        List list8 = AppendPairProgram.listgen(intArray4);
        List list9 = AppendPairProgram.listgen(intArray4);
        List list10 = AppendPairProgram.listgen(intArray4);
        List list11 = AppendPairProgram.listgen(intArray4);
        List list12 = AppendPairProgram.listgen(intArray4);
        List list13 = AppendPairProgram.listgen(intArray4);
        List list14 = AppendPairProgram.listgen(intArray4);
        List list15 = AppendPairProgram.listgen(intArray4);
        List list16 = AppendPairProgram.listgen(intArray4);
        List list17 = AppendPairProgram.listgen(intArray4);
        List list18 = AppendPairProgram.listgen(intArray4);
        List list19 = AppendPairProgram.listgen(intArray4);
        List list20 = AppendPairProgram.listgen(intArray4);
        List list21 = AppendPairProgram.listgen(intArray4);
        List list22 = AppendPairProgram.listgen(intArray4);
        List list23 = AppendPairProgram.listgen(intArray4);
        List list24 = AppendPairProgram.listgen(intArray4);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[97, -1, 100, 10]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        int[] intArray2 = new int[] { (byte) 100, (short) 10 };
        List list3 = AppendPairProgram.listgen(intArray2);
        List list4 = AppendPairProgram.listgen(intArray2);
        List list5 = AppendPairProgram.listgen(intArray2);
        List list6 = AppendPairProgram.listgen(intArray2);
        List list7 = AppendPairProgram.listgen(intArray2);
        List list8 = AppendPairProgram.listgen(intArray2);
        List list9 = AppendPairProgram.listgen(intArray2);
        List list10 = AppendPairProgram.listgen(intArray2);
        List list11 = AppendPairProgram.listgen(intArray2);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[100, 10]");
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, (int) (byte) 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list10, (-1));
        int[] intArray13 = new int[] {};
        List list14 = AppendPairProgram.listgen(intArray13);
        List list15 = AppendPairProgram.listgen(intArray13);
        appendPairProgram0.TestStudentSubmission(list15, (int) (byte) 1);
        int[] intArray19 = new int[] { (byte) 10 };
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        List list24 = AppendPairProgram.listgen(intArray19);
        List list25 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list25, (int) (short) -1);
        List list28 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list28, (int) 'a');
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        int[] intArray6 = new int[] { (short) -1, '#', '4', (short) -1, (short) 100, (byte) -1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        List list25 = AppendPairProgram.listgen(intArray6);
        List list26 = AppendPairProgram.listgen(intArray6);
        List list27 = AppendPairProgram.listgen(intArray6);
        List list28 = AppendPairProgram.listgen(intArray6);
        List list29 = AppendPairProgram.listgen(intArray6);
        List list30 = AppendPairProgram.listgen(intArray6);
        List list31 = AppendPairProgram.listgen(intArray6);
        List list32 = AppendPairProgram.listgen(intArray6);
        List list33 = AppendPairProgram.listgen(intArray6);
        List list34 = AppendPairProgram.listgen(intArray6);
        List list35 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass36 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 35, 52, -1, 100, -1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        int[] intArray5 = new int[] { '4', 10, (byte) 1, (byte) 100, (byte) 10 };
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        List list9 = AppendPairProgram.listgen(intArray5);
        List list10 = AppendPairProgram.listgen(intArray5);
        List list11 = AppendPairProgram.listgen(intArray5);
        List list12 = AppendPairProgram.listgen(intArray5);
        List list13 = AppendPairProgram.listgen(intArray5);
        List list14 = AppendPairProgram.listgen(intArray5);
        List list15 = AppendPairProgram.listgen(intArray5);
        java.lang.Class<?> wildcardClass16 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[52, 10, 1, 100, 10]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        int[] intArray6 = new int[] { 0, (short) 10, (short) -1, '#', (byte) 100, 1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        List list25 = AppendPairProgram.listgen(intArray6);
        List list26 = AppendPairProgram.listgen(intArray6);
        List list27 = AppendPairProgram.listgen(intArray6);
        List list28 = AppendPairProgram.listgen(intArray6);
        List list29 = AppendPairProgram.listgen(intArray6);
        List list30 = AppendPairProgram.listgen(intArray6);
        List list31 = AppendPairProgram.listgen(intArray6);
        List list32 = AppendPairProgram.listgen(intArray6);
        List list33 = AppendPairProgram.listgen(intArray6);
        List list34 = AppendPairProgram.listgen(intArray6);
        List list35 = AppendPairProgram.listgen(intArray6);
        List list36 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass37 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 10, -1, 35, 100, 1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) -1);
        int[] intArray14 = new int[] {};
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 10);
        int[] intArray20 = new int[] { 0 };
        List list21 = AppendPairProgram.listgen(intArray20);
        List list22 = AppendPairProgram.listgen(intArray20);
        List list23 = AppendPairProgram.listgen(intArray20);
        List list24 = AppendPairProgram.listgen(intArray20);
        appendPairProgram0.TestStudentSubmission(list24, (int) (short) 10);
        int[] intArray28 = new int[] { 0 };
        List list29 = AppendPairProgram.listgen(intArray28);
        List list30 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list30, (int) '4');
        int[] intArray33 = new int[] {};
        List list34 = AppendPairProgram.listgen(intArray33);
        List list35 = AppendPairProgram.listgen(intArray33);
        List list36 = AppendPairProgram.listgen(intArray33);
        List list37 = AppendPairProgram.listgen(intArray33);
        List list38 = AppendPairProgram.listgen(intArray33);
        List list39 = AppendPairProgram.listgen(intArray33);
        List list40 = AppendPairProgram.listgen(intArray33);
        List list41 = AppendPairProgram.listgen(intArray33);
        List list42 = AppendPairProgram.listgen(intArray33);
        appendPairProgram0.TestStudentSubmission(list42, (int) (byte) 1);
        java.lang.Class<?> wildcardClass45 = list42.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0]");
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]");
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        List list14 = AppendPairProgram.listgen(intArray11);
        List list15 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list15, (int) (byte) -1);
        int[] intArray18 = new int[] {};
        List list19 = AppendPairProgram.listgen(intArray18);
        List list20 = AppendPairProgram.listgen(intArray18);
        List list21 = AppendPairProgram.listgen(intArray18);
        List list22 = AppendPairProgram.listgen(intArray18);
        List list23 = AppendPairProgram.listgen(intArray18);
        List list24 = AppendPairProgram.listgen(intArray18);
        List list25 = AppendPairProgram.listgen(intArray18);
        List list26 = AppendPairProgram.listgen(intArray18);
        List list27 = AppendPairProgram.listgen(intArray18);
        List list28 = AppendPairProgram.listgen(intArray18);
        List list29 = AppendPairProgram.listgen(intArray18);
        List list30 = AppendPairProgram.listgen(intArray18);
        List list31 = AppendPairProgram.listgen(intArray18);
        List list32 = AppendPairProgram.listgen(intArray18);
        appendPairProgram0.TestStudentSubmission(list32, (int) '4');
        java.lang.Class<?> wildcardClass35 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        int[] intArray6 = new int[] { (short) -1, '#', '4', (short) -1, (short) 100, (byte) -1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        List list25 = AppendPairProgram.listgen(intArray6);
        List list26 = AppendPairProgram.listgen(intArray6);
        List list27 = AppendPairProgram.listgen(intArray6);
        List list28 = AppendPairProgram.listgen(intArray6);
        List list29 = AppendPairProgram.listgen(intArray6);
        List list30 = AppendPairProgram.listgen(intArray6);
        List list31 = AppendPairProgram.listgen(intArray6);
        List list32 = AppendPairProgram.listgen(intArray6);
        List list33 = AppendPairProgram.listgen(intArray6);
        List list34 = AppendPairProgram.listgen(intArray6);
        List list35 = AppendPairProgram.listgen(intArray6);
        List list36 = AppendPairProgram.listgen(intArray6);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 35, 52, -1, 100, -1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        int[] intArray6 = new int[] { (short) 0, (byte) 0, (byte) 1, 0, (-1), (byte) 100 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        List list25 = AppendPairProgram.listgen(intArray6);
        List list26 = AppendPairProgram.listgen(intArray6);
        List list27 = AppendPairProgram.listgen(intArray6);
        List list28 = AppendPairProgram.listgen(intArray6);
        List list29 = AppendPairProgram.listgen(intArray6);
        List list30 = AppendPairProgram.listgen(intArray6);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0, 1, 0, -1, 100]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, (int) (byte) 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list10, (-1));
        int[] intArray13 = new int[] {};
        List list14 = AppendPairProgram.listgen(intArray13);
        List list15 = AppendPairProgram.listgen(intArray13);
        List list16 = AppendPairProgram.listgen(intArray13);
        List list17 = AppendPairProgram.listgen(intArray13);
        List list18 = AppendPairProgram.listgen(intArray13);
        List list19 = AppendPairProgram.listgen(intArray13);
        List list20 = AppendPairProgram.listgen(intArray13);
        List list21 = AppendPairProgram.listgen(intArray13);
        List list22 = AppendPairProgram.listgen(intArray13);
        List list23 = AppendPairProgram.listgen(intArray13);
        List list24 = AppendPairProgram.listgen(intArray13);
        List list25 = AppendPairProgram.listgen(intArray13);
        List list26 = AppendPairProgram.listgen(intArray13);
        List list27 = AppendPairProgram.listgen(intArray13);
        appendPairProgram0.TestStudentSubmission(list27, (int) (short) -1);
        int[] intArray31 = new int[] { (byte) 10 };
        List list32 = AppendPairProgram.listgen(intArray31);
        List list33 = AppendPairProgram.listgen(intArray31);
        List list34 = AppendPairProgram.listgen(intArray31);
        List list35 = AppendPairProgram.listgen(intArray31);
        List list36 = AppendPairProgram.listgen(intArray31);
        List list37 = AppendPairProgram.listgen(intArray31);
        List list38 = AppendPairProgram.listgen(intArray31);
        List list39 = AppendPairProgram.listgen(intArray31);
        List list40 = AppendPairProgram.listgen(intArray31);
        List list41 = AppendPairProgram.listgen(intArray31);
        List list42 = AppendPairProgram.listgen(intArray31);
        List list43 = AppendPairProgram.listgen(intArray31);
        List list44 = AppendPairProgram.listgen(intArray31);
        List list45 = AppendPairProgram.listgen(intArray31);
        List list46 = AppendPairProgram.listgen(intArray31);
        appendPairProgram0.TestStudentSubmission(list46, 0);
        int[] intArray49 = new int[] {};
        List list50 = AppendPairProgram.listgen(intArray49);
        List list51 = AppendPairProgram.listgen(intArray49);
        appendPairProgram0.TestStudentSubmission(list51, (int) (short) 1);
        int[] intArray55 = new int[] { 0 };
        List list56 = AppendPairProgram.listgen(intArray55);
        appendPairProgram0.TestStudentSubmission(list56, (-1));
        java.lang.Class<?> wildcardClass59 = list56.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10]");
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[]");
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0]");
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        int[] intArray6 = new int[] { (short) -1, '#', '4', (short) -1, (short) 100, (byte) -1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        List list25 = AppendPairProgram.listgen(intArray6);
        List list26 = AppendPairProgram.listgen(intArray6);
        List list27 = AppendPairProgram.listgen(intArray6);
        List list28 = AppendPairProgram.listgen(intArray6);
        List list29 = AppendPairProgram.listgen(intArray6);
        List list30 = AppendPairProgram.listgen(intArray6);
        List list31 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass32 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 35, 52, -1, 100, -1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        int[] intArray5 = new int[] { '4', 10, (byte) 1, (byte) 100, (byte) 10 };
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        List list9 = AppendPairProgram.listgen(intArray5);
        List list10 = AppendPairProgram.listgen(intArray5);
        List list11 = AppendPairProgram.listgen(intArray5);
        List list12 = AppendPairProgram.listgen(intArray5);
        List list13 = AppendPairProgram.listgen(intArray5);
        List list14 = AppendPairProgram.listgen(intArray5);
        List list15 = AppendPairProgram.listgen(intArray5);
        java.lang.Class<?> wildcardClass16 = list15.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[52, 10, 1, 100, 10]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray15 = new int[] {};
        List list16 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 100);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        List list24 = AppendPairProgram.listgen(intArray19);
        List list25 = AppendPairProgram.listgen(intArray19);
        List list26 = AppendPairProgram.listgen(intArray19);
        List list27 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list27, (int) (short) -1);
        List list30 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list30, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        List list12 = AppendPairProgram.listgen(intArray9);
        List list13 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        List list27 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list27, 100);
        int[] intArray31 = new int[] { (byte) 10 };
        List list32 = AppendPairProgram.listgen(intArray31);
        List list33 = AppendPairProgram.listgen(intArray31);
        List list34 = AppendPairProgram.listgen(intArray31);
        List list35 = AppendPairProgram.listgen(intArray31);
        List list36 = AppendPairProgram.listgen(intArray31);
        appendPairProgram0.TestStudentSubmission(list36, (int) (byte) 100);
        int[] intArray40 = new int[] { (byte) 10 };
        List list41 = AppendPairProgram.listgen(intArray40);
        List list42 = AppendPairProgram.listgen(intArray40);
        List list43 = AppendPairProgram.listgen(intArray40);
        List list44 = AppendPairProgram.listgen(intArray40);
        List list45 = AppendPairProgram.listgen(intArray40);
        List list46 = AppendPairProgram.listgen(intArray40);
        List list47 = AppendPairProgram.listgen(intArray40);
        List list48 = AppendPairProgram.listgen(intArray40);
        List list49 = AppendPairProgram.listgen(intArray40);
        List list50 = AppendPairProgram.listgen(intArray40);
        List list51 = AppendPairProgram.listgen(intArray40);
        List list52 = AppendPairProgram.listgen(intArray40);
        appendPairProgram0.TestStudentSubmission(list52, (int) (short) 100);
        int[] intArray56 = new int[] { (byte) 10 };
        List list57 = AppendPairProgram.listgen(intArray56);
        List list58 = AppendPairProgram.listgen(intArray56);
        List list59 = AppendPairProgram.listgen(intArray56);
        List list60 = AppendPairProgram.listgen(intArray56);
        List list61 = AppendPairProgram.listgen(intArray56);
        List list62 = AppendPairProgram.listgen(intArray56);
        List list63 = AppendPairProgram.listgen(intArray56);
        List list64 = AppendPairProgram.listgen(intArray56);
        List list65 = AppendPairProgram.listgen(intArray56);
        List list66 = AppendPairProgram.listgen(intArray56);
        List list67 = AppendPairProgram.listgen(intArray56);
        List list68 = AppendPairProgram.listgen(intArray56);
        List list69 = AppendPairProgram.listgen(intArray56);
        List list70 = AppendPairProgram.listgen(intArray56);
        List list71 = AppendPairProgram.listgen(intArray56);
        List list72 = AppendPairProgram.listgen(intArray56);
        List list73 = AppendPairProgram.listgen(intArray56);
        List list74 = AppendPairProgram.listgen(intArray56);
        List list75 = AppendPairProgram.listgen(intArray56);
        List list76 = AppendPairProgram.listgen(intArray56);
        appendPairProgram0.TestStudentSubmission(list76, (int) (byte) 10);
        int[] intArray80 = new int[] { 0 };
        List list81 = AppendPairProgram.listgen(intArray80);
        appendPairProgram0.TestStudentSubmission(list81, (int) (byte) 100);
        java.lang.Class<?> wildcardClass84 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10]");
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[10]");
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[10]");
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(list61);
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(list63);
        org.junit.Assert.assertNotNull(list64);
        org.junit.Assert.assertNotNull(list65);
        org.junit.Assert.assertNotNull(list66);
        org.junit.Assert.assertNotNull(list67);
        org.junit.Assert.assertNotNull(list68);
        org.junit.Assert.assertNotNull(list69);
        org.junit.Assert.assertNotNull(list70);
        org.junit.Assert.assertNotNull(list71);
        org.junit.Assert.assertNotNull(list72);
        org.junit.Assert.assertNotNull(list73);
        org.junit.Assert.assertNotNull(list74);
        org.junit.Assert.assertNotNull(list75);
        org.junit.Assert.assertNotNull(list76);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0]");
        org.junit.Assert.assertNotNull(list81);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        int[] intArray4 = new int[] { 'a', (byte) -1, 100, (byte) 10 };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        List list7 = AppendPairProgram.listgen(intArray4);
        List list8 = AppendPairProgram.listgen(intArray4);
        List list9 = AppendPairProgram.listgen(intArray4);
        List list10 = AppendPairProgram.listgen(intArray4);
        List list11 = AppendPairProgram.listgen(intArray4);
        List list12 = AppendPairProgram.listgen(intArray4);
        List list13 = AppendPairProgram.listgen(intArray4);
        List list14 = AppendPairProgram.listgen(intArray4);
        List list15 = AppendPairProgram.listgen(intArray4);
        List list16 = AppendPairProgram.listgen(intArray4);
        List list17 = AppendPairProgram.listgen(intArray4);
        List list18 = AppendPairProgram.listgen(intArray4);
        List list19 = AppendPairProgram.listgen(intArray4);
        List list20 = AppendPairProgram.listgen(intArray4);
        List list21 = AppendPairProgram.listgen(intArray4);
        List list22 = AppendPairProgram.listgen(intArray4);
        List list23 = AppendPairProgram.listgen(intArray4);
        java.lang.Class<?> wildcardClass24 = list23.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[97, -1, 100, 10]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        int[] intArray3 = new int[] { 1, '#', (byte) 0 };
        List list4 = AppendPairProgram.listgen(intArray3);
        List list5 = AppendPairProgram.listgen(intArray3);
        List list6 = AppendPairProgram.listgen(intArray3);
        java.lang.Class<?> wildcardClass7 = list6.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 35, 0]");
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, (int) (short) -1);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list25, (int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, (int) (byte) 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list10, (-1));
        int[] intArray13 = new int[] {};
        List list14 = AppendPairProgram.listgen(intArray13);
        List list15 = AppendPairProgram.listgen(intArray13);
        List list16 = AppendPairProgram.listgen(intArray13);
        List list17 = AppendPairProgram.listgen(intArray13);
        List list18 = AppendPairProgram.listgen(intArray13);
        List list19 = AppendPairProgram.listgen(intArray13);
        List list20 = AppendPairProgram.listgen(intArray13);
        List list21 = AppendPairProgram.listgen(intArray13);
        List list22 = AppendPairProgram.listgen(intArray13);
        List list23 = AppendPairProgram.listgen(intArray13);
        List list24 = AppendPairProgram.listgen(intArray13);
        List list25 = AppendPairProgram.listgen(intArray13);
        List list26 = AppendPairProgram.listgen(intArray13);
        List list27 = AppendPairProgram.listgen(intArray13);
        appendPairProgram0.TestStudentSubmission(list27, (int) (short) -1);
        int[] intArray31 = new int[] { (byte) 10 };
        List list32 = AppendPairProgram.listgen(intArray31);
        List list33 = AppendPairProgram.listgen(intArray31);
        List list34 = AppendPairProgram.listgen(intArray31);
        List list35 = AppendPairProgram.listgen(intArray31);
        List list36 = AppendPairProgram.listgen(intArray31);
        List list37 = AppendPairProgram.listgen(intArray31);
        List list38 = AppendPairProgram.listgen(intArray31);
        List list39 = AppendPairProgram.listgen(intArray31);
        List list40 = AppendPairProgram.listgen(intArray31);
        List list41 = AppendPairProgram.listgen(intArray31);
        List list42 = AppendPairProgram.listgen(intArray31);
        List list43 = AppendPairProgram.listgen(intArray31);
        List list44 = AppendPairProgram.listgen(intArray31);
        List list45 = AppendPairProgram.listgen(intArray31);
        List list46 = AppendPairProgram.listgen(intArray31);
        appendPairProgram0.TestStudentSubmission(list46, 0);
        int[] intArray50 = new int[] { (byte) 10 };
        List list51 = AppendPairProgram.listgen(intArray50);
        List list52 = AppendPairProgram.listgen(intArray50);
        List list53 = AppendPairProgram.listgen(intArray50);
        List list54 = AppendPairProgram.listgen(intArray50);
        List list55 = AppendPairProgram.listgen(intArray50);
        List list56 = AppendPairProgram.listgen(intArray50);
        List list57 = AppendPairProgram.listgen(intArray50);
        List list58 = AppendPairProgram.listgen(intArray50);
        List list59 = AppendPairProgram.listgen(intArray50);
        List list60 = AppendPairProgram.listgen(intArray50);
        List list61 = AppendPairProgram.listgen(intArray50);
        List list62 = AppendPairProgram.listgen(intArray50);
        List list63 = AppendPairProgram.listgen(intArray50);
        List list64 = AppendPairProgram.listgen(intArray50);
        List list65 = AppendPairProgram.listgen(intArray50);
        List list66 = AppendPairProgram.listgen(intArray50);
        List list67 = AppendPairProgram.listgen(intArray50);
        List list68 = AppendPairProgram.listgen(intArray50);
        List list69 = AppendPairProgram.listgen(intArray50);
        List list70 = AppendPairProgram.listgen(intArray50);
        List list71 = AppendPairProgram.listgen(intArray50);
        appendPairProgram0.TestStudentSubmission(list71, 0);
        java.lang.Class<?> wildcardClass74 = list71.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10]");
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[10]");
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(list61);
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(list63);
        org.junit.Assert.assertNotNull(list64);
        org.junit.Assert.assertNotNull(list65);
        org.junit.Assert.assertNotNull(list66);
        org.junit.Assert.assertNotNull(list67);
        org.junit.Assert.assertNotNull(list68);
        org.junit.Assert.assertNotNull(list69);
        org.junit.Assert.assertNotNull(list70);
        org.junit.Assert.assertNotNull(list71);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        int[] intArray3 = new int[] { 1, '#', (byte) 0 };
        List list4 = AppendPairProgram.listgen(intArray3);
        List list5 = AppendPairProgram.listgen(intArray3);
        List list6 = AppendPairProgram.listgen(intArray3);
        List list7 = AppendPairProgram.listgen(intArray3);
        List list8 = AppendPairProgram.listgen(intArray3);
        List list9 = AppendPairProgram.listgen(intArray3);
        List list10 = AppendPairProgram.listgen(intArray3);
        java.lang.Class<?> wildcardClass11 = list10.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 35, 0]");
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray12 = new int[] { (byte) 10 };
        List list13 = AppendPairProgram.listgen(intArray12);
        List list14 = AppendPairProgram.listgen(intArray12);
        List list15 = AppendPairProgram.listgen(intArray12);
        List list16 = AppendPairProgram.listgen(intArray12);
        List list17 = AppendPairProgram.listgen(intArray12);
        List list18 = AppendPairProgram.listgen(intArray12);
        List list19 = AppendPairProgram.listgen(intArray12);
        List list20 = AppendPairProgram.listgen(intArray12);
        List list21 = AppendPairProgram.listgen(intArray12);
        List list22 = AppendPairProgram.listgen(intArray12);
        List list23 = AppendPairProgram.listgen(intArray12);
        List list24 = AppendPairProgram.listgen(intArray12);
        List list25 = AppendPairProgram.listgen(intArray12);
        List list26 = AppendPairProgram.listgen(intArray12);
        List list27 = AppendPairProgram.listgen(intArray12);
        List list28 = AppendPairProgram.listgen(intArray12);
        List list29 = AppendPairProgram.listgen(intArray12);
        List list30 = AppendPairProgram.listgen(intArray12);
        List list31 = AppendPairProgram.listgen(intArray12);
        List list32 = AppendPairProgram.listgen(intArray12);
        appendPairProgram0.TestStudentSubmission(list32, (int) '4');
        java.lang.Class<?> wildcardClass35 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10]");
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, (int) (byte) 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list10, (-1));
        int[] intArray13 = new int[] {};
        List list14 = AppendPairProgram.listgen(intArray13);
        List list15 = AppendPairProgram.listgen(intArray13);
        appendPairProgram0.TestStudentSubmission(list15, (int) (byte) 1);
        int[] intArray19 = new int[] { (byte) 10 };
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        List list24 = AppendPairProgram.listgen(intArray19);
        List list25 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list25, (int) (short) -1);
        int[] intArray28 = new int[] {};
        List list29 = AppendPairProgram.listgen(intArray28);
        List list30 = AppendPairProgram.listgen(intArray28);
        List list31 = AppendPairProgram.listgen(intArray28);
        List list32 = AppendPairProgram.listgen(intArray28);
        List list33 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list33, (-1));
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, (int) (byte) 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list10, (-1));
        int[] intArray13 = new int[] {};
        List list14 = AppendPairProgram.listgen(intArray13);
        List list15 = AppendPairProgram.listgen(intArray13);
        List list16 = AppendPairProgram.listgen(intArray13);
        List list17 = AppendPairProgram.listgen(intArray13);
        List list18 = AppendPairProgram.listgen(intArray13);
        List list19 = AppendPairProgram.listgen(intArray13);
        List list20 = AppendPairProgram.listgen(intArray13);
        appendPairProgram0.TestStudentSubmission(list20, (-1));
        int[] intArray23 = new int[] {};
        List list24 = AppendPairProgram.listgen(intArray23);
        List list25 = AppendPairProgram.listgen(intArray23);
        List list26 = AppendPairProgram.listgen(intArray23);
        List list27 = AppendPairProgram.listgen(intArray23);
        List list28 = AppendPairProgram.listgen(intArray23);
        List list29 = AppendPairProgram.listgen(intArray23);
        List list30 = AppendPairProgram.listgen(intArray23);
        List list31 = AppendPairProgram.listgen(intArray23);
        List list32 = AppendPairProgram.listgen(intArray23);
        List list33 = AppendPairProgram.listgen(intArray23);
        List list34 = AppendPairProgram.listgen(intArray23);
        List list35 = AppendPairProgram.listgen(intArray23);
        List list36 = AppendPairProgram.listgen(intArray23);
        List list37 = AppendPairProgram.listgen(intArray23);
        List list38 = AppendPairProgram.listgen(intArray23);
        List list39 = AppendPairProgram.listgen(intArray23);
        List list40 = AppendPairProgram.listgen(intArray23);
        appendPairProgram0.TestStudentSubmission(list40, (int) (short) 100);
        java.lang.Class<?> wildcardClass43 = list40.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[]");
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        List list7 = AppendPairProgram.listgen(intArray1);
        List list8 = AppendPairProgram.listgen(intArray1);
        List list9 = AppendPairProgram.listgen(intArray1);
        List list10 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list10, (int) (byte) 10);
        int[] intArray14 = new int[] { 0 };
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) ' ');
        List list19 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list19, (int) '4');
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        int[] intArray6 = new int[] { 'a', (byte) 100, 0, (byte) 10, '4', 100 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[97, 100, 0, 10, 52, 100]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, 1);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list22, (int) (short) 1);
        int[] intArray25 = new int[] {};
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        List list31 = AppendPairProgram.listgen(intArray25);
        List list32 = AppendPairProgram.listgen(intArray25);
        List list33 = AppendPairProgram.listgen(intArray25);
        List list34 = AppendPairProgram.listgen(intArray25);
        List list35 = AppendPairProgram.listgen(intArray25);
        List list36 = AppendPairProgram.listgen(intArray25);
        List list37 = AppendPairProgram.listgen(intArray25);
        List list38 = AppendPairProgram.listgen(intArray25);
        List list39 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list39, (int) '#');
        int[] intArray42 = new int[] {};
        List list43 = AppendPairProgram.listgen(intArray42);
        List list44 = AppendPairProgram.listgen(intArray42);
        List list45 = AppendPairProgram.listgen(intArray42);
        appendPairProgram0.TestStudentSubmission(list45, 10);
        int[] intArray48 = new int[] {};
        List list49 = AppendPairProgram.listgen(intArray48);
        List list50 = AppendPairProgram.listgen(intArray48);
        List list51 = AppendPairProgram.listgen(intArray48);
        List list52 = AppendPairProgram.listgen(intArray48);
        List list53 = AppendPairProgram.listgen(intArray48);
        List list54 = AppendPairProgram.listgen(intArray48);
        appendPairProgram0.TestStudentSubmission(list54, (int) (short) 1);
        int[] intArray58 = new int[] { (byte) 10 };
        List list59 = AppendPairProgram.listgen(intArray58);
        List list60 = AppendPairProgram.listgen(intArray58);
        List list61 = AppendPairProgram.listgen(intArray58);
        List list62 = AppendPairProgram.listgen(intArray58);
        appendPairProgram0.TestStudentSubmission(list62, 1);
        int[] intArray65 = new int[] {};
        List list66 = AppendPairProgram.listgen(intArray65);
        List list67 = AppendPairProgram.listgen(intArray65);
        List list68 = AppendPairProgram.listgen(intArray65);
        List list69 = AppendPairProgram.listgen(intArray65);
        List list70 = AppendPairProgram.listgen(intArray65);
        List list71 = AppendPairProgram.listgen(intArray65);
        List list72 = AppendPairProgram.listgen(intArray65);
        List list73 = AppendPairProgram.listgen(intArray65);
        List list74 = AppendPairProgram.listgen(intArray65);
        appendPairProgram0.TestStudentSubmission(list74, (int) (short) 0);
        java.lang.Class<?> wildcardClass77 = list74.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]");
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[]");
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[10]");
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(list61);
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[]");
        org.junit.Assert.assertNotNull(list66);
        org.junit.Assert.assertNotNull(list67);
        org.junit.Assert.assertNotNull(list68);
        org.junit.Assert.assertNotNull(list69);
        org.junit.Assert.assertNotNull(list70);
        org.junit.Assert.assertNotNull(list71);
        org.junit.Assert.assertNotNull(list72);
        org.junit.Assert.assertNotNull(list73);
        org.junit.Assert.assertNotNull(list74);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray10 = new int[] { (byte) 10 };
        List list11 = AppendPairProgram.listgen(intArray10);
        List list12 = AppendPairProgram.listgen(intArray10);
        List list13 = AppendPairProgram.listgen(intArray10);
        List list14 = AppendPairProgram.listgen(intArray10);
        List list15 = AppendPairProgram.listgen(intArray10);
        List list16 = AppendPairProgram.listgen(intArray10);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 1);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        List list24 = AppendPairProgram.listgen(intArray19);
        List list25 = AppendPairProgram.listgen(intArray19);
        List list26 = AppendPairProgram.listgen(intArray19);
        List list27 = AppendPairProgram.listgen(intArray19);
        List list28 = AppendPairProgram.listgen(intArray19);
        List list29 = AppendPairProgram.listgen(intArray19);
        List list30 = AppendPairProgram.listgen(intArray19);
        List list31 = AppendPairProgram.listgen(intArray19);
        List list32 = AppendPairProgram.listgen(intArray19);
        List list33 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list33, (int) (byte) 1);
        int[] intArray37 = new int[] { (byte) 10 };
        List list38 = AppendPairProgram.listgen(intArray37);
        List list39 = AppendPairProgram.listgen(intArray37);
        List list40 = AppendPairProgram.listgen(intArray37);
        List list41 = AppendPairProgram.listgen(intArray37);
        List list42 = AppendPairProgram.listgen(intArray37);
        appendPairProgram0.TestStudentSubmission(list42, (int) (byte) 100);
        int[] intArray46 = new int[] { (byte) 10 };
        List list47 = AppendPairProgram.listgen(intArray46);
        appendPairProgram0.TestStudentSubmission(list47, 10);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10]");
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[10]");
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[10]");
        org.junit.Assert.assertNotNull(list47);
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        List list14 = AppendPairProgram.listgen(intArray11);
        List list15 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list15, (int) (byte) -1);
        int[] intArray18 = new int[] {};
        List list19 = AppendPairProgram.listgen(intArray18);
        List list20 = AppendPairProgram.listgen(intArray18);
        List list21 = AppendPairProgram.listgen(intArray18);
        appendPairProgram0.TestStudentSubmission(list21, (int) (short) 10);
        int[] intArray25 = new int[] { (byte) 10 };
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list29, 100);
        int[] intArray33 = new int[] { (byte) 10 };
        List list34 = AppendPairProgram.listgen(intArray33);
        List list35 = AppendPairProgram.listgen(intArray33);
        List list36 = AppendPairProgram.listgen(intArray33);
        List list37 = AppendPairProgram.listgen(intArray33);
        List list38 = AppendPairProgram.listgen(intArray33);
        List list39 = AppendPairProgram.listgen(intArray33);
        List list40 = AppendPairProgram.listgen(intArray33);
        List list41 = AppendPairProgram.listgen(intArray33);
        List list42 = AppendPairProgram.listgen(intArray33);
        appendPairProgram0.TestStudentSubmission(list42, 100);
        int[] intArray45 = new int[] {};
        List list46 = AppendPairProgram.listgen(intArray45);
        List list47 = AppendPairProgram.listgen(intArray45);
        List list48 = AppendPairProgram.listgen(intArray45);
        List list49 = AppendPairProgram.listgen(intArray45);
        List list50 = AppendPairProgram.listgen(intArray45);
        List list51 = AppendPairProgram.listgen(intArray45);
        List list52 = AppendPairProgram.listgen(intArray45);
        appendPairProgram0.TestStudentSubmission(list52, (int) (short) -1);
        List list55 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list55, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[10]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10]");
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[]");
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        List list7 = AppendPairProgram.listgen(intArray1);
        List list8 = AppendPairProgram.listgen(intArray1);
        List list9 = AppendPairProgram.listgen(intArray1);
        List list10 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list10, (int) (byte) 10);
        int[] intArray14 = new int[] { 0 };
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) ' ');
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        List list24 = AppendPairProgram.listgen(intArray19);
        List list25 = AppendPairProgram.listgen(intArray19);
        List list26 = AppendPairProgram.listgen(intArray19);
        List list27 = AppendPairProgram.listgen(intArray19);
        List list28 = AppendPairProgram.listgen(intArray19);
        List list29 = AppendPairProgram.listgen(intArray19);
        List list30 = AppendPairProgram.listgen(intArray19);
        List list31 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list31, (int) '#');
        int[] intArray35 = new int[] { (byte) 10 };
        List list36 = AppendPairProgram.listgen(intArray35);
        List list37 = AppendPairProgram.listgen(intArray35);
        List list38 = AppendPairProgram.listgen(intArray35);
        appendPairProgram0.TestStudentSubmission(list38, 1);
        List list41 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list41, 100);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[10]");
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray2 = new int[] { (byte) 10 };
        List list3 = AppendPairProgram.listgen(intArray2);
        List list4 = AppendPairProgram.listgen(intArray2);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 0);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        List list14 = AppendPairProgram.listgen(intArray7);
        List list15 = AppendPairProgram.listgen(intArray7);
        List list16 = AppendPairProgram.listgen(intArray7);
        List list17 = AppendPairProgram.listgen(intArray7);
        List list18 = AppendPairProgram.listgen(intArray7);
        List list19 = AppendPairProgram.listgen(intArray7);
        List list20 = AppendPairProgram.listgen(intArray7);
        List list21 = AppendPairProgram.listgen(intArray7);
        List list22 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list22, (int) '4');
        int[] intArray25 = new int[] {};
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        List list31 = AppendPairProgram.listgen(intArray25);
        List list32 = AppendPairProgram.listgen(intArray25);
        List list33 = AppendPairProgram.listgen(intArray25);
        List list34 = AppendPairProgram.listgen(intArray25);
        List list35 = AppendPairProgram.listgen(intArray25);
        List list36 = AppendPairProgram.listgen(intArray25);
        List list37 = AppendPairProgram.listgen(intArray25);
        List list38 = AppendPairProgram.listgen(intArray25);
        List list39 = AppendPairProgram.listgen(intArray25);
        List list40 = AppendPairProgram.listgen(intArray25);
        List list41 = AppendPairProgram.listgen(intArray25);
        List list42 = AppendPairProgram.listgen(intArray25);
        List list43 = AppendPairProgram.listgen(intArray25);
        List list44 = AppendPairProgram.listgen(intArray25);
        List list45 = AppendPairProgram.listgen(intArray25);
        List list46 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list46, (int) (short) 0);
        int[] intArray50 = new int[] { 0 };
        List list51 = AppendPairProgram.listgen(intArray50);
        List list52 = AppendPairProgram.listgen(intArray50);
        List list53 = AppendPairProgram.listgen(intArray50);
        appendPairProgram0.TestStudentSubmission(list53, (int) (short) 100);
        java.lang.Class<?> wildcardClass56 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[10]");
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0]");
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, (int) (short) -1);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list25, (int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = list25.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        List list7 = AppendPairProgram.listgen(intArray1);
        List list8 = AppendPairProgram.listgen(intArray1);
        List list9 = AppendPairProgram.listgen(intArray1);
        List list10 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list10, (int) (byte) 10);
        int[] intArray13 = new int[] {};
        List list14 = AppendPairProgram.listgen(intArray13);
        List list15 = AppendPairProgram.listgen(intArray13);
        List list16 = AppendPairProgram.listgen(intArray13);
        List list17 = AppendPairProgram.listgen(intArray13);
        List list18 = AppendPairProgram.listgen(intArray13);
        List list19 = AppendPairProgram.listgen(intArray13);
        List list20 = AppendPairProgram.listgen(intArray13);
        List list21 = AppendPairProgram.listgen(intArray13);
        List list22 = AppendPairProgram.listgen(intArray13);
        appendPairProgram0.TestStudentSubmission(list22, (int) '4');
        java.lang.Class<?> wildcardClass25 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        List list12 = AppendPairProgram.listgen(intArray9);
        List list13 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        List list27 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list27, 100);
        int[] intArray30 = new int[] {};
        List list31 = AppendPairProgram.listgen(intArray30);
        List list32 = AppendPairProgram.listgen(intArray30);
        List list33 = AppendPairProgram.listgen(intArray30);
        List list34 = AppendPairProgram.listgen(intArray30);
        List list35 = AppendPairProgram.listgen(intArray30);
        List list36 = AppendPairProgram.listgen(intArray30);
        List list37 = AppendPairProgram.listgen(intArray30);
        List list38 = AppendPairProgram.listgen(intArray30);
        List list39 = AppendPairProgram.listgen(intArray30);
        List list40 = AppendPairProgram.listgen(intArray30);
        List list41 = AppendPairProgram.listgen(intArray30);
        List list42 = AppendPairProgram.listgen(intArray30);
        List list43 = AppendPairProgram.listgen(intArray30);
        List list44 = AppendPairProgram.listgen(intArray30);
        List list45 = AppendPairProgram.listgen(intArray30);
        List list46 = AppendPairProgram.listgen(intArray30);
        List list47 = AppendPairProgram.listgen(intArray30);
        appendPairProgram0.TestStudentSubmission(list47, (int) (byte) 1);
        int[] intArray51 = new int[] { (byte) 10 };
        List list52 = AppendPairProgram.listgen(intArray51);
        List list53 = AppendPairProgram.listgen(intArray51);
        List list54 = AppendPairProgram.listgen(intArray51);
        List list55 = AppendPairProgram.listgen(intArray51);
        List list56 = AppendPairProgram.listgen(intArray51);
        List list57 = AppendPairProgram.listgen(intArray51);
        List list58 = AppendPairProgram.listgen(intArray51);
        List list59 = AppendPairProgram.listgen(intArray51);
        List list60 = AppendPairProgram.listgen(intArray51);
        appendPairProgram0.TestStudentSubmission(list60, (int) (short) 10);
        int[] intArray63 = new int[] {};
        List list64 = AppendPairProgram.listgen(intArray63);
        List list65 = AppendPairProgram.listgen(intArray63);
        List list66 = AppendPairProgram.listgen(intArray63);
        List list67 = AppendPairProgram.listgen(intArray63);
        appendPairProgram0.TestStudentSubmission(list67, (int) (short) 0);
        List list70 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list70, 1);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]");
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[10]");
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[]");
        org.junit.Assert.assertNotNull(list64);
        org.junit.Assert.assertNotNull(list65);
        org.junit.Assert.assertNotNull(list66);
        org.junit.Assert.assertNotNull(list67);
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        int[] intArray1 = new int[] { (byte) 10 };
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        List list7 = AppendPairProgram.listgen(intArray1);
        List list8 = AppendPairProgram.listgen(intArray1);
        List list9 = AppendPairProgram.listgen(intArray1);
        List list10 = AppendPairProgram.listgen(intArray1);
        List list11 = AppendPairProgram.listgen(intArray1);
        List list12 = AppendPairProgram.listgen(intArray1);
        List list13 = AppendPairProgram.listgen(intArray1);
        List list14 = AppendPairProgram.listgen(intArray1);
        List list15 = AppendPairProgram.listgen(intArray1);
        List list16 = AppendPairProgram.listgen(intArray1);
        List list17 = AppendPairProgram.listgen(intArray1);
        java.lang.Class<?> wildcardClass18 = list17.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[10]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        List list7 = AppendPairProgram.listgen(intArray1);
        List list8 = AppendPairProgram.listgen(intArray1);
        List list9 = AppendPairProgram.listgen(intArray1);
        List list10 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list10, (int) (byte) 10);
        int[] intArray14 = new int[] { 0 };
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (short) 0);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list23, 0);
        int[] intArray26 = new int[] {};
        List list27 = AppendPairProgram.listgen(intArray26);
        List list28 = AppendPairProgram.listgen(intArray26);
        List list29 = AppendPairProgram.listgen(intArray26);
        List list30 = AppendPairProgram.listgen(intArray26);
        List list31 = AppendPairProgram.listgen(intArray26);
        List list32 = AppendPairProgram.listgen(intArray26);
        List list33 = AppendPairProgram.listgen(intArray26);
        List list34 = AppendPairProgram.listgen(intArray26);
        List list35 = AppendPairProgram.listgen(intArray26);
        List list36 = AppendPairProgram.listgen(intArray26);
        List list37 = AppendPairProgram.listgen(intArray26);
        List list38 = AppendPairProgram.listgen(intArray26);
        List list39 = AppendPairProgram.listgen(intArray26);
        List list40 = AppendPairProgram.listgen(intArray26);
        List list41 = AppendPairProgram.listgen(intArray26);
        List list42 = AppendPairProgram.listgen(intArray26);
        appendPairProgram0.TestStudentSubmission(list42, (int) (byte) 100);
        java.lang.Class<?> wildcardClass45 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray16 = new int[] { (byte) 10 };
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list18, (int) (byte) -1);
        int[] intArray21 = new int[] {};
        List list22 = AppendPairProgram.listgen(intArray21);
        List list23 = AppendPairProgram.listgen(intArray21);
        List list24 = AppendPairProgram.listgen(intArray21);
        List list25 = AppendPairProgram.listgen(intArray21);
        List list26 = AppendPairProgram.listgen(intArray21);
        List list27 = AppendPairProgram.listgen(intArray21);
        List list28 = AppendPairProgram.listgen(intArray21);
        List list29 = AppendPairProgram.listgen(intArray21);
        List list30 = AppendPairProgram.listgen(intArray21);
        appendPairProgram0.TestStudentSubmission(list30, (int) (short) -1);
        int[] intArray34 = new int[] { 0 };
        List list35 = AppendPairProgram.listgen(intArray34);
        List list36 = AppendPairProgram.listgen(intArray34);
        List list37 = AppendPairProgram.listgen(intArray34);
        List list38 = AppendPairProgram.listgen(intArray34);
        List list39 = AppendPairProgram.listgen(intArray34);
        List list40 = AppendPairProgram.listgen(intArray34);
        List list41 = AppendPairProgram.listgen(intArray34);
        List list42 = AppendPairProgram.listgen(intArray34);
        List list43 = AppendPairProgram.listgen(intArray34);
        List list44 = AppendPairProgram.listgen(intArray34);
        List list45 = AppendPairProgram.listgen(intArray34);
        List list46 = AppendPairProgram.listgen(intArray34);
        List list47 = AppendPairProgram.listgen(intArray34);
        appendPairProgram0.TestStudentSubmission(list47, 0);
        int[] intArray50 = new int[] {};
        List list51 = AppendPairProgram.listgen(intArray50);
        appendPairProgram0.TestStudentSubmission(list51, 1);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0]");
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[]");
        org.junit.Assert.assertNotNull(list51);
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        int[] intArray6 = new int[] { 0, (short) 10, (short) -1, '#', (byte) 100, 1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        List list25 = AppendPairProgram.listgen(intArray6);
        List list26 = AppendPairProgram.listgen(intArray6);
        List list27 = AppendPairProgram.listgen(intArray6);
        List list28 = AppendPairProgram.listgen(intArray6);
        List list29 = AppendPairProgram.listgen(intArray6);
        List list30 = AppendPairProgram.listgen(intArray6);
        List list31 = AppendPairProgram.listgen(intArray6);
        List list32 = AppendPairProgram.listgen(intArray6);
        List list33 = AppendPairProgram.listgen(intArray6);
        List list34 = AppendPairProgram.listgen(intArray6);
        List list35 = AppendPairProgram.listgen(intArray6);
        List list36 = AppendPairProgram.listgen(intArray6);
        List list37 = AppendPairProgram.listgen(intArray6);
        List list38 = AppendPairProgram.listgen(intArray6);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 10, -1, 35, 100, 1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) 0);
        int[] intArray15 = new int[] { (byte) 10 };
        List list16 = AppendPairProgram.listgen(intArray15);
        List list17 = AppendPairProgram.listgen(intArray15);
        List list18 = AppendPairProgram.listgen(intArray15);
        List list19 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list19, (int) (byte) 100);
        int[] intArray23 = new int[] { 0 };
        List list24 = AppendPairProgram.listgen(intArray23);
        List list25 = AppendPairProgram.listgen(intArray23);
        List list26 = AppendPairProgram.listgen(intArray23);
        appendPairProgram0.TestStudentSubmission(list26, (int) (short) -1);
        int[] intArray30 = new int[] { 0 };
        List list31 = AppendPairProgram.listgen(intArray30);
        List list32 = AppendPairProgram.listgen(intArray30);
        List list33 = AppendPairProgram.listgen(intArray30);
        List list34 = AppendPairProgram.listgen(intArray30);
        List list35 = AppendPairProgram.listgen(intArray30);
        List list36 = AppendPairProgram.listgen(intArray30);
        List list37 = AppendPairProgram.listgen(intArray30);
        List list38 = AppendPairProgram.listgen(intArray30);
        List list39 = AppendPairProgram.listgen(intArray30);
        List list40 = AppendPairProgram.listgen(intArray30);
        List list41 = AppendPairProgram.listgen(intArray30);
        appendPairProgram0.TestStudentSubmission(list41, (int) (short) 0);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0]");
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0]");
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        List list14 = AppendPairProgram.listgen(intArray7);
        List list15 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list15, (int) (byte) 0);
        int[] intArray19 = new int[] { (byte) 10 };
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        List list24 = AppendPairProgram.listgen(intArray19);
        List list25 = AppendPairProgram.listgen(intArray19);
        List list26 = AppendPairProgram.listgen(intArray19);
        List list27 = AppendPairProgram.listgen(intArray19);
        List list28 = AppendPairProgram.listgen(intArray19);
        List list29 = AppendPairProgram.listgen(intArray19);
        List list30 = AppendPairProgram.listgen(intArray19);
        List list31 = AppendPairProgram.listgen(intArray19);
        List list32 = AppendPairProgram.listgen(intArray19);
        List list33 = AppendPairProgram.listgen(intArray19);
        List list34 = AppendPairProgram.listgen(intArray19);
        List list35 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list35, (int) ' ');
        java.lang.Class<?> wildcardClass38 = list35.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) -1);
        int[] intArray14 = new int[] {};
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 10);
        int[] intArray20 = new int[] { (short) -1 };
        List list21 = AppendPairProgram.listgen(intArray20);
        List list22 = AppendPairProgram.listgen(intArray20);
        List list23 = AppendPairProgram.listgen(intArray20);
        appendPairProgram0.TestStudentSubmission(list23, 100);
        int[] intArray26 = new int[] {};
        List list27 = AppendPairProgram.listgen(intArray26);
        List list28 = AppendPairProgram.listgen(intArray26);
        List list29 = AppendPairProgram.listgen(intArray26);
        List list30 = AppendPairProgram.listgen(intArray26);
        List list31 = AppendPairProgram.listgen(intArray26);
        List list32 = AppendPairProgram.listgen(intArray26);
        List list33 = AppendPairProgram.listgen(intArray26);
        List list34 = AppendPairProgram.listgen(intArray26);
        List list35 = AppendPairProgram.listgen(intArray26);
        List list36 = AppendPairProgram.listgen(intArray26);
        List list37 = AppendPairProgram.listgen(intArray26);
        List list38 = AppendPairProgram.listgen(intArray26);
        List list39 = AppendPairProgram.listgen(intArray26);
        List list40 = AppendPairProgram.listgen(intArray26);
        List list41 = AppendPairProgram.listgen(intArray26);
        List list42 = AppendPairProgram.listgen(intArray26);
        List list43 = AppendPairProgram.listgen(intArray26);
        List list44 = AppendPairProgram.listgen(intArray26);
        appendPairProgram0.TestStudentSubmission(list44, (int) (byte) 100);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1]");
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list24, (int) (short) 0);
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        List list30 = AppendPairProgram.listgen(intArray28);
        List list31 = AppendPairProgram.listgen(intArray28);
        List list32 = AppendPairProgram.listgen(intArray28);
        List list33 = AppendPairProgram.listgen(intArray28);
        List list34 = AppendPairProgram.listgen(intArray28);
        List list35 = AppendPairProgram.listgen(intArray28);
        List list36 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list36, (-1));
        int[] intArray40 = new int[] { (short) -1 };
        List list41 = AppendPairProgram.listgen(intArray40);
        appendPairProgram0.TestStudentSubmission(list41, (int) (byte) 100);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1]");
        org.junit.Assert.assertNotNull(list41);
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray15 = new int[] {};
        List list16 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list16, (int) (short) 100);
        java.lang.Class<?> wildcardClass19 = list16.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, (int) '4');
        List list16 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list16, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        int[] intArray6 = new int[] { (short) -1, '#', '4', (short) -1, (short) 100, (byte) -1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        List list25 = AppendPairProgram.listgen(intArray6);
        List list26 = AppendPairProgram.listgen(intArray6);
        List list27 = AppendPairProgram.listgen(intArray6);
        List list28 = AppendPairProgram.listgen(intArray6);
        List list29 = AppendPairProgram.listgen(intArray6);
        List list30 = AppendPairProgram.listgen(intArray6);
        List list31 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass32 = list31.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 35, 52, -1, 100, -1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        List list12 = AppendPairProgram.listgen(intArray9);
        List list13 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        List list27 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list27, 100);
        int[] intArray30 = new int[] {};
        List list31 = AppendPairProgram.listgen(intArray30);
        List list32 = AppendPairProgram.listgen(intArray30);
        List list33 = AppendPairProgram.listgen(intArray30);
        List list34 = AppendPairProgram.listgen(intArray30);
        List list35 = AppendPairProgram.listgen(intArray30);
        List list36 = AppendPairProgram.listgen(intArray30);
        List list37 = AppendPairProgram.listgen(intArray30);
        List list38 = AppendPairProgram.listgen(intArray30);
        List list39 = AppendPairProgram.listgen(intArray30);
        List list40 = AppendPairProgram.listgen(intArray30);
        List list41 = AppendPairProgram.listgen(intArray30);
        List list42 = AppendPairProgram.listgen(intArray30);
        List list43 = AppendPairProgram.listgen(intArray30);
        List list44 = AppendPairProgram.listgen(intArray30);
        List list45 = AppendPairProgram.listgen(intArray30);
        List list46 = AppendPairProgram.listgen(intArray30);
        List list47 = AppendPairProgram.listgen(intArray30);
        appendPairProgram0.TestStudentSubmission(list47, (int) (byte) 1);
        int[] intArray51 = new int[] { (byte) 10 };
        List list52 = AppendPairProgram.listgen(intArray51);
        List list53 = AppendPairProgram.listgen(intArray51);
        List list54 = AppendPairProgram.listgen(intArray51);
        List list55 = AppendPairProgram.listgen(intArray51);
        List list56 = AppendPairProgram.listgen(intArray51);
        List list57 = AppendPairProgram.listgen(intArray51);
        List list58 = AppendPairProgram.listgen(intArray51);
        List list59 = AppendPairProgram.listgen(intArray51);
        List list60 = AppendPairProgram.listgen(intArray51);
        appendPairProgram0.TestStudentSubmission(list60, (int) (short) 10);
        int[] intArray63 = new int[] {};
        List list64 = AppendPairProgram.listgen(intArray63);
        List list65 = AppendPairProgram.listgen(intArray63);
        List list66 = AppendPairProgram.listgen(intArray63);
        List list67 = AppendPairProgram.listgen(intArray63);
        appendPairProgram0.TestStudentSubmission(list67, (int) (short) 0);
        java.lang.Class<?> wildcardClass70 = list67.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]");
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[10]");
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[]");
        org.junit.Assert.assertNotNull(list64);
        org.junit.Assert.assertNotNull(list65);
        org.junit.Assert.assertNotNull(list66);
        org.junit.Assert.assertNotNull(list67);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        int[] intArray3 = new int[] { 1, '#', (byte) 0 };
        List list4 = AppendPairProgram.listgen(intArray3);
        List list5 = AppendPairProgram.listgen(intArray3);
        List list6 = AppendPairProgram.listgen(intArray3);
        List list7 = AppendPairProgram.listgen(intArray3);
        List list8 = AppendPairProgram.listgen(intArray3);
        List list9 = AppendPairProgram.listgen(intArray3);
        java.lang.Class<?> wildcardClass10 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 35, 0]");
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list24, (int) (short) 0);
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list29, 100);
        int[] intArray32 = new int[] {};
        List list33 = AppendPairProgram.listgen(intArray32);
        List list34 = AppendPairProgram.listgen(intArray32);
        List list35 = AppendPairProgram.listgen(intArray32);
        List list36 = AppendPairProgram.listgen(intArray32);
        List list37 = AppendPairProgram.listgen(intArray32);
        List list38 = AppendPairProgram.listgen(intArray32);
        List list39 = AppendPairProgram.listgen(intArray32);
        List list40 = AppendPairProgram.listgen(intArray32);
        appendPairProgram0.TestStudentSubmission(list40, (int) (byte) 100);
        int[] intArray43 = new int[] {};
        List list44 = AppendPairProgram.listgen(intArray43);
        List list45 = AppendPairProgram.listgen(intArray43);
        List list46 = AppendPairProgram.listgen(intArray43);
        List list47 = AppendPairProgram.listgen(intArray43);
        List list48 = AppendPairProgram.listgen(intArray43);
        List list49 = AppendPairProgram.listgen(intArray43);
        List list50 = AppendPairProgram.listgen(intArray43);
        List list51 = AppendPairProgram.listgen(intArray43);
        List list52 = AppendPairProgram.listgen(intArray43);
        List list53 = AppendPairProgram.listgen(intArray43);
        List list54 = AppendPairProgram.listgen(intArray43);
        List list55 = AppendPairProgram.listgen(intArray43);
        List list56 = AppendPairProgram.listgen(intArray43);
        List list57 = AppendPairProgram.listgen(intArray43);
        List list58 = AppendPairProgram.listgen(intArray43);
        List list59 = AppendPairProgram.listgen(intArray43);
        appendPairProgram0.TestStudentSubmission(list59, 0);
        int[] intArray63 = new int[] { 0 };
        List list64 = AppendPairProgram.listgen(intArray63);
        List list65 = AppendPairProgram.listgen(intArray63);
        List list66 = AppendPairProgram.listgen(intArray63);
        List list67 = AppendPairProgram.listgen(intArray63);
        List list68 = AppendPairProgram.listgen(intArray63);
        appendPairProgram0.TestStudentSubmission(list68, (int) (short) 10);
        int[] intArray72 = new int[] { 0 };
        List list73 = AppendPairProgram.listgen(intArray72);
        List list74 = AppendPairProgram.listgen(intArray72);
        List list75 = AppendPairProgram.listgen(intArray72);
        List list76 = AppendPairProgram.listgen(intArray72);
        List list77 = AppendPairProgram.listgen(intArray72);
        List list78 = AppendPairProgram.listgen(intArray72);
        List list79 = AppendPairProgram.listgen(intArray72);
        appendPairProgram0.TestStudentSubmission(list79, (int) (short) -1);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[]");
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0]");
        org.junit.Assert.assertNotNull(list64);
        org.junit.Assert.assertNotNull(list65);
        org.junit.Assert.assertNotNull(list66);
        org.junit.Assert.assertNotNull(list67);
        org.junit.Assert.assertNotNull(list68);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0]");
        org.junit.Assert.assertNotNull(list73);
        org.junit.Assert.assertNotNull(list74);
        org.junit.Assert.assertNotNull(list75);
        org.junit.Assert.assertNotNull(list76);
        org.junit.Assert.assertNotNull(list77);
        org.junit.Assert.assertNotNull(list78);
        org.junit.Assert.assertNotNull(list79);
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, (int) (byte) 10);
        int[] intArray7 = new int[] { (byte) 10 };
        List list8 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list8, 100);
        int[] intArray12 = new int[] { (byte) 10 };
        List list13 = AppendPairProgram.listgen(intArray12);
        List list14 = AppendPairProgram.listgen(intArray12);
        appendPairProgram0.TestStudentSubmission(list14, (int) (short) 10);
        int[] intArray18 = new int[] { (byte) 10 };
        List list19 = AppendPairProgram.listgen(intArray18);
        List list20 = AppendPairProgram.listgen(intArray18);
        List list21 = AppendPairProgram.listgen(intArray18);
        List list22 = AppendPairProgram.listgen(intArray18);
        List list23 = AppendPairProgram.listgen(intArray18);
        List list24 = AppendPairProgram.listgen(intArray18);
        List list25 = AppendPairProgram.listgen(intArray18);
        List list26 = AppendPairProgram.listgen(intArray18);
        List list27 = AppendPairProgram.listgen(intArray18);
        List list28 = AppendPairProgram.listgen(intArray18);
        List list29 = AppendPairProgram.listgen(intArray18);
        List list30 = AppendPairProgram.listgen(intArray18);
        List list31 = AppendPairProgram.listgen(intArray18);
        List list32 = AppendPairProgram.listgen(intArray18);
        List list33 = AppendPairProgram.listgen(intArray18);
        List list34 = AppendPairProgram.listgen(intArray18);
        List list35 = AppendPairProgram.listgen(intArray18);
        List list36 = AppendPairProgram.listgen(intArray18);
        List list37 = AppendPairProgram.listgen(intArray18);
        List list38 = AppendPairProgram.listgen(intArray18);
        List list39 = AppendPairProgram.listgen(intArray18);
        appendPairProgram0.TestStudentSubmission(list39, (int) (byte) -1);
        java.lang.Class<?> wildcardClass42 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10]");
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[10]");
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        int[] intArray3 = new int[] { 1, '#', (byte) 0 };
        List list4 = AppendPairProgram.listgen(intArray3);
        List list5 = AppendPairProgram.listgen(intArray3);
        List list6 = AppendPairProgram.listgen(intArray3);
        List list7 = AppendPairProgram.listgen(intArray3);
        List list8 = AppendPairProgram.listgen(intArray3);
        List list9 = AppendPairProgram.listgen(intArray3);
        List list10 = AppendPairProgram.listgen(intArray3);
        List list11 = AppendPairProgram.listgen(intArray3);
        List list12 = AppendPairProgram.listgen(intArray3);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 35, 0]");
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        int[] intArray6 = new int[] { (byte) 0, (short) -1, ' ', 'a', (byte) 100, (byte) 10 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass22 = list21.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, -1, 32, 97, 100, 10]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, 1);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list22, (int) (short) 1);
        int[] intArray25 = new int[] {};
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        List list31 = AppendPairProgram.listgen(intArray25);
        List list32 = AppendPairProgram.listgen(intArray25);
        List list33 = AppendPairProgram.listgen(intArray25);
        List list34 = AppendPairProgram.listgen(intArray25);
        List list35 = AppendPairProgram.listgen(intArray25);
        List list36 = AppendPairProgram.listgen(intArray25);
        List list37 = AppendPairProgram.listgen(intArray25);
        List list38 = AppendPairProgram.listgen(intArray25);
        List list39 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list39, (int) '#');
        int[] intArray42 = new int[] {};
        List list43 = AppendPairProgram.listgen(intArray42);
        List list44 = AppendPairProgram.listgen(intArray42);
        List list45 = AppendPairProgram.listgen(intArray42);
        List list46 = AppendPairProgram.listgen(intArray42);
        List list47 = AppendPairProgram.listgen(intArray42);
        List list48 = AppendPairProgram.listgen(intArray42);
        List list49 = AppendPairProgram.listgen(intArray42);
        List list50 = AppendPairProgram.listgen(intArray42);
        List list51 = AppendPairProgram.listgen(intArray42);
        appendPairProgram0.TestStudentSubmission(list51, (int) 'a');
        int[] intArray54 = new int[] {};
        List list55 = AppendPairProgram.listgen(intArray54);
        List list56 = AppendPairProgram.listgen(intArray54);
        List list57 = AppendPairProgram.listgen(intArray54);
        List list58 = AppendPairProgram.listgen(intArray54);
        List list59 = AppendPairProgram.listgen(intArray54);
        List list60 = AppendPairProgram.listgen(intArray54);
        List list61 = AppendPairProgram.listgen(intArray54);
        List list62 = AppendPairProgram.listgen(intArray54);
        List list63 = AppendPairProgram.listgen(intArray54);
        appendPairProgram0.TestStudentSubmission(list63, (int) (byte) -1);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]");
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[]");
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(list61);
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(list63);
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) -1);
        int[] intArray14 = new int[] {};
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 10);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list23, (int) (byte) 0);
        int[] intArray26 = new int[] {};
        List list27 = AppendPairProgram.listgen(intArray26);
        List list28 = AppendPairProgram.listgen(intArray26);
        List list29 = AppendPairProgram.listgen(intArray26);
        List list30 = AppendPairProgram.listgen(intArray26);
        List list31 = AppendPairProgram.listgen(intArray26);
        List list32 = AppendPairProgram.listgen(intArray26);
        appendPairProgram0.TestStudentSubmission(list32, 100);
        int[] intArray36 = new int[] { (byte) 10 };
        List list37 = AppendPairProgram.listgen(intArray36);
        List list38 = AppendPairProgram.listgen(intArray36);
        List list39 = AppendPairProgram.listgen(intArray36);
        List list40 = AppendPairProgram.listgen(intArray36);
        List list41 = AppendPairProgram.listgen(intArray36);
        List list42 = AppendPairProgram.listgen(intArray36);
        List list43 = AppendPairProgram.listgen(intArray36);
        appendPairProgram0.TestStudentSubmission(list43, 100);
        int[] intArray46 = new int[] {};
        List list47 = AppendPairProgram.listgen(intArray46);
        List list48 = AppendPairProgram.listgen(intArray46);
        List list49 = AppendPairProgram.listgen(intArray46);
        List list50 = AppendPairProgram.listgen(intArray46);
        List list51 = AppendPairProgram.listgen(intArray46);
        appendPairProgram0.TestStudentSubmission(list51, 100);
        int[] intArray54 = new int[] {};
        List list55 = AppendPairProgram.listgen(intArray54);
        List list56 = AppendPairProgram.listgen(intArray54);
        List list57 = AppendPairProgram.listgen(intArray54);
        appendPairProgram0.TestStudentSubmission(list57, 100);
        int[] intArray61 = new int[] { (short) -1 };
        List list62 = AppendPairProgram.listgen(intArray61);
        List list63 = AppendPairProgram.listgen(intArray61);
        List list64 = AppendPairProgram.listgen(intArray61);
        List list65 = AppendPairProgram.listgen(intArray61);
        List list66 = AppendPairProgram.listgen(intArray61);
        List list67 = AppendPairProgram.listgen(intArray61);
        appendPairProgram0.TestStudentSubmission(list67, (int) (short) 0);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[10]");
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[]");
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1]");
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(list63);
        org.junit.Assert.assertNotNull(list64);
        org.junit.Assert.assertNotNull(list65);
        org.junit.Assert.assertNotNull(list66);
        org.junit.Assert.assertNotNull(list67);
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        int[] intArray4 = new int[] { 'a', (byte) -1, 100, (byte) 10 };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        List list7 = AppendPairProgram.listgen(intArray4);
        List list8 = AppendPairProgram.listgen(intArray4);
        List list9 = AppendPairProgram.listgen(intArray4);
        List list10 = AppendPairProgram.listgen(intArray4);
        List list11 = AppendPairProgram.listgen(intArray4);
        List list12 = AppendPairProgram.listgen(intArray4);
        List list13 = AppendPairProgram.listgen(intArray4);
        List list14 = AppendPairProgram.listgen(intArray4);
        List list15 = AppendPairProgram.listgen(intArray4);
        List list16 = AppendPairProgram.listgen(intArray4);
        List list17 = AppendPairProgram.listgen(intArray4);
        List list18 = AppendPairProgram.listgen(intArray4);
        List list19 = AppendPairProgram.listgen(intArray4);
        List list20 = AppendPairProgram.listgen(intArray4);
        List list21 = AppendPairProgram.listgen(intArray4);
        List list22 = AppendPairProgram.listgen(intArray4);
        List list23 = AppendPairProgram.listgen(intArray4);
        java.lang.Class<?> wildcardClass24 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[97, -1, 100, 10]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray10 = new int[] { (byte) 10 };
        List list11 = AppendPairProgram.listgen(intArray10);
        List list12 = AppendPairProgram.listgen(intArray10);
        List list13 = AppendPairProgram.listgen(intArray10);
        List list14 = AppendPairProgram.listgen(intArray10);
        List list15 = AppendPairProgram.listgen(intArray10);
        List list16 = AppendPairProgram.listgen(intArray10);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 1);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list23, (int) ' ');
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10]");
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        List list12 = AppendPairProgram.listgen(intArray9);
        List list13 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        List list27 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list27, 100);
        List list30 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list30, 100);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, 1);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list22, (int) (short) 1);
        int[] intArray25 = new int[] {};
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        List list31 = AppendPairProgram.listgen(intArray25);
        List list32 = AppendPairProgram.listgen(intArray25);
        List list33 = AppendPairProgram.listgen(intArray25);
        List list34 = AppendPairProgram.listgen(intArray25);
        List list35 = AppendPairProgram.listgen(intArray25);
        List list36 = AppendPairProgram.listgen(intArray25);
        List list37 = AppendPairProgram.listgen(intArray25);
        List list38 = AppendPairProgram.listgen(intArray25);
        List list39 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list39, (int) '#');
        int[] intArray42 = new int[] {};
        List list43 = AppendPairProgram.listgen(intArray42);
        List list44 = AppendPairProgram.listgen(intArray42);
        List list45 = AppendPairProgram.listgen(intArray42);
        appendPairProgram0.TestStudentSubmission(list45, 10);
        int[] intArray48 = new int[] {};
        List list49 = AppendPairProgram.listgen(intArray48);
        List list50 = AppendPairProgram.listgen(intArray48);
        List list51 = AppendPairProgram.listgen(intArray48);
        List list52 = AppendPairProgram.listgen(intArray48);
        List list53 = AppendPairProgram.listgen(intArray48);
        List list54 = AppendPairProgram.listgen(intArray48);
        appendPairProgram0.TestStudentSubmission(list54, (int) (short) 1);
        int[] intArray58 = new int[] { (byte) 10 };
        List list59 = AppendPairProgram.listgen(intArray58);
        List list60 = AppendPairProgram.listgen(intArray58);
        List list61 = AppendPairProgram.listgen(intArray58);
        List list62 = AppendPairProgram.listgen(intArray58);
        appendPairProgram0.TestStudentSubmission(list62, 1);
        int[] intArray65 = new int[] {};
        List list66 = AppendPairProgram.listgen(intArray65);
        List list67 = AppendPairProgram.listgen(intArray65);
        List list68 = AppendPairProgram.listgen(intArray65);
        List list69 = AppendPairProgram.listgen(intArray65);
        List list70 = AppendPairProgram.listgen(intArray65);
        List list71 = AppendPairProgram.listgen(intArray65);
        List list72 = AppendPairProgram.listgen(intArray65);
        List list73 = AppendPairProgram.listgen(intArray65);
        List list74 = AppendPairProgram.listgen(intArray65);
        appendPairProgram0.TestStudentSubmission(list74, (int) (short) 0);
        int[] intArray77 = new int[] {};
        List list78 = AppendPairProgram.listgen(intArray77);
        List list79 = AppendPairProgram.listgen(intArray77);
        appendPairProgram0.TestStudentSubmission(list79, 0);
        java.lang.Class<?> wildcardClass82 = list79.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]");
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[]");
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[10]");
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(list61);
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[]");
        org.junit.Assert.assertNotNull(list66);
        org.junit.Assert.assertNotNull(list67);
        org.junit.Assert.assertNotNull(list68);
        org.junit.Assert.assertNotNull(list69);
        org.junit.Assert.assertNotNull(list70);
        org.junit.Assert.assertNotNull(list71);
        org.junit.Assert.assertNotNull(list72);
        org.junit.Assert.assertNotNull(list73);
        org.junit.Assert.assertNotNull(list74);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[]");
        org.junit.Assert.assertNotNull(list78);
        org.junit.Assert.assertNotNull(list79);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list11, 0);
        int[] intArray15 = new int[] { (byte) 10 };
        List list16 = AppendPairProgram.listgen(intArray15);
        List list17 = AppendPairProgram.listgen(intArray15);
        List list18 = AppendPairProgram.listgen(intArray15);
        List list19 = AppendPairProgram.listgen(intArray15);
        List list20 = AppendPairProgram.listgen(intArray15);
        List list21 = AppendPairProgram.listgen(intArray15);
        List list22 = AppendPairProgram.listgen(intArray15);
        List list23 = AppendPairProgram.listgen(intArray15);
        List list24 = AppendPairProgram.listgen(intArray15);
        List list25 = AppendPairProgram.listgen(intArray15);
        List list26 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list26, (int) (byte) 100);
        int[] intArray30 = new int[] { (byte) 10 };
        List list31 = AppendPairProgram.listgen(intArray30);
        List list32 = AppendPairProgram.listgen(intArray30);
        List list33 = AppendPairProgram.listgen(intArray30);
        List list34 = AppendPairProgram.listgen(intArray30);
        List list35 = AppendPairProgram.listgen(intArray30);
        List list36 = AppendPairProgram.listgen(intArray30);
        List list37 = AppendPairProgram.listgen(intArray30);
        List list38 = AppendPairProgram.listgen(intArray30);
        List list39 = AppendPairProgram.listgen(intArray30);
        List list40 = AppendPairProgram.listgen(intArray30);
        appendPairProgram0.TestStudentSubmission(list40, 1);
        int[] intArray43 = new int[] {};
        List list44 = AppendPairProgram.listgen(intArray43);
        List list45 = AppendPairProgram.listgen(intArray43);
        List list46 = AppendPairProgram.listgen(intArray43);
        List list47 = AppendPairProgram.listgen(intArray43);
        List list48 = AppendPairProgram.listgen(intArray43);
        List list49 = AppendPairProgram.listgen(intArray43);
        List list50 = AppendPairProgram.listgen(intArray43);
        List list51 = AppendPairProgram.listgen(intArray43);
        List list52 = AppendPairProgram.listgen(intArray43);
        List list53 = AppendPairProgram.listgen(intArray43);
        List list54 = AppendPairProgram.listgen(intArray43);
        List list55 = AppendPairProgram.listgen(intArray43);
        List list56 = AppendPairProgram.listgen(intArray43);
        List list57 = AppendPairProgram.listgen(intArray43);
        appendPairProgram0.TestStudentSubmission(list57, 0);
        int[] intArray61 = new int[] { 0 };
        List list62 = AppendPairProgram.listgen(intArray61);
        List list63 = AppendPairProgram.listgen(intArray61);
        List list64 = AppendPairProgram.listgen(intArray61);
        List list65 = AppendPairProgram.listgen(intArray61);
        List list66 = AppendPairProgram.listgen(intArray61);
        List list67 = AppendPairProgram.listgen(intArray61);
        List list68 = AppendPairProgram.listgen(intArray61);
        List list69 = AppendPairProgram.listgen(intArray61);
        List list70 = AppendPairProgram.listgen(intArray61);
        appendPairProgram0.TestStudentSubmission(list70, (int) (short) 10);
        java.lang.Class<?> wildcardClass73 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[10]");
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0]");
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(list63);
        org.junit.Assert.assertNotNull(list64);
        org.junit.Assert.assertNotNull(list65);
        org.junit.Assert.assertNotNull(list66);
        org.junit.Assert.assertNotNull(list67);
        org.junit.Assert.assertNotNull(list68);
        org.junit.Assert.assertNotNull(list69);
        org.junit.Assert.assertNotNull(list70);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        List list14 = AppendPairProgram.listgen(intArray7);
        List list15 = AppendPairProgram.listgen(intArray7);
        List list16 = AppendPairProgram.listgen(intArray7);
        List list17 = AppendPairProgram.listgen(intArray7);
        List list18 = AppendPairProgram.listgen(intArray7);
        List list19 = AppendPairProgram.listgen(intArray7);
        List list20 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list20, (int) '#');
        int[] intArray24 = new int[] { 0 };
        List list25 = AppendPairProgram.listgen(intArray24);
        appendPairProgram0.TestStudentSubmission(list25, (int) (byte) 0);
        java.lang.Class<?> wildcardClass28 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0]");
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        List list16 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list16, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
    }
}

