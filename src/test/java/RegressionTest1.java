import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest1 {

    public static boolean debug = false;

    @Test
    public void test0501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0501");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list24, (int) (short) 0);
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list29, 100);
        int[] intArray33 = new int[] { (byte) 10 };
        List list34 = AppendPairProgram.listgen(intArray33);
        appendPairProgram0.TestStudentSubmission(list34, (-1));
        int[] intArray38 = new int[] { (byte) 10 };
        List list39 = AppendPairProgram.listgen(intArray38);
        List list40 = AppendPairProgram.listgen(intArray38);
        List list41 = AppendPairProgram.listgen(intArray38);
        List list42 = AppendPairProgram.listgen(intArray38);
        List list43 = AppendPairProgram.listgen(intArray38);
        List list44 = AppendPairProgram.listgen(intArray38);
        List list45 = AppendPairProgram.listgen(intArray38);
        List list46 = AppendPairProgram.listgen(intArray38);
        List list47 = AppendPairProgram.listgen(intArray38);
        List list48 = AppendPairProgram.listgen(intArray38);
        appendPairProgram0.TestStudentSubmission(list48, (int) (short) 10);
        int[] intArray51 = new int[] {};
        List list52 = AppendPairProgram.listgen(intArray51);
        List list53 = AppendPairProgram.listgen(intArray51);
        List list54 = AppendPairProgram.listgen(intArray51);
        appendPairProgram0.TestStudentSubmission(list54, (int) (byte) 1);
        java.lang.Class<?> wildcardClass57 = list54.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10]");
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[10]");
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[]");
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0502");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 10);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        List list14 = AppendPairProgram.listgen(intArray11);
        List list15 = AppendPairProgram.listgen(intArray11);
        List list16 = AppendPairProgram.listgen(intArray11);
        List list17 = AppendPairProgram.listgen(intArray11);
        List list18 = AppendPairProgram.listgen(intArray11);
        List list19 = AppendPairProgram.listgen(intArray11);
        List list20 = AppendPairProgram.listgen(intArray11);
        List list21 = AppendPairProgram.listgen(intArray11);
        List list22 = AppendPairProgram.listgen(intArray11);
        List list23 = AppendPairProgram.listgen(intArray11);
        List list24 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list24, (int) (byte) 0);
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        List list30 = AppendPairProgram.listgen(intArray28);
        List list31 = AppendPairProgram.listgen(intArray28);
        List list32 = AppendPairProgram.listgen(intArray28);
        List list33 = AppendPairProgram.listgen(intArray28);
        List list34 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list34, 1);
        int[] intArray38 = new int[] { (byte) 10 };
        List list39 = AppendPairProgram.listgen(intArray38);
        List list40 = AppendPairProgram.listgen(intArray38);
        List list41 = AppendPairProgram.listgen(intArray38);
        List list42 = AppendPairProgram.listgen(intArray38);
        List list43 = AppendPairProgram.listgen(intArray38);
        List list44 = AppendPairProgram.listgen(intArray38);
        List list45 = AppendPairProgram.listgen(intArray38);
        List list46 = AppendPairProgram.listgen(intArray38);
        List list47 = AppendPairProgram.listgen(intArray38);
        appendPairProgram0.TestStudentSubmission(list47, (int) (byte) 100);
        java.lang.Class<?> wildcardClass50 = list47.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[10]");
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0503");
        int[] intArray2 = new int[] { 10, (byte) 0 };
        List list3 = AppendPairProgram.listgen(intArray2);
        List list4 = AppendPairProgram.listgen(intArray2);
        List list5 = AppendPairProgram.listgen(intArray2);
        List list6 = AppendPairProgram.listgen(intArray2);
        List list7 = AppendPairProgram.listgen(intArray2);
        List list8 = AppendPairProgram.listgen(intArray2);
        List list9 = AppendPairProgram.listgen(intArray2);
        List list10 = AppendPairProgram.listgen(intArray2);
        java.lang.Class<?> wildcardClass11 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[10, 0]");
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0504");
        int[] intArray6 = new int[] { 0, (short) 10, (short) -1, '#', (byte) 100, 1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass20 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 10, -1, 35, 100, 1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0505");
        int[] intArray6 = new int[] { (short) -1, '#', '4', (short) -1, (short) 100, (byte) -1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass22 = list21.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 35, 52, -1, 100, -1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0506");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, 1);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list22, (int) (short) 1);
        int[] intArray25 = new int[] {};
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        List list31 = AppendPairProgram.listgen(intArray25);
        List list32 = AppendPairProgram.listgen(intArray25);
        List list33 = AppendPairProgram.listgen(intArray25);
        List list34 = AppendPairProgram.listgen(intArray25);
        List list35 = AppendPairProgram.listgen(intArray25);
        List list36 = AppendPairProgram.listgen(intArray25);
        List list37 = AppendPairProgram.listgen(intArray25);
        List list38 = AppendPairProgram.listgen(intArray25);
        List list39 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list39, (int) '#');
        int[] intArray42 = new int[] {};
        List list43 = AppendPairProgram.listgen(intArray42);
        List list44 = AppendPairProgram.listgen(intArray42);
        List list45 = AppendPairProgram.listgen(intArray42);
        appendPairProgram0.TestStudentSubmission(list45, 10);
        int[] intArray49 = new int[] { (byte) 10 };
        List list50 = AppendPairProgram.listgen(intArray49);
        List list51 = AppendPairProgram.listgen(intArray49);
        List list52 = AppendPairProgram.listgen(intArray49);
        List list53 = AppendPairProgram.listgen(intArray49);
        List list54 = AppendPairProgram.listgen(intArray49);
        List list55 = AppendPairProgram.listgen(intArray49);
        List list56 = AppendPairProgram.listgen(intArray49);
        List list57 = AppendPairProgram.listgen(intArray49);
        List list58 = AppendPairProgram.listgen(intArray49);
        appendPairProgram0.TestStudentSubmission(list58, (int) (byte) 0);
        java.lang.Class<?> wildcardClass61 = list58.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]");
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[10]");
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0507");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list24, (int) (short) 0);
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list29, 100);
        int[] intArray33 = new int[] { (byte) 10 };
        List list34 = AppendPairProgram.listgen(intArray33);
        List list35 = AppendPairProgram.listgen(intArray33);
        appendPairProgram0.TestStudentSubmission(list35, 100);
        java.lang.Class<?> wildcardClass38 = list35.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10]");
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0508");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list24, (int) (short) 0);
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list29, 100);
        int[] intArray32 = new int[] {};
        List list33 = AppendPairProgram.listgen(intArray32);
        List list34 = AppendPairProgram.listgen(intArray32);
        List list35 = AppendPairProgram.listgen(intArray32);
        List list36 = AppendPairProgram.listgen(intArray32);
        List list37 = AppendPairProgram.listgen(intArray32);
        List list38 = AppendPairProgram.listgen(intArray32);
        List list39 = AppendPairProgram.listgen(intArray32);
        List list40 = AppendPairProgram.listgen(intArray32);
        appendPairProgram0.TestStudentSubmission(list40, (int) (byte) 100);
        int[] intArray43 = new int[] {};
        List list44 = AppendPairProgram.listgen(intArray43);
        List list45 = AppendPairProgram.listgen(intArray43);
        List list46 = AppendPairProgram.listgen(intArray43);
        List list47 = AppendPairProgram.listgen(intArray43);
        List list48 = AppendPairProgram.listgen(intArray43);
        List list49 = AppendPairProgram.listgen(intArray43);
        List list50 = AppendPairProgram.listgen(intArray43);
        List list51 = AppendPairProgram.listgen(intArray43);
        List list52 = AppendPairProgram.listgen(intArray43);
        List list53 = AppendPairProgram.listgen(intArray43);
        List list54 = AppendPairProgram.listgen(intArray43);
        List list55 = AppendPairProgram.listgen(intArray43);
        List list56 = AppendPairProgram.listgen(intArray43);
        List list57 = AppendPairProgram.listgen(intArray43);
        List list58 = AppendPairProgram.listgen(intArray43);
        List list59 = AppendPairProgram.listgen(intArray43);
        appendPairProgram0.TestStudentSubmission(list59, 0);
        int[] intArray63 = new int[] { (byte) 10 };
        List list64 = AppendPairProgram.listgen(intArray63);
        List list65 = AppendPairProgram.listgen(intArray63);
        List list66 = AppendPairProgram.listgen(intArray63);
        List list67 = AppendPairProgram.listgen(intArray63);
        List list68 = AppendPairProgram.listgen(intArray63);
        List list69 = AppendPairProgram.listgen(intArray63);
        List list70 = AppendPairProgram.listgen(intArray63);
        List list71 = AppendPairProgram.listgen(intArray63);
        List list72 = AppendPairProgram.listgen(intArray63);
        List list73 = AppendPairProgram.listgen(intArray63);
        List list74 = AppendPairProgram.listgen(intArray63);
        List list75 = AppendPairProgram.listgen(intArray63);
        appendPairProgram0.TestStudentSubmission(list75, 10);
        java.lang.Class<?> wildcardClass78 = list75.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[]");
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[10]");
        org.junit.Assert.assertNotNull(list64);
        org.junit.Assert.assertNotNull(list65);
        org.junit.Assert.assertNotNull(list66);
        org.junit.Assert.assertNotNull(list67);
        org.junit.Assert.assertNotNull(list68);
        org.junit.Assert.assertNotNull(list69);
        org.junit.Assert.assertNotNull(list70);
        org.junit.Assert.assertNotNull(list71);
        org.junit.Assert.assertNotNull(list72);
        org.junit.Assert.assertNotNull(list73);
        org.junit.Assert.assertNotNull(list74);
        org.junit.Assert.assertNotNull(list75);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0509");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) -1);
        int[] intArray14 = new int[] {};
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 10);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list23, (int) (byte) 0);
        int[] intArray26 = new int[] {};
        List list27 = AppendPairProgram.listgen(intArray26);
        List list28 = AppendPairProgram.listgen(intArray26);
        List list29 = AppendPairProgram.listgen(intArray26);
        List list30 = AppendPairProgram.listgen(intArray26);
        List list31 = AppendPairProgram.listgen(intArray26);
        List list32 = AppendPairProgram.listgen(intArray26);
        appendPairProgram0.TestStudentSubmission(list32, 100);
        int[] intArray36 = new int[] { (byte) 10 };
        List list37 = AppendPairProgram.listgen(intArray36);
        List list38 = AppendPairProgram.listgen(intArray36);
        List list39 = AppendPairProgram.listgen(intArray36);
        List list40 = AppendPairProgram.listgen(intArray36);
        List list41 = AppendPairProgram.listgen(intArray36);
        List list42 = AppendPairProgram.listgen(intArray36);
        List list43 = AppendPairProgram.listgen(intArray36);
        appendPairProgram0.TestStudentSubmission(list43, 100);
        int[] intArray46 = new int[] {};
        List list47 = AppendPairProgram.listgen(intArray46);
        List list48 = AppendPairProgram.listgen(intArray46);
        List list49 = AppendPairProgram.listgen(intArray46);
        List list50 = AppendPairProgram.listgen(intArray46);
        List list51 = AppendPairProgram.listgen(intArray46);
        appendPairProgram0.TestStudentSubmission(list51, 100);
        java.lang.Class<?> wildcardClass54 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[10]");
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0510");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray16 = new int[] { (byte) 10 };
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list18, (int) (byte) -1);
        int[] intArray21 = new int[] {};
        List list22 = AppendPairProgram.listgen(intArray21);
        List list23 = AppendPairProgram.listgen(intArray21);
        List list24 = AppendPairProgram.listgen(intArray21);
        List list25 = AppendPairProgram.listgen(intArray21);
        List list26 = AppendPairProgram.listgen(intArray21);
        List list27 = AppendPairProgram.listgen(intArray21);
        List list28 = AppendPairProgram.listgen(intArray21);
        List list29 = AppendPairProgram.listgen(intArray21);
        List list30 = AppendPairProgram.listgen(intArray21);
        appendPairProgram0.TestStudentSubmission(list30, (int) (short) -1);
        int[] intArray33 = new int[] {};
        List list34 = AppendPairProgram.listgen(intArray33);
        List list35 = AppendPairProgram.listgen(intArray33);
        List list36 = AppendPairProgram.listgen(intArray33);
        List list37 = AppendPairProgram.listgen(intArray33);
        appendPairProgram0.TestStudentSubmission(list37, 100);
        java.lang.Class<?> wildcardClass40 = list37.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]");
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0511");
        int[] intArray4 = new int[] { (byte) 100, 'a', (byte) 0, 'a' };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        List list7 = AppendPairProgram.listgen(intArray4);
        List list8 = AppendPairProgram.listgen(intArray4);
        java.lang.Class<?> wildcardClass9 = list8.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, 97, 0, 97]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0512");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list24, (int) (short) 0);
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list29, 100);
        int[] intArray33 = new int[] { (byte) 10 };
        List list34 = AppendPairProgram.listgen(intArray33);
        List list35 = AppendPairProgram.listgen(intArray33);
        appendPairProgram0.TestStudentSubmission(list35, 100);
        List list38 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list38, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10]");
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
    }

    @Test
    public void test0513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0513");
        int[] intArray4 = new int[] { 'a', (byte) -1, 100, (byte) 10 };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        List list7 = AppendPairProgram.listgen(intArray4);
        List list8 = AppendPairProgram.listgen(intArray4);
        List list9 = AppendPairProgram.listgen(intArray4);
        List list10 = AppendPairProgram.listgen(intArray4);
        List list11 = AppendPairProgram.listgen(intArray4);
        List list12 = AppendPairProgram.listgen(intArray4);
        List list13 = AppendPairProgram.listgen(intArray4);
        List list14 = AppendPairProgram.listgen(intArray4);
        List list15 = AppendPairProgram.listgen(intArray4);
        List list16 = AppendPairProgram.listgen(intArray4);
        List list17 = AppendPairProgram.listgen(intArray4);
        java.lang.Class<?> wildcardClass18 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[97, -1, 100, 10]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0514");
        int[] intArray4 = new int[] { (-1), (byte) 100, (byte) 1, (byte) 1 };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        List list7 = AppendPairProgram.listgen(intArray4);
        List list8 = AppendPairProgram.listgen(intArray4);
        List list9 = AppendPairProgram.listgen(intArray4);
        List list10 = AppendPairProgram.listgen(intArray4);
        List list11 = AppendPairProgram.listgen(intArray4);
        java.lang.Class<?> wildcardClass12 = list11.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 100, 1, 1]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0515");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, 1);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list22, (int) (short) 1);
        int[] intArray25 = new int[] {};
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        List list31 = AppendPairProgram.listgen(intArray25);
        List list32 = AppendPairProgram.listgen(intArray25);
        List list33 = AppendPairProgram.listgen(intArray25);
        List list34 = AppendPairProgram.listgen(intArray25);
        List list35 = AppendPairProgram.listgen(intArray25);
        List list36 = AppendPairProgram.listgen(intArray25);
        List list37 = AppendPairProgram.listgen(intArray25);
        List list38 = AppendPairProgram.listgen(intArray25);
        List list39 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list39, (int) '#');
        int[] intArray42 = new int[] {};
        List list43 = AppendPairProgram.listgen(intArray42);
        List list44 = AppendPairProgram.listgen(intArray42);
        List list45 = AppendPairProgram.listgen(intArray42);
        List list46 = AppendPairProgram.listgen(intArray42);
        List list47 = AppendPairProgram.listgen(intArray42);
        List list48 = AppendPairProgram.listgen(intArray42);
        List list49 = AppendPairProgram.listgen(intArray42);
        List list50 = AppendPairProgram.listgen(intArray42);
        List list51 = AppendPairProgram.listgen(intArray42);
        appendPairProgram0.TestStudentSubmission(list51, (int) 'a');
        java.lang.Class<?> wildcardClass54 = list51.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]");
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0516");
        int[] intArray4 = new int[] { (byte) 100, 'a', (byte) 0, 'a' };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        List list7 = AppendPairProgram.listgen(intArray4);
        java.lang.Class<?> wildcardClass8 = list7.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, 97, 0, 97]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0517");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list9, (int) (short) 0);
        int[] intArray12 = new int[] {};
        List list13 = AppendPairProgram.listgen(intArray12);
        List list14 = AppendPairProgram.listgen(intArray12);
        List list15 = AppendPairProgram.listgen(intArray12);
        List list16 = AppendPairProgram.listgen(intArray12);
        List list17 = AppendPairProgram.listgen(intArray12);
        List list18 = AppendPairProgram.listgen(intArray12);
        List list19 = AppendPairProgram.listgen(intArray12);
        List list20 = AppendPairProgram.listgen(intArray12);
        List list21 = AppendPairProgram.listgen(intArray12);
        List list22 = AppendPairProgram.listgen(intArray12);
        List list23 = AppendPairProgram.listgen(intArray12);
        List list24 = AppendPairProgram.listgen(intArray12);
        appendPairProgram0.TestStudentSubmission(list24, (int) '#');
        java.lang.Class<?> wildcardClass27 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0518");
        int[] intArray2 = new int[] { 10, (byte) 0 };
        List list3 = AppendPairProgram.listgen(intArray2);
        List list4 = AppendPairProgram.listgen(intArray2);
        List list5 = AppendPairProgram.listgen(intArray2);
        List list6 = AppendPairProgram.listgen(intArray2);
        List list7 = AppendPairProgram.listgen(intArray2);
        List list8 = AppendPairProgram.listgen(intArray2);
        List list9 = AppendPairProgram.listgen(intArray2);
        java.lang.Class<?> wildcardClass10 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[10, 0]");
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0519");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray15 = new int[] {};
        List list16 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 100);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        List list24 = AppendPairProgram.listgen(intArray19);
        List list25 = AppendPairProgram.listgen(intArray19);
        List list26 = AppendPairProgram.listgen(intArray19);
        List list27 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list27, (int) (short) -1);
        int[] intArray31 = new int[] { (byte) 10 };
        List list32 = AppendPairProgram.listgen(intArray31);
        List list33 = AppendPairProgram.listgen(intArray31);
        List list34 = AppendPairProgram.listgen(intArray31);
        List list35 = AppendPairProgram.listgen(intArray31);
        List list36 = AppendPairProgram.listgen(intArray31);
        List list37 = AppendPairProgram.listgen(intArray31);
        List list38 = AppendPairProgram.listgen(intArray31);
        List list39 = AppendPairProgram.listgen(intArray31);
        List list40 = AppendPairProgram.listgen(intArray31);
        appendPairProgram0.TestStudentSubmission(list40, (int) (short) 100);
        List list43 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list43, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10]");
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
    }

    @Test
    public void test0520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0520");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) 0);
        List list14 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list14, 10);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
    }

    @Test
    public void test0521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0521");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray16 = new int[] { (byte) 10 };
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list22, (int) (byte) 0);
        int[] intArray25 = new int[] {};
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list30, 0);
        int[] intArray33 = new int[] {};
        List list34 = AppendPairProgram.listgen(intArray33);
        List list35 = AppendPairProgram.listgen(intArray33);
        List list36 = AppendPairProgram.listgen(intArray33);
        appendPairProgram0.TestStudentSubmission(list36, (int) (byte) 1);
        List list39 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list39, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]");
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
    }

    @Test
    public void test0522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0522");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, 1);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list22, (int) (short) 1);
        int[] intArray25 = new int[] {};
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        List list31 = AppendPairProgram.listgen(intArray25);
        List list32 = AppendPairProgram.listgen(intArray25);
        List list33 = AppendPairProgram.listgen(intArray25);
        List list34 = AppendPairProgram.listgen(intArray25);
        List list35 = AppendPairProgram.listgen(intArray25);
        List list36 = AppendPairProgram.listgen(intArray25);
        List list37 = AppendPairProgram.listgen(intArray25);
        List list38 = AppendPairProgram.listgen(intArray25);
        List list39 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list39, (int) '#');
        int[] intArray42 = new int[] {};
        List list43 = AppendPairProgram.listgen(intArray42);
        List list44 = AppendPairProgram.listgen(intArray42);
        List list45 = AppendPairProgram.listgen(intArray42);
        appendPairProgram0.TestStudentSubmission(list45, 10);
        java.lang.Class<?> wildcardClass48 = list45.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]");
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0523");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray15 = new int[] {};
        List list16 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list16, (int) (short) 100);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list22, 0);
        java.lang.Class<?> wildcardClass25 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0524");
        int[] intArray4 = new int[] { (byte) 100, 'a', (byte) 0, 'a' };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        List list7 = AppendPairProgram.listgen(intArray4);
        List list8 = AppendPairProgram.listgen(intArray4);
        List list9 = AppendPairProgram.listgen(intArray4);
        List list10 = AppendPairProgram.listgen(intArray4);
        java.lang.Class<?> wildcardClass11 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, 97, 0, 97]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0525");
        int[] intArray1 = new int[] { (byte) 10 };
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        List list7 = AppendPairProgram.listgen(intArray1);
        List list8 = AppendPairProgram.listgen(intArray1);
        List list9 = AppendPairProgram.listgen(intArray1);
        List list10 = AppendPairProgram.listgen(intArray1);
        List list11 = AppendPairProgram.listgen(intArray1);
        List list12 = AppendPairProgram.listgen(intArray1);
        List list13 = AppendPairProgram.listgen(intArray1);
        List list14 = AppendPairProgram.listgen(intArray1);
        List list15 = AppendPairProgram.listgen(intArray1);
        List list16 = AppendPairProgram.listgen(intArray1);
        java.lang.Class<?> wildcardClass17 = list16.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[10]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0526");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, 1);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list22, (int) (short) 1);
        int[] intArray25 = new int[] {};
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        List list31 = AppendPairProgram.listgen(intArray25);
        List list32 = AppendPairProgram.listgen(intArray25);
        List list33 = AppendPairProgram.listgen(intArray25);
        List list34 = AppendPairProgram.listgen(intArray25);
        List list35 = AppendPairProgram.listgen(intArray25);
        List list36 = AppendPairProgram.listgen(intArray25);
        List list37 = AppendPairProgram.listgen(intArray25);
        List list38 = AppendPairProgram.listgen(intArray25);
        List list39 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list39, (int) '#');
        int[] intArray42 = new int[] {};
        List list43 = AppendPairProgram.listgen(intArray42);
        List list44 = AppendPairProgram.listgen(intArray42);
        List list45 = AppendPairProgram.listgen(intArray42);
        List list46 = AppendPairProgram.listgen(intArray42);
        List list47 = AppendPairProgram.listgen(intArray42);
        List list48 = AppendPairProgram.listgen(intArray42);
        List list49 = AppendPairProgram.listgen(intArray42);
        List list50 = AppendPairProgram.listgen(intArray42);
        List list51 = AppendPairProgram.listgen(intArray42);
        appendPairProgram0.TestStudentSubmission(list51, (int) 'a');
        int[] intArray55 = new int[] { (byte) 10 };
        List list56 = AppendPairProgram.listgen(intArray55);
        List list57 = AppendPairProgram.listgen(intArray55);
        List list58 = AppendPairProgram.listgen(intArray55);
        appendPairProgram0.TestStudentSubmission(list58, (int) '4');
        java.lang.Class<?> wildcardClass61 = list58.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]");
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[10]");
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0527");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        List list7 = AppendPairProgram.listgen(intArray1);
        List list8 = AppendPairProgram.listgen(intArray1);
        List list9 = AppendPairProgram.listgen(intArray1);
        List list10 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list10, (int) (byte) 10);
        java.lang.Class<?> wildcardClass13 = list10.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0528");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list24, (int) (short) 0);
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list29, 100);
        int[] intArray32 = new int[] {};
        List list33 = AppendPairProgram.listgen(intArray32);
        List list34 = AppendPairProgram.listgen(intArray32);
        List list35 = AppendPairProgram.listgen(intArray32);
        List list36 = AppendPairProgram.listgen(intArray32);
        List list37 = AppendPairProgram.listgen(intArray32);
        List list38 = AppendPairProgram.listgen(intArray32);
        List list39 = AppendPairProgram.listgen(intArray32);
        List list40 = AppendPairProgram.listgen(intArray32);
        appendPairProgram0.TestStudentSubmission(list40, (int) (byte) 100);
        int[] intArray43 = new int[] {};
        List list44 = AppendPairProgram.listgen(intArray43);
        List list45 = AppendPairProgram.listgen(intArray43);
        List list46 = AppendPairProgram.listgen(intArray43);
        List list47 = AppendPairProgram.listgen(intArray43);
        List list48 = AppendPairProgram.listgen(intArray43);
        List list49 = AppendPairProgram.listgen(intArray43);
        List list50 = AppendPairProgram.listgen(intArray43);
        List list51 = AppendPairProgram.listgen(intArray43);
        List list52 = AppendPairProgram.listgen(intArray43);
        List list53 = AppendPairProgram.listgen(intArray43);
        List list54 = AppendPairProgram.listgen(intArray43);
        List list55 = AppendPairProgram.listgen(intArray43);
        List list56 = AppendPairProgram.listgen(intArray43);
        List list57 = AppendPairProgram.listgen(intArray43);
        List list58 = AppendPairProgram.listgen(intArray43);
        List list59 = AppendPairProgram.listgen(intArray43);
        appendPairProgram0.TestStudentSubmission(list59, 0);
        int[] intArray62 = new int[] {};
        List list63 = AppendPairProgram.listgen(intArray62);
        List list64 = AppendPairProgram.listgen(intArray62);
        List list65 = AppendPairProgram.listgen(intArray62);
        List list66 = AppendPairProgram.listgen(intArray62);
        List list67 = AppendPairProgram.listgen(intArray62);
        List list68 = AppendPairProgram.listgen(intArray62);
        List list69 = AppendPairProgram.listgen(intArray62);
        List list70 = AppendPairProgram.listgen(intArray62);
        List list71 = AppendPairProgram.listgen(intArray62);
        List list72 = AppendPairProgram.listgen(intArray62);
        List list73 = AppendPairProgram.listgen(intArray62);
        List list74 = AppendPairProgram.listgen(intArray62);
        List list75 = AppendPairProgram.listgen(intArray62);
        appendPairProgram0.TestStudentSubmission(list75, (int) (short) 0);
        java.lang.Class<?> wildcardClass78 = list75.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[]");
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[]");
        org.junit.Assert.assertNotNull(list63);
        org.junit.Assert.assertNotNull(list64);
        org.junit.Assert.assertNotNull(list65);
        org.junit.Assert.assertNotNull(list66);
        org.junit.Assert.assertNotNull(list67);
        org.junit.Assert.assertNotNull(list68);
        org.junit.Assert.assertNotNull(list69);
        org.junit.Assert.assertNotNull(list70);
        org.junit.Assert.assertNotNull(list71);
        org.junit.Assert.assertNotNull(list72);
        org.junit.Assert.assertNotNull(list73);
        org.junit.Assert.assertNotNull(list74);
        org.junit.Assert.assertNotNull(list75);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0529");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, (int) (byte) 10);
        int[] intArray7 = new int[] { (byte) 10 };
        List list8 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list8, 100);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        List list14 = AppendPairProgram.listgen(intArray11);
        List list15 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list15, (int) (short) 100);
        java.lang.Class<?> wildcardClass18 = list15.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0530");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, 1);
        int[] intArray17 = new int[] { (byte) 10 };
        List list18 = AppendPairProgram.listgen(intArray17);
        List list19 = AppendPairProgram.listgen(intArray17);
        List list20 = AppendPairProgram.listgen(intArray17);
        List list21 = AppendPairProgram.listgen(intArray17);
        List list22 = AppendPairProgram.listgen(intArray17);
        List list23 = AppendPairProgram.listgen(intArray17);
        List list24 = AppendPairProgram.listgen(intArray17);
        List list25 = AppendPairProgram.listgen(intArray17);
        appendPairProgram0.TestStudentSubmission(list25, (int) (short) 0);
        int[] intArray29 = new int[] { (byte) 10 };
        List list30 = AppendPairProgram.listgen(intArray29);
        List list31 = AppendPairProgram.listgen(intArray29);
        appendPairProgram0.TestStudentSubmission(list31, (-1));
        int[] intArray35 = new int[] { (byte) 10 };
        List list36 = AppendPairProgram.listgen(intArray35);
        List list37 = AppendPairProgram.listgen(intArray35);
        List list38 = AppendPairProgram.listgen(intArray35);
        List list39 = AppendPairProgram.listgen(intArray35);
        List list40 = AppendPairProgram.listgen(intArray35);
        List list41 = AppendPairProgram.listgen(intArray35);
        List list42 = AppendPairProgram.listgen(intArray35);
        List list43 = AppendPairProgram.listgen(intArray35);
        appendPairProgram0.TestStudentSubmission(list43, (int) (short) -1);
        java.lang.Class<?> wildcardClass46 = list43.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10]");
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10]");
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[10]");
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0531");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list24, (int) (short) 0);
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list29, 100);
        int[] intArray33 = new int[] { (byte) 10 };
        List list34 = AppendPairProgram.listgen(intArray33);
        appendPairProgram0.TestStudentSubmission(list34, (-1));
        int[] intArray37 = new int[] {};
        List list38 = AppendPairProgram.listgen(intArray37);
        List list39 = AppendPairProgram.listgen(intArray37);
        List list40 = AppendPairProgram.listgen(intArray37);
        List list41 = AppendPairProgram.listgen(intArray37);
        List list42 = AppendPairProgram.listgen(intArray37);
        List list43 = AppendPairProgram.listgen(intArray37);
        List list44 = AppendPairProgram.listgen(intArray37);
        List list45 = AppendPairProgram.listgen(intArray37);
        List list46 = AppendPairProgram.listgen(intArray37);
        List list47 = AppendPairProgram.listgen(intArray37);
        List list48 = AppendPairProgram.listgen(intArray37);
        List list49 = AppendPairProgram.listgen(intArray37);
        List list50 = AppendPairProgram.listgen(intArray37);
        List list51 = AppendPairProgram.listgen(intArray37);
        appendPairProgram0.TestStudentSubmission(list51, (int) (short) 100);
        java.lang.Class<?> wildcardClass54 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10]");
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[]");
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0532");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list24, (int) (short) 0);
        int[] intArray28 = new int[] { 0 };
        List list29 = AppendPairProgram.listgen(intArray28);
        List list30 = AppendPairProgram.listgen(intArray28);
        List list31 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list31, (int) ' ');
        java.lang.Class<?> wildcardClass34 = list31.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0533");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, 1);
        int[] intArray17 = new int[] { (byte) 10 };
        List list18 = AppendPairProgram.listgen(intArray17);
        List list19 = AppendPairProgram.listgen(intArray17);
        List list20 = AppendPairProgram.listgen(intArray17);
        List list21 = AppendPairProgram.listgen(intArray17);
        List list22 = AppendPairProgram.listgen(intArray17);
        List list23 = AppendPairProgram.listgen(intArray17);
        List list24 = AppendPairProgram.listgen(intArray17);
        List list25 = AppendPairProgram.listgen(intArray17);
        appendPairProgram0.TestStudentSubmission(list25, (int) (short) 0);
        java.lang.Class<?> wildcardClass28 = list25.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10]");
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0534");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, 1);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list22, (int) (short) 1);
        int[] intArray25 = new int[] {};
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        List list31 = AppendPairProgram.listgen(intArray25);
        List list32 = AppendPairProgram.listgen(intArray25);
        List list33 = AppendPairProgram.listgen(intArray25);
        List list34 = AppendPairProgram.listgen(intArray25);
        List list35 = AppendPairProgram.listgen(intArray25);
        List list36 = AppendPairProgram.listgen(intArray25);
        List list37 = AppendPairProgram.listgen(intArray25);
        List list38 = AppendPairProgram.listgen(intArray25);
        List list39 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list39, (int) '#');
        int[] intArray42 = new int[] {};
        List list43 = AppendPairProgram.listgen(intArray42);
        List list44 = AppendPairProgram.listgen(intArray42);
        List list45 = AppendPairProgram.listgen(intArray42);
        List list46 = AppendPairProgram.listgen(intArray42);
        List list47 = AppendPairProgram.listgen(intArray42);
        List list48 = AppendPairProgram.listgen(intArray42);
        List list49 = AppendPairProgram.listgen(intArray42);
        List list50 = AppendPairProgram.listgen(intArray42);
        List list51 = AppendPairProgram.listgen(intArray42);
        appendPairProgram0.TestStudentSubmission(list51, (int) 'a');
        int[] intArray55 = new int[] { (byte) 10 };
        List list56 = AppendPairProgram.listgen(intArray55);
        List list57 = AppendPairProgram.listgen(intArray55);
        List list58 = AppendPairProgram.listgen(intArray55);
        appendPairProgram0.TestStudentSubmission(list58, (int) '4');
        int[] intArray62 = new int[] { (byte) 10 };
        List list63 = AppendPairProgram.listgen(intArray62);
        appendPairProgram0.TestStudentSubmission(list63, (int) '#');
        java.lang.Class<?> wildcardClass66 = list63.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]");
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[10]");
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[10]");
        org.junit.Assert.assertNotNull(list63);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test0535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0535");
        int[] intArray4 = new int[] { (byte) 100, 'a', (byte) 0, 'a' };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        List list7 = AppendPairProgram.listgen(intArray4);
        List list8 = AppendPairProgram.listgen(intArray4);
        List list9 = AppendPairProgram.listgen(intArray4);
        List list10 = AppendPairProgram.listgen(intArray4);
        List list11 = AppendPairProgram.listgen(intArray4);
        java.lang.Class<?> wildcardClass12 = list11.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, 97, 0, 97]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0536");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 10);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        List list14 = AppendPairProgram.listgen(intArray11);
        List list15 = AppendPairProgram.listgen(intArray11);
        List list16 = AppendPairProgram.listgen(intArray11);
        List list17 = AppendPairProgram.listgen(intArray11);
        List list18 = AppendPairProgram.listgen(intArray11);
        List list19 = AppendPairProgram.listgen(intArray11);
        List list20 = AppendPairProgram.listgen(intArray11);
        List list21 = AppendPairProgram.listgen(intArray11);
        List list22 = AppendPairProgram.listgen(intArray11);
        List list23 = AppendPairProgram.listgen(intArray11);
        List list24 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list24, (int) (byte) 0);
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        List list30 = AppendPairProgram.listgen(intArray28);
        List list31 = AppendPairProgram.listgen(intArray28);
        List list32 = AppendPairProgram.listgen(intArray28);
        List list33 = AppendPairProgram.listgen(intArray28);
        List list34 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list34, 1);
        int[] intArray38 = new int[] { (byte) 10 };
        List list39 = AppendPairProgram.listgen(intArray38);
        List list40 = AppendPairProgram.listgen(intArray38);
        List list41 = AppendPairProgram.listgen(intArray38);
        List list42 = AppendPairProgram.listgen(intArray38);
        List list43 = AppendPairProgram.listgen(intArray38);
        List list44 = AppendPairProgram.listgen(intArray38);
        List list45 = AppendPairProgram.listgen(intArray38);
        List list46 = AppendPairProgram.listgen(intArray38);
        List list47 = AppendPairProgram.listgen(intArray38);
        appendPairProgram0.TestStudentSubmission(list47, (int) (byte) 100);
        List list50 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list50, (-1));
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[10]");
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
    }

    @Test
    public void test0537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0537");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list11, 0);
        int[] intArray15 = new int[] { (byte) 10 };
        List list16 = AppendPairProgram.listgen(intArray15);
        List list17 = AppendPairProgram.listgen(intArray15);
        List list18 = AppendPairProgram.listgen(intArray15);
        List list19 = AppendPairProgram.listgen(intArray15);
        List list20 = AppendPairProgram.listgen(intArray15);
        List list21 = AppendPairProgram.listgen(intArray15);
        List list22 = AppendPairProgram.listgen(intArray15);
        List list23 = AppendPairProgram.listgen(intArray15);
        List list24 = AppendPairProgram.listgen(intArray15);
        List list25 = AppendPairProgram.listgen(intArray15);
        List list26 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list26, (int) (byte) 100);
        int[] intArray30 = new int[] { (byte) 10 };
        List list31 = AppendPairProgram.listgen(intArray30);
        List list32 = AppendPairProgram.listgen(intArray30);
        List list33 = AppendPairProgram.listgen(intArray30);
        List list34 = AppendPairProgram.listgen(intArray30);
        List list35 = AppendPairProgram.listgen(intArray30);
        List list36 = AppendPairProgram.listgen(intArray30);
        List list37 = AppendPairProgram.listgen(intArray30);
        List list38 = AppendPairProgram.listgen(intArray30);
        List list39 = AppendPairProgram.listgen(intArray30);
        List list40 = AppendPairProgram.listgen(intArray30);
        appendPairProgram0.TestStudentSubmission(list40, 1);
        java.lang.Class<?> wildcardClass43 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[10]");
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0538");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) -1);
        int[] intArray14 = new int[] {};
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 10);
        List list19 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list19, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
    }

    @Test
    public void test0539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0539");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, (int) '4');
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list26, (int) (byte) 1);
        int[] intArray29 = new int[] {};
        List list30 = AppendPairProgram.listgen(intArray29);
        List list31 = AppendPairProgram.listgen(intArray29);
        List list32 = AppendPairProgram.listgen(intArray29);
        List list33 = AppendPairProgram.listgen(intArray29);
        List list34 = AppendPairProgram.listgen(intArray29);
        List list35 = AppendPairProgram.listgen(intArray29);
        List list36 = AppendPairProgram.listgen(intArray29);
        List list37 = AppendPairProgram.listgen(intArray29);
        List list38 = AppendPairProgram.listgen(intArray29);
        List list39 = AppendPairProgram.listgen(intArray29);
        appendPairProgram0.TestStudentSubmission(list39, (-1));
        int[] intArray43 = new int[] { 0 };
        List list44 = AppendPairProgram.listgen(intArray43);
        List list45 = AppendPairProgram.listgen(intArray43);
        List list46 = AppendPairProgram.listgen(intArray43);
        appendPairProgram0.TestStudentSubmission(list46, 0);
        java.lang.Class<?> wildcardClass49 = list46.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[]");
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0]");
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0540");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, 1);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list22, (int) (short) 1);
        int[] intArray25 = new int[] {};
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        List list31 = AppendPairProgram.listgen(intArray25);
        List list32 = AppendPairProgram.listgen(intArray25);
        List list33 = AppendPairProgram.listgen(intArray25);
        List list34 = AppendPairProgram.listgen(intArray25);
        List list35 = AppendPairProgram.listgen(intArray25);
        List list36 = AppendPairProgram.listgen(intArray25);
        List list37 = AppendPairProgram.listgen(intArray25);
        List list38 = AppendPairProgram.listgen(intArray25);
        List list39 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list39, (int) '#');
        int[] intArray42 = new int[] {};
        List list43 = AppendPairProgram.listgen(intArray42);
        List list44 = AppendPairProgram.listgen(intArray42);
        List list45 = AppendPairProgram.listgen(intArray42);
        List list46 = AppendPairProgram.listgen(intArray42);
        List list47 = AppendPairProgram.listgen(intArray42);
        List list48 = AppendPairProgram.listgen(intArray42);
        List list49 = AppendPairProgram.listgen(intArray42);
        List list50 = AppendPairProgram.listgen(intArray42);
        List list51 = AppendPairProgram.listgen(intArray42);
        appendPairProgram0.TestStudentSubmission(list51, (int) 'a');
        int[] intArray55 = new int[] { (byte) 10 };
        List list56 = AppendPairProgram.listgen(intArray55);
        List list57 = AppendPairProgram.listgen(intArray55);
        List list58 = AppendPairProgram.listgen(intArray55);
        appendPairProgram0.TestStudentSubmission(list58, (int) '4');
        int[] intArray62 = new int[] { (byte) 10 };
        List list63 = AppendPairProgram.listgen(intArray62);
        appendPairProgram0.TestStudentSubmission(list63, (int) '#');
        java.lang.Class<?> wildcardClass66 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]");
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[10]");
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[10]");
        org.junit.Assert.assertNotNull(list63);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test0541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0541");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 10);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        List list14 = AppendPairProgram.listgen(intArray11);
        List list15 = AppendPairProgram.listgen(intArray11);
        List list16 = AppendPairProgram.listgen(intArray11);
        List list17 = AppendPairProgram.listgen(intArray11);
        List list18 = AppendPairProgram.listgen(intArray11);
        List list19 = AppendPairProgram.listgen(intArray11);
        List list20 = AppendPairProgram.listgen(intArray11);
        List list21 = AppendPairProgram.listgen(intArray11);
        List list22 = AppendPairProgram.listgen(intArray11);
        List list23 = AppendPairProgram.listgen(intArray11);
        List list24 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list24, (int) (byte) 0);
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        List list30 = AppendPairProgram.listgen(intArray28);
        List list31 = AppendPairProgram.listgen(intArray28);
        List list32 = AppendPairProgram.listgen(intArray28);
        List list33 = AppendPairProgram.listgen(intArray28);
        List list34 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list34, 1);
        java.lang.Class<?> wildcardClass37 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0542");
        int[] intArray3 = new int[] { 0, '#', (short) -1 };
        List list4 = AppendPairProgram.listgen(intArray3);
        List list5 = AppendPairProgram.listgen(intArray3);
        List list6 = AppendPairProgram.listgen(intArray3);
        List list7 = AppendPairProgram.listgen(intArray3);
        List list8 = AppendPairProgram.listgen(intArray3);
        List list9 = AppendPairProgram.listgen(intArray3);
        List list10 = AppendPairProgram.listgen(intArray3);
        List list11 = AppendPairProgram.listgen(intArray3);
        List list12 = AppendPairProgram.listgen(intArray3);
        List list13 = AppendPairProgram.listgen(intArray3);
        List list14 = AppendPairProgram.listgen(intArray3);
        List list15 = AppendPairProgram.listgen(intArray3);
        List list16 = AppendPairProgram.listgen(intArray3);
        List list17 = AppendPairProgram.listgen(intArray3);
        List list18 = AppendPairProgram.listgen(intArray3);
        List list19 = AppendPairProgram.listgen(intArray3);
        List list20 = AppendPairProgram.listgen(intArray3);
        List list21 = AppendPairProgram.listgen(intArray3);
        List list22 = AppendPairProgram.listgen(intArray3);
        java.lang.Class<?> wildcardClass23 = list22.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[0, 35, -1]");
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0543");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, (int) (byte) 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list10, (-1));
        int[] intArray13 = new int[] {};
        List list14 = AppendPairProgram.listgen(intArray13);
        List list15 = AppendPairProgram.listgen(intArray13);
        List list16 = AppendPairProgram.listgen(intArray13);
        List list17 = AppendPairProgram.listgen(intArray13);
        appendPairProgram0.TestStudentSubmission(list17, 0);
        List list20 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list20, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
    }

    @Test
    public void test0544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0544");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        List list7 = AppendPairProgram.listgen(intArray1);
        List list8 = AppendPairProgram.listgen(intArray1);
        List list9 = AppendPairProgram.listgen(intArray1);
        List list10 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list10, (int) (byte) 10);
        int[] intArray14 = new int[] { 0 };
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (short) 0);
        java.lang.Class<?> wildcardClass19 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0545");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray16 = new int[] { (byte) 10 };
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list22, (int) (byte) 0);
        int[] intArray25 = new int[] {};
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list30, 0);
        java.lang.Class<?> wildcardClass33 = list30.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0546");
        int[] intArray4 = new int[] { (byte) 100, 'a', (byte) 0, 'a' };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        List list7 = AppendPairProgram.listgen(intArray4);
        List list8 = AppendPairProgram.listgen(intArray4);
        List list9 = AppendPairProgram.listgen(intArray4);
        List list10 = AppendPairProgram.listgen(intArray4);
        List list11 = AppendPairProgram.listgen(intArray4);
        java.lang.Class<?> wildcardClass12 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, 97, 0, 97]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0547");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, (int) '4');
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list26, (int) (byte) 1);
        int[] intArray29 = new int[] {};
        List list30 = AppendPairProgram.listgen(intArray29);
        List list31 = AppendPairProgram.listgen(intArray29);
        List list32 = AppendPairProgram.listgen(intArray29);
        List list33 = AppendPairProgram.listgen(intArray29);
        List list34 = AppendPairProgram.listgen(intArray29);
        List list35 = AppendPairProgram.listgen(intArray29);
        List list36 = AppendPairProgram.listgen(intArray29);
        List list37 = AppendPairProgram.listgen(intArray29);
        List list38 = AppendPairProgram.listgen(intArray29);
        List list39 = AppendPairProgram.listgen(intArray29);
        appendPairProgram0.TestStudentSubmission(list39, (-1));
        int[] intArray42 = new int[] {};
        List list43 = AppendPairProgram.listgen(intArray42);
        List list44 = AppendPairProgram.listgen(intArray42);
        List list45 = AppendPairProgram.listgen(intArray42);
        List list46 = AppendPairProgram.listgen(intArray42);
        List list47 = AppendPairProgram.listgen(intArray42);
        List list48 = AppendPairProgram.listgen(intArray42);
        List list49 = AppendPairProgram.listgen(intArray42);
        List list50 = AppendPairProgram.listgen(intArray42);
        List list51 = AppendPairProgram.listgen(intArray42);
        appendPairProgram0.TestStudentSubmission(list51, (int) 'a');
        java.lang.Class<?> wildcardClass54 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[]");
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]");
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0548");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray16 = new int[] { (byte) 10 };
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list18, (int) (byte) -1);
        int[] intArray21 = new int[] {};
        List list22 = AppendPairProgram.listgen(intArray21);
        List list23 = AppendPairProgram.listgen(intArray21);
        List list24 = AppendPairProgram.listgen(intArray21);
        List list25 = AppendPairProgram.listgen(intArray21);
        List list26 = AppendPairProgram.listgen(intArray21);
        List list27 = AppendPairProgram.listgen(intArray21);
        List list28 = AppendPairProgram.listgen(intArray21);
        List list29 = AppendPairProgram.listgen(intArray21);
        List list30 = AppendPairProgram.listgen(intArray21);
        List list31 = AppendPairProgram.listgen(intArray21);
        List list32 = AppendPairProgram.listgen(intArray21);
        List list33 = AppendPairProgram.listgen(intArray21);
        List list34 = AppendPairProgram.listgen(intArray21);
        List list35 = AppendPairProgram.listgen(intArray21);
        List list36 = AppendPairProgram.listgen(intArray21);
        appendPairProgram0.TestStudentSubmission(list36, (int) (short) 1);
        int[] intArray39 = new int[] {};
        List list40 = AppendPairProgram.listgen(intArray39);
        List list41 = AppendPairProgram.listgen(intArray39);
        List list42 = AppendPairProgram.listgen(intArray39);
        List list43 = AppendPairProgram.listgen(intArray39);
        appendPairProgram0.TestStudentSubmission(list43, (int) (short) 100);
        java.lang.Class<?> wildcardClass46 = list43.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]");
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0549");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list24, (int) (short) 0);
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list29, 100);
        int[] intArray32 = new int[] {};
        List list33 = AppendPairProgram.listgen(intArray32);
        List list34 = AppendPairProgram.listgen(intArray32);
        List list35 = AppendPairProgram.listgen(intArray32);
        List list36 = AppendPairProgram.listgen(intArray32);
        List list37 = AppendPairProgram.listgen(intArray32);
        List list38 = AppendPairProgram.listgen(intArray32);
        List list39 = AppendPairProgram.listgen(intArray32);
        List list40 = AppendPairProgram.listgen(intArray32);
        appendPairProgram0.TestStudentSubmission(list40, (int) (byte) 100);
        int[] intArray43 = new int[] {};
        List list44 = AppendPairProgram.listgen(intArray43);
        List list45 = AppendPairProgram.listgen(intArray43);
        List list46 = AppendPairProgram.listgen(intArray43);
        List list47 = AppendPairProgram.listgen(intArray43);
        List list48 = AppendPairProgram.listgen(intArray43);
        List list49 = AppendPairProgram.listgen(intArray43);
        List list50 = AppendPairProgram.listgen(intArray43);
        List list51 = AppendPairProgram.listgen(intArray43);
        List list52 = AppendPairProgram.listgen(intArray43);
        List list53 = AppendPairProgram.listgen(intArray43);
        List list54 = AppendPairProgram.listgen(intArray43);
        List list55 = AppendPairProgram.listgen(intArray43);
        List list56 = AppendPairProgram.listgen(intArray43);
        List list57 = AppendPairProgram.listgen(intArray43);
        List list58 = AppendPairProgram.listgen(intArray43);
        List list59 = AppendPairProgram.listgen(intArray43);
        appendPairProgram0.TestStudentSubmission(list59, 0);
        java.lang.Class<?> wildcardClass62 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[]");
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0550");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray16 = new int[] { (byte) 10 };
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list22, (int) (byte) 0);
        java.lang.Class<?> wildcardClass25 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0551");
        int[] intArray3 = new int[] { 0, '#', (short) -1 };
        List list4 = AppendPairProgram.listgen(intArray3);
        List list5 = AppendPairProgram.listgen(intArray3);
        List list6 = AppendPairProgram.listgen(intArray3);
        List list7 = AppendPairProgram.listgen(intArray3);
        List list8 = AppendPairProgram.listgen(intArray3);
        List list9 = AppendPairProgram.listgen(intArray3);
        List list10 = AppendPairProgram.listgen(intArray3);
        List list11 = AppendPairProgram.listgen(intArray3);
        List list12 = AppendPairProgram.listgen(intArray3);
        List list13 = AppendPairProgram.listgen(intArray3);
        List list14 = AppendPairProgram.listgen(intArray3);
        List list15 = AppendPairProgram.listgen(intArray3);
        java.lang.Class<?> wildcardClass16 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[0, 35, -1]");
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0552");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray15 = new int[] {};
        List list16 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 100);
        int[] intArray20 = new int[] { (byte) 10 };
        List list21 = AppendPairProgram.listgen(intArray20);
        appendPairProgram0.TestStudentSubmission(list21, (-1));
        int[] intArray25 = new int[] { (byte) 10 };
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        List list31 = AppendPairProgram.listgen(intArray25);
        List list32 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list32, (int) (short) -1);
        java.lang.Class<?> wildcardClass35 = list32.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10]");
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[10]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0553");
        int[] intArray4 = new int[] { (byte) 100, 'a', (byte) 0, 'a' };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        List list7 = AppendPairProgram.listgen(intArray4);
        List list8 = AppendPairProgram.listgen(intArray4);
        List list9 = AppendPairProgram.listgen(intArray4);
        List list10 = AppendPairProgram.listgen(intArray4);
        List list11 = AppendPairProgram.listgen(intArray4);
        List list12 = AppendPairProgram.listgen(intArray4);
        java.lang.Class<?> wildcardClass13 = list12.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, 97, 0, 97]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0554");
        int[] intArray4 = new int[] { 'a', (byte) -1, 100, (byte) 10 };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        List list7 = AppendPairProgram.listgen(intArray4);
        List list8 = AppendPairProgram.listgen(intArray4);
        List list9 = AppendPairProgram.listgen(intArray4);
        List list10 = AppendPairProgram.listgen(intArray4);
        List list11 = AppendPairProgram.listgen(intArray4);
        List list12 = AppendPairProgram.listgen(intArray4);
        List list13 = AppendPairProgram.listgen(intArray4);
        List list14 = AppendPairProgram.listgen(intArray4);
        List list15 = AppendPairProgram.listgen(intArray4);
        java.lang.Class<?> wildcardClass16 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[97, -1, 100, 10]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0555");
        int[] intArray4 = new int[] { 'a', (byte) -1, 100, (byte) 10 };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        List list7 = AppendPairProgram.listgen(intArray4);
        List list8 = AppendPairProgram.listgen(intArray4);
        List list9 = AppendPairProgram.listgen(intArray4);
        List list10 = AppendPairProgram.listgen(intArray4);
        List list11 = AppendPairProgram.listgen(intArray4);
        List list12 = AppendPairProgram.listgen(intArray4);
        List list13 = AppendPairProgram.listgen(intArray4);
        List list14 = AppendPairProgram.listgen(intArray4);
        java.lang.Class<?> wildcardClass15 = list14.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[97, -1, 100, 10]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0556");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 10);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        List list14 = AppendPairProgram.listgen(intArray11);
        List list15 = AppendPairProgram.listgen(intArray11);
        List list16 = AppendPairProgram.listgen(intArray11);
        List list17 = AppendPairProgram.listgen(intArray11);
        List list18 = AppendPairProgram.listgen(intArray11);
        List list19 = AppendPairProgram.listgen(intArray11);
        List list20 = AppendPairProgram.listgen(intArray11);
        List list21 = AppendPairProgram.listgen(intArray11);
        List list22 = AppendPairProgram.listgen(intArray11);
        List list23 = AppendPairProgram.listgen(intArray11);
        List list24 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list24, (int) (byte) 0);
        int[] intArray27 = new int[] {};
        List list28 = AppendPairProgram.listgen(intArray27);
        appendPairProgram0.TestStudentSubmission(list28, 0);
        java.lang.Class<?> wildcardClass31 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[]");
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0557");
        int[] intArray6 = new int[] { (byte) 0, (short) -1, ' ', 'a', (byte) 100, (byte) 10 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass23 = list22.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, -1, 32, 97, 100, 10]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0558");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray17 = new int[] { (byte) 10 };
        List list18 = AppendPairProgram.listgen(intArray17);
        List list19 = AppendPairProgram.listgen(intArray17);
        List list20 = AppendPairProgram.listgen(intArray17);
        List list21 = AppendPairProgram.listgen(intArray17);
        List list22 = AppendPairProgram.listgen(intArray17);
        List list23 = AppendPairProgram.listgen(intArray17);
        List list24 = AppendPairProgram.listgen(intArray17);
        List list25 = AppendPairProgram.listgen(intArray17);
        appendPairProgram0.TestStudentSubmission(list25, (int) (byte) 100);
        java.lang.Class<?> wildcardClass28 = list25.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10]");
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0559");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list24, (int) (short) 0);
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list29, 100);
        int[] intArray32 = new int[] {};
        List list33 = AppendPairProgram.listgen(intArray32);
        List list34 = AppendPairProgram.listgen(intArray32);
        List list35 = AppendPairProgram.listgen(intArray32);
        List list36 = AppendPairProgram.listgen(intArray32);
        List list37 = AppendPairProgram.listgen(intArray32);
        List list38 = AppendPairProgram.listgen(intArray32);
        List list39 = AppendPairProgram.listgen(intArray32);
        List list40 = AppendPairProgram.listgen(intArray32);
        appendPairProgram0.TestStudentSubmission(list40, (int) (byte) 100);
        int[] intArray43 = new int[] {};
        List list44 = AppendPairProgram.listgen(intArray43);
        List list45 = AppendPairProgram.listgen(intArray43);
        List list46 = AppendPairProgram.listgen(intArray43);
        List list47 = AppendPairProgram.listgen(intArray43);
        List list48 = AppendPairProgram.listgen(intArray43);
        List list49 = AppendPairProgram.listgen(intArray43);
        List list50 = AppendPairProgram.listgen(intArray43);
        List list51 = AppendPairProgram.listgen(intArray43);
        List list52 = AppendPairProgram.listgen(intArray43);
        List list53 = AppendPairProgram.listgen(intArray43);
        List list54 = AppendPairProgram.listgen(intArray43);
        List list55 = AppendPairProgram.listgen(intArray43);
        List list56 = AppendPairProgram.listgen(intArray43);
        List list57 = AppendPairProgram.listgen(intArray43);
        List list58 = AppendPairProgram.listgen(intArray43);
        List list59 = AppendPairProgram.listgen(intArray43);
        appendPairProgram0.TestStudentSubmission(list59, 0);
        int[] intArray63 = new int[] { (byte) 10 };
        List list64 = AppendPairProgram.listgen(intArray63);
        List list65 = AppendPairProgram.listgen(intArray63);
        List list66 = AppendPairProgram.listgen(intArray63);
        List list67 = AppendPairProgram.listgen(intArray63);
        List list68 = AppendPairProgram.listgen(intArray63);
        List list69 = AppendPairProgram.listgen(intArray63);
        List list70 = AppendPairProgram.listgen(intArray63);
        List list71 = AppendPairProgram.listgen(intArray63);
        List list72 = AppendPairProgram.listgen(intArray63);
        List list73 = AppendPairProgram.listgen(intArray63);
        List list74 = AppendPairProgram.listgen(intArray63);
        List list75 = AppendPairProgram.listgen(intArray63);
        appendPairProgram0.TestStudentSubmission(list75, 10);
        java.lang.Class<?> wildcardClass78 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[]");
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[10]");
        org.junit.Assert.assertNotNull(list64);
        org.junit.Assert.assertNotNull(list65);
        org.junit.Assert.assertNotNull(list66);
        org.junit.Assert.assertNotNull(list67);
        org.junit.Assert.assertNotNull(list68);
        org.junit.Assert.assertNotNull(list69);
        org.junit.Assert.assertNotNull(list70);
        org.junit.Assert.assertNotNull(list71);
        org.junit.Assert.assertNotNull(list72);
        org.junit.Assert.assertNotNull(list73);
        org.junit.Assert.assertNotNull(list74);
        org.junit.Assert.assertNotNull(list75);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0560");
        int[] intArray4 = new int[] { (-1), (byte) 100, (byte) 1, (byte) 1 };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        List list7 = AppendPairProgram.listgen(intArray4);
        List list8 = AppendPairProgram.listgen(intArray4);
        List list9 = AppendPairProgram.listgen(intArray4);
        List list10 = AppendPairProgram.listgen(intArray4);
        java.lang.Class<?> wildcardClass11 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 100, 1, 1]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0561");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray7 = new int[] { (byte) 10 };
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list11, (int) (short) 1);
        int[] intArray14 = new int[] {};
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        List list17 = AppendPairProgram.listgen(intArray14);
        List list18 = AppendPairProgram.listgen(intArray14);
        List list19 = AppendPairProgram.listgen(intArray14);
        List list20 = AppendPairProgram.listgen(intArray14);
        List list21 = AppendPairProgram.listgen(intArray14);
        List list22 = AppendPairProgram.listgen(intArray14);
        List list23 = AppendPairProgram.listgen(intArray14);
        List list24 = AppendPairProgram.listgen(intArray14);
        List list25 = AppendPairProgram.listgen(intArray14);
        List list26 = AppendPairProgram.listgen(intArray14);
        List list27 = AppendPairProgram.listgen(intArray14);
        List list28 = AppendPairProgram.listgen(intArray14);
        List list29 = AppendPairProgram.listgen(intArray14);
        List list30 = AppendPairProgram.listgen(intArray14);
        List list31 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list31, (int) '4');
        java.lang.Class<?> wildcardClass34 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0562");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, (int) '4');
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list26, (int) (byte) 1);
        int[] intArray30 = new int[] { 0 };
        List list31 = AppendPairProgram.listgen(intArray30);
        List list32 = AppendPairProgram.listgen(intArray30);
        appendPairProgram0.TestStudentSubmission(list32, (int) 'a');
        int[] intArray35 = new int[] {};
        List list36 = AppendPairProgram.listgen(intArray35);
        List list37 = AppendPairProgram.listgen(intArray35);
        List list38 = AppendPairProgram.listgen(intArray35);
        List list39 = AppendPairProgram.listgen(intArray35);
        List list40 = AppendPairProgram.listgen(intArray35);
        List list41 = AppendPairProgram.listgen(intArray35);
        List list42 = AppendPairProgram.listgen(intArray35);
        List list43 = AppendPairProgram.listgen(intArray35);
        List list44 = AppendPairProgram.listgen(intArray35);
        appendPairProgram0.TestStudentSubmission(list44, (int) '#');
        int[] intArray48 = new int[] { (byte) 10 };
        List list49 = AppendPairProgram.listgen(intArray48);
        List list50 = AppendPairProgram.listgen(intArray48);
        List list51 = AppendPairProgram.listgen(intArray48);
        List list52 = AppendPairProgram.listgen(intArray48);
        List list53 = AppendPairProgram.listgen(intArray48);
        List list54 = AppendPairProgram.listgen(intArray48);
        List list55 = AppendPairProgram.listgen(intArray48);
        appendPairProgram0.TestStudentSubmission(list55, (int) 'a');
        java.lang.Class<?> wildcardClass58 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0]");
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[]");
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[10]");
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0563");
        int[] intArray1 = new int[] { 0 };
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        java.lang.Class<?> wildcardClass7 = list6.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[0]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0564");
        int[] intArray1 = new int[] { (byte) 10 };
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        List list7 = AppendPairProgram.listgen(intArray1);
        List list8 = AppendPairProgram.listgen(intArray1);
        java.lang.Class<?> wildcardClass9 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[10]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0565");
        int[] intArray6 = new int[] { (short) -1, '#', '4', (short) -1, (short) 100, (byte) -1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass24 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 35, 52, -1, 100, -1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0566");
        int[] intArray6 = new int[] { (short) 0, (byte) 0, (byte) 1, 0, (-1), (byte) 100 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass24 = list23.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0, 1, 0, -1, 100]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0567");
        int[] intArray4 = new int[] { 'a', (byte) -1, 100, (byte) 10 };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        List list7 = AppendPairProgram.listgen(intArray4);
        List list8 = AppendPairProgram.listgen(intArray4);
        List list9 = AppendPairProgram.listgen(intArray4);
        List list10 = AppendPairProgram.listgen(intArray4);
        java.lang.Class<?> wildcardClass11 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[97, -1, 100, 10]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0568");
        int[] intArray1 = new int[] { (byte) 10 };
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        List list7 = AppendPairProgram.listgen(intArray1);
        List list8 = AppendPairProgram.listgen(intArray1);
        List list9 = AppendPairProgram.listgen(intArray1);
        List list10 = AppendPairProgram.listgen(intArray1);
        List list11 = AppendPairProgram.listgen(intArray1);
        java.lang.Class<?> wildcardClass12 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[10]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0569");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list9, (int) (short) 0);
        int[] intArray12 = new int[] {};
        List list13 = AppendPairProgram.listgen(intArray12);
        List list14 = AppendPairProgram.listgen(intArray12);
        List list15 = AppendPairProgram.listgen(intArray12);
        List list16 = AppendPairProgram.listgen(intArray12);
        List list17 = AppendPairProgram.listgen(intArray12);
        List list18 = AppendPairProgram.listgen(intArray12);
        List list19 = AppendPairProgram.listgen(intArray12);
        List list20 = AppendPairProgram.listgen(intArray12);
        List list21 = AppendPairProgram.listgen(intArray12);
        List list22 = AppendPairProgram.listgen(intArray12);
        appendPairProgram0.TestStudentSubmission(list22, (int) (byte) 0);
        java.lang.Class<?> wildcardClass25 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0570");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list24, (int) (short) 0);
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list29, 100);
        int[] intArray32 = new int[] {};
        List list33 = AppendPairProgram.listgen(intArray32);
        List list34 = AppendPairProgram.listgen(intArray32);
        List list35 = AppendPairProgram.listgen(intArray32);
        List list36 = AppendPairProgram.listgen(intArray32);
        List list37 = AppendPairProgram.listgen(intArray32);
        List list38 = AppendPairProgram.listgen(intArray32);
        List list39 = AppendPairProgram.listgen(intArray32);
        List list40 = AppendPairProgram.listgen(intArray32);
        appendPairProgram0.TestStudentSubmission(list40, (int) (byte) 100);
        int[] intArray43 = new int[] {};
        List list44 = AppendPairProgram.listgen(intArray43);
        List list45 = AppendPairProgram.listgen(intArray43);
        List list46 = AppendPairProgram.listgen(intArray43);
        List list47 = AppendPairProgram.listgen(intArray43);
        List list48 = AppendPairProgram.listgen(intArray43);
        List list49 = AppendPairProgram.listgen(intArray43);
        List list50 = AppendPairProgram.listgen(intArray43);
        List list51 = AppendPairProgram.listgen(intArray43);
        List list52 = AppendPairProgram.listgen(intArray43);
        List list53 = AppendPairProgram.listgen(intArray43);
        List list54 = AppendPairProgram.listgen(intArray43);
        List list55 = AppendPairProgram.listgen(intArray43);
        List list56 = AppendPairProgram.listgen(intArray43);
        List list57 = AppendPairProgram.listgen(intArray43);
        List list58 = AppendPairProgram.listgen(intArray43);
        List list59 = AppendPairProgram.listgen(intArray43);
        appendPairProgram0.TestStudentSubmission(list59, 0);
        int[] intArray62 = new int[] {};
        List list63 = AppendPairProgram.listgen(intArray62);
        List list64 = AppendPairProgram.listgen(intArray62);
        List list65 = AppendPairProgram.listgen(intArray62);
        List list66 = AppendPairProgram.listgen(intArray62);
        List list67 = AppendPairProgram.listgen(intArray62);
        List list68 = AppendPairProgram.listgen(intArray62);
        List list69 = AppendPairProgram.listgen(intArray62);
        List list70 = AppendPairProgram.listgen(intArray62);
        List list71 = AppendPairProgram.listgen(intArray62);
        List list72 = AppendPairProgram.listgen(intArray62);
        List list73 = AppendPairProgram.listgen(intArray62);
        List list74 = AppendPairProgram.listgen(intArray62);
        List list75 = AppendPairProgram.listgen(intArray62);
        appendPairProgram0.TestStudentSubmission(list75, (int) (short) 0);
        int[] intArray79 = new int[] { 0 };
        List list80 = AppendPairProgram.listgen(intArray79);
        List list81 = AppendPairProgram.listgen(intArray79);
        List list82 = AppendPairProgram.listgen(intArray79);
        List list83 = AppendPairProgram.listgen(intArray79);
        appendPairProgram0.TestStudentSubmission(list83, (int) (byte) 1);
        java.lang.Class<?> wildcardClass86 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[]");
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[]");
        org.junit.Assert.assertNotNull(list63);
        org.junit.Assert.assertNotNull(list64);
        org.junit.Assert.assertNotNull(list65);
        org.junit.Assert.assertNotNull(list66);
        org.junit.Assert.assertNotNull(list67);
        org.junit.Assert.assertNotNull(list68);
        org.junit.Assert.assertNotNull(list69);
        org.junit.Assert.assertNotNull(list70);
        org.junit.Assert.assertNotNull(list71);
        org.junit.Assert.assertNotNull(list72);
        org.junit.Assert.assertNotNull(list73);
        org.junit.Assert.assertNotNull(list74);
        org.junit.Assert.assertNotNull(list75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0]");
        org.junit.Assert.assertNotNull(list80);
        org.junit.Assert.assertNotNull(list81);
        org.junit.Assert.assertNotNull(list82);
        org.junit.Assert.assertNotNull(list83);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0571");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 10);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        List list14 = AppendPairProgram.listgen(intArray11);
        List list15 = AppendPairProgram.listgen(intArray11);
        List list16 = AppendPairProgram.listgen(intArray11);
        List list17 = AppendPairProgram.listgen(intArray11);
        List list18 = AppendPairProgram.listgen(intArray11);
        List list19 = AppendPairProgram.listgen(intArray11);
        List list20 = AppendPairProgram.listgen(intArray11);
        List list21 = AppendPairProgram.listgen(intArray11);
        List list22 = AppendPairProgram.listgen(intArray11);
        List list23 = AppendPairProgram.listgen(intArray11);
        List list24 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list24, (int) (byte) 0);
        int[] intArray27 = new int[] {};
        List list28 = AppendPairProgram.listgen(intArray27);
        appendPairProgram0.TestStudentSubmission(list28, 0);
        List list31 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list31, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[]");
        org.junit.Assert.assertNotNull(list28);
    }

    @Test
    public void test0572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0572");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, 1);
        java.lang.Class<?> wildcardClass16 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0573");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list24, (int) (short) 0);
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list29, 100);
        int[] intArray33 = new int[] { (byte) 10 };
        List list34 = AppendPairProgram.listgen(intArray33);
        appendPairProgram0.TestStudentSubmission(list34, (-1));
        int[] intArray38 = new int[] { (byte) 10 };
        List list39 = AppendPairProgram.listgen(intArray38);
        List list40 = AppendPairProgram.listgen(intArray38);
        List list41 = AppendPairProgram.listgen(intArray38);
        List list42 = AppendPairProgram.listgen(intArray38);
        List list43 = AppendPairProgram.listgen(intArray38);
        List list44 = AppendPairProgram.listgen(intArray38);
        List list45 = AppendPairProgram.listgen(intArray38);
        List list46 = AppendPairProgram.listgen(intArray38);
        List list47 = AppendPairProgram.listgen(intArray38);
        List list48 = AppendPairProgram.listgen(intArray38);
        appendPairProgram0.TestStudentSubmission(list48, (int) (short) 10);
        List list51 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list51, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10]");
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[10]");
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
    }

    @Test
    public void test0574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0574");
        int[] intArray4 = new int[] { (byte) 100, 'a', (byte) 0, 'a' };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        List list7 = AppendPairProgram.listgen(intArray4);
        List list8 = AppendPairProgram.listgen(intArray4);
        List list9 = AppendPairProgram.listgen(intArray4);
        List list10 = AppendPairProgram.listgen(intArray4);
        List list11 = AppendPairProgram.listgen(intArray4);
        List list12 = AppendPairProgram.listgen(intArray4);
        java.lang.Class<?> wildcardClass13 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, 97, 0, 97]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0575");
        int[] intArray6 = new int[] { 0, (short) 10, (short) -1, '#', (byte) 100, 1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass25 = list24.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 10, -1, 35, 100, 1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0576");
        int[] intArray1 = new int[] { (byte) 10 };
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        List list7 = AppendPairProgram.listgen(intArray1);
        List list8 = AppendPairProgram.listgen(intArray1);
        List list9 = AppendPairProgram.listgen(intArray1);
        List list10 = AppendPairProgram.listgen(intArray1);
        List list11 = AppendPairProgram.listgen(intArray1);
        List list12 = AppendPairProgram.listgen(intArray1);
        List list13 = AppendPairProgram.listgen(intArray1);
        List list14 = AppendPairProgram.listgen(intArray1);
        List list15 = AppendPairProgram.listgen(intArray1);
        List list16 = AppendPairProgram.listgen(intArray1);
        List list17 = AppendPairProgram.listgen(intArray1);
        java.lang.Class<?> wildcardClass18 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[10]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0577");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray16 = new int[] { (byte) 10 };
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list18, (int) (byte) -1);
        int[] intArray21 = new int[] {};
        List list22 = AppendPairProgram.listgen(intArray21);
        List list23 = AppendPairProgram.listgen(intArray21);
        List list24 = AppendPairProgram.listgen(intArray21);
        List list25 = AppendPairProgram.listgen(intArray21);
        List list26 = AppendPairProgram.listgen(intArray21);
        List list27 = AppendPairProgram.listgen(intArray21);
        List list28 = AppendPairProgram.listgen(intArray21);
        List list29 = AppendPairProgram.listgen(intArray21);
        List list30 = AppendPairProgram.listgen(intArray21);
        appendPairProgram0.TestStudentSubmission(list30, (int) (short) -1);
        int[] intArray33 = new int[] {};
        List list34 = AppendPairProgram.listgen(intArray33);
        List list35 = AppendPairProgram.listgen(intArray33);
        List list36 = AppendPairProgram.listgen(intArray33);
        List list37 = AppendPairProgram.listgen(intArray33);
        List list38 = AppendPairProgram.listgen(intArray33);
        List list39 = AppendPairProgram.listgen(intArray33);
        List list40 = AppendPairProgram.listgen(intArray33);
        List list41 = AppendPairProgram.listgen(intArray33);
        List list42 = AppendPairProgram.listgen(intArray33);
        List list43 = AppendPairProgram.listgen(intArray33);
        List list44 = AppendPairProgram.listgen(intArray33);
        List list45 = AppendPairProgram.listgen(intArray33);
        List list46 = AppendPairProgram.listgen(intArray33);
        List list47 = AppendPairProgram.listgen(intArray33);
        List list48 = AppendPairProgram.listgen(intArray33);
        List list49 = AppendPairProgram.listgen(intArray33);
        appendPairProgram0.TestStudentSubmission(list49, 0);
        List list52 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list52, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]");
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
    }

    @Test
    public void test0578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0578");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray15 = new int[] {};
        List list16 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 100);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        List list24 = AppendPairProgram.listgen(intArray19);
        List list25 = AppendPairProgram.listgen(intArray19);
        List list26 = AppendPairProgram.listgen(intArray19);
        List list27 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list27, (int) (short) -1);
        int[] intArray30 = new int[] {};
        List list31 = AppendPairProgram.listgen(intArray30);
        List list32 = AppendPairProgram.listgen(intArray30);
        List list33 = AppendPairProgram.listgen(intArray30);
        List list34 = AppendPairProgram.listgen(intArray30);
        List list35 = AppendPairProgram.listgen(intArray30);
        List list36 = AppendPairProgram.listgen(intArray30);
        List list37 = AppendPairProgram.listgen(intArray30);
        List list38 = AppendPairProgram.listgen(intArray30);
        List list39 = AppendPairProgram.listgen(intArray30);
        List list40 = AppendPairProgram.listgen(intArray30);
        List list41 = AppendPairProgram.listgen(intArray30);
        appendPairProgram0.TestStudentSubmission(list41, (-1));
        java.lang.Class<?> wildcardClass44 = list41.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]");
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0579");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray17 = new int[] { 0 };
        List list18 = AppendPairProgram.listgen(intArray17);
        List list19 = AppendPairProgram.listgen(intArray17);
        List list20 = AppendPairProgram.listgen(intArray17);
        appendPairProgram0.TestStudentSubmission(list20, (int) (short) -1);
        List list23 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list23, (int) 'a');
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0]");
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
    }

    @Test
    public void test0580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0580");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, 1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        List list12 = AppendPairProgram.listgen(intArray9);
        List list13 = AppendPairProgram.listgen(intArray9);
        List list14 = AppendPairProgram.listgen(intArray9);
        List list15 = AppendPairProgram.listgen(intArray9);
        List list16 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 0);
        List list19 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list19, 10);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
    }

    @Test
    public void test0581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0581");
        int[] intArray6 = new int[] { 0, (short) 10, (short) -1, '#', (byte) 100, 1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass24 = list23.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 10, -1, 35, 100, 1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0582");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, (int) (byte) 10);
        int[] intArray7 = new int[] { (byte) 10 };
        List list8 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list8, 100);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        List list14 = AppendPairProgram.listgen(intArray11);
        List list15 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list15, (int) (short) 100);
        java.lang.Class<?> wildcardClass18 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0583");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list24, (int) (short) 0);
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list29, 100);
        int[] intArray33 = new int[] { (byte) 10 };
        List list34 = AppendPairProgram.listgen(intArray33);
        appendPairProgram0.TestStudentSubmission(list34, (-1));
        int[] intArray37 = new int[] {};
        List list38 = AppendPairProgram.listgen(intArray37);
        List list39 = AppendPairProgram.listgen(intArray37);
        List list40 = AppendPairProgram.listgen(intArray37);
        List list41 = AppendPairProgram.listgen(intArray37);
        List list42 = AppendPairProgram.listgen(intArray37);
        List list43 = AppendPairProgram.listgen(intArray37);
        List list44 = AppendPairProgram.listgen(intArray37);
        List list45 = AppendPairProgram.listgen(intArray37);
        List list46 = AppendPairProgram.listgen(intArray37);
        List list47 = AppendPairProgram.listgen(intArray37);
        List list48 = AppendPairProgram.listgen(intArray37);
        List list49 = AppendPairProgram.listgen(intArray37);
        List list50 = AppendPairProgram.listgen(intArray37);
        List list51 = AppendPairProgram.listgen(intArray37);
        appendPairProgram0.TestStudentSubmission(list51, (int) (short) 100);
        int[] intArray54 = new int[] {};
        List list55 = AppendPairProgram.listgen(intArray54);
        List list56 = AppendPairProgram.listgen(intArray54);
        List list57 = AppendPairProgram.listgen(intArray54);
        List list58 = AppendPairProgram.listgen(intArray54);
        appendPairProgram0.TestStudentSubmission(list58, (int) (short) 10);
        java.lang.Class<?> wildcardClass61 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10]");
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[]");
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[]");
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0584");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, (int) (byte) 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list10, (-1));
        int[] intArray13 = new int[] {};
        List list14 = AppendPairProgram.listgen(intArray13);
        List list15 = AppendPairProgram.listgen(intArray13);
        appendPairProgram0.TestStudentSubmission(list15, (int) (byte) 1);
        int[] intArray19 = new int[] { (byte) 10 };
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        List list24 = AppendPairProgram.listgen(intArray19);
        List list25 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list25, (int) (short) -1);
        int[] intArray28 = new int[] {};
        List list29 = AppendPairProgram.listgen(intArray28);
        List list30 = AppendPairProgram.listgen(intArray28);
        List list31 = AppendPairProgram.listgen(intArray28);
        List list32 = AppendPairProgram.listgen(intArray28);
        List list33 = AppendPairProgram.listgen(intArray28);
        List list34 = AppendPairProgram.listgen(intArray28);
        List list35 = AppendPairProgram.listgen(intArray28);
        List list36 = AppendPairProgram.listgen(intArray28);
        List list37 = AppendPairProgram.listgen(intArray28);
        List list38 = AppendPairProgram.listgen(intArray28);
        List list39 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list39, (int) (short) 0);
        int[] intArray43 = new int[] { (byte) 10 };
        List list44 = AppendPairProgram.listgen(intArray43);
        List list45 = AppendPairProgram.listgen(intArray43);
        List list46 = AppendPairProgram.listgen(intArray43);
        List list47 = AppendPairProgram.listgen(intArray43);
        List list48 = AppendPairProgram.listgen(intArray43);
        List list49 = AppendPairProgram.listgen(intArray43);
        appendPairProgram0.TestStudentSubmission(list49, (int) '4');
        List list52 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list52, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[10]");
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
    }

    @Test
    public void test0585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0585");
        int[] intArray4 = new int[] { (byte) 100, 'a', (byte) 0, 'a' };
        List list5 = AppendPairProgram.listgen(intArray4);
        java.lang.Class<?> wildcardClass6 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, 97, 0, 97]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0586");
        int[] intArray6 = new int[] { 0, (short) 10, (short) -1, '#', (byte) 100, 1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass22 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 10, -1, 35, 100, 1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0587");
        int[] intArray1 = new int[] { 0 };
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        java.lang.Class<?> wildcardClass4 = list3.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[0]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0588");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list24, (int) (short) 0);
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list29, 100);
        int[] intArray33 = new int[] { (byte) 10 };
        List list34 = AppendPairProgram.listgen(intArray33);
        appendPairProgram0.TestStudentSubmission(list34, 1);
        java.lang.Class<?> wildcardClass37 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10]");
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0589");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        List list9 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list9, (int) (short) -1);
        java.lang.Class<?> wildcardClass12 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0590");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 10);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        List list14 = AppendPairProgram.listgen(intArray11);
        List list15 = AppendPairProgram.listgen(intArray11);
        List list16 = AppendPairProgram.listgen(intArray11);
        List list17 = AppendPairProgram.listgen(intArray11);
        List list18 = AppendPairProgram.listgen(intArray11);
        List list19 = AppendPairProgram.listgen(intArray11);
        List list20 = AppendPairProgram.listgen(intArray11);
        List list21 = AppendPairProgram.listgen(intArray11);
        List list22 = AppendPairProgram.listgen(intArray11);
        List list23 = AppendPairProgram.listgen(intArray11);
        List list24 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list24, (int) (byte) 0);
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        List list30 = AppendPairProgram.listgen(intArray28);
        List list31 = AppendPairProgram.listgen(intArray28);
        List list32 = AppendPairProgram.listgen(intArray28);
        List list33 = AppendPairProgram.listgen(intArray28);
        List list34 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list34, 1);
        java.lang.Class<?> wildcardClass37 = list34.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0591");
        int[] intArray6 = new int[] { 0, (short) 10, (short) -1, '#', (byte) 100, 1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        List list25 = AppendPairProgram.listgen(intArray6);
        List list26 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass27 = list26.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 10, -1, 35, 100, 1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0592");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, 1);
        int[] intArray17 = new int[] { (byte) 10 };
        List list18 = AppendPairProgram.listgen(intArray17);
        List list19 = AppendPairProgram.listgen(intArray17);
        List list20 = AppendPairProgram.listgen(intArray17);
        List list21 = AppendPairProgram.listgen(intArray17);
        List list22 = AppendPairProgram.listgen(intArray17);
        List list23 = AppendPairProgram.listgen(intArray17);
        List list24 = AppendPairProgram.listgen(intArray17);
        List list25 = AppendPairProgram.listgen(intArray17);
        appendPairProgram0.TestStudentSubmission(list25, (int) (short) 0);
        int[] intArray29 = new int[] { (byte) 10 };
        List list30 = AppendPairProgram.listgen(intArray29);
        List list31 = AppendPairProgram.listgen(intArray29);
        appendPairProgram0.TestStudentSubmission(list31, (-1));
        int[] intArray35 = new int[] { (byte) 10 };
        List list36 = AppendPairProgram.listgen(intArray35);
        List list37 = AppendPairProgram.listgen(intArray35);
        List list38 = AppendPairProgram.listgen(intArray35);
        List list39 = AppendPairProgram.listgen(intArray35);
        List list40 = AppendPairProgram.listgen(intArray35);
        List list41 = AppendPairProgram.listgen(intArray35);
        List list42 = AppendPairProgram.listgen(intArray35);
        List list43 = AppendPairProgram.listgen(intArray35);
        appendPairProgram0.TestStudentSubmission(list43, (int) (short) -1);
        java.lang.Class<?> wildcardClass46 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10]");
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10]");
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[10]");
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0593");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list24, (int) (short) 0);
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list29, 100);
        int[] intArray33 = new int[] { (byte) 10 };
        List list34 = AppendPairProgram.listgen(intArray33);
        appendPairProgram0.TestStudentSubmission(list34, (-1));
        int[] intArray37 = new int[] {};
        List list38 = AppendPairProgram.listgen(intArray37);
        List list39 = AppendPairProgram.listgen(intArray37);
        List list40 = AppendPairProgram.listgen(intArray37);
        List list41 = AppendPairProgram.listgen(intArray37);
        List list42 = AppendPairProgram.listgen(intArray37);
        List list43 = AppendPairProgram.listgen(intArray37);
        List list44 = AppendPairProgram.listgen(intArray37);
        List list45 = AppendPairProgram.listgen(intArray37);
        List list46 = AppendPairProgram.listgen(intArray37);
        List list47 = AppendPairProgram.listgen(intArray37);
        List list48 = AppendPairProgram.listgen(intArray37);
        List list49 = AppendPairProgram.listgen(intArray37);
        List list50 = AppendPairProgram.listgen(intArray37);
        List list51 = AppendPairProgram.listgen(intArray37);
        appendPairProgram0.TestStudentSubmission(list51, (int) (short) 100);
        java.lang.Class<?> wildcardClass54 = list51.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10]");
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[]");
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0594");
        int[] intArray6 = new int[] { (short) -1, '#', '4', (short) -1, (short) 100, (byte) -1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass20 = list19.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 35, 52, -1, 100, -1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0595");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray2 = new int[] { (byte) 10 };
        List list3 = AppendPairProgram.listgen(intArray2);
        List list4 = AppendPairProgram.listgen(intArray2);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 0);
        java.lang.Class<?> wildcardClass7 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[10]");
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0596");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray17 = new int[] { (byte) 10 };
        List list18 = AppendPairProgram.listgen(intArray17);
        List list19 = AppendPairProgram.listgen(intArray17);
        List list20 = AppendPairProgram.listgen(intArray17);
        List list21 = AppendPairProgram.listgen(intArray17);
        List list22 = AppendPairProgram.listgen(intArray17);
        List list23 = AppendPairProgram.listgen(intArray17);
        List list24 = AppendPairProgram.listgen(intArray17);
        List list25 = AppendPairProgram.listgen(intArray17);
        appendPairProgram0.TestStudentSubmission(list25, (int) (byte) 100);
        int[] intArray28 = new int[] {};
        List list29 = AppendPairProgram.listgen(intArray28);
        List list30 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list30, 0);
        int[] intArray34 = new int[] { (byte) 10 };
        List list35 = AppendPairProgram.listgen(intArray34);
        List list36 = AppendPairProgram.listgen(intArray34);
        List list37 = AppendPairProgram.listgen(intArray34);
        List list38 = AppendPairProgram.listgen(intArray34);
        List list39 = AppendPairProgram.listgen(intArray34);
        List list40 = AppendPairProgram.listgen(intArray34);
        List list41 = AppendPairProgram.listgen(intArray34);
        appendPairProgram0.TestStudentSubmission(list41, (int) (byte) 100);
        java.lang.Class<?> wildcardClass44 = list41.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10]");
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[10]");
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0597");
        int[] intArray0 = new int[] {};
        List list1 = AppendPairProgram.listgen(intArray0);
        List list2 = AppendPairProgram.listgen(intArray0);
        List list3 = AppendPairProgram.listgen(intArray0);
        List list4 = AppendPairProgram.listgen(intArray0);
        List list5 = AppendPairProgram.listgen(intArray0);
        List list6 = AppendPairProgram.listgen(intArray0);
        List list7 = AppendPairProgram.listgen(intArray0);
        List list8 = AppendPairProgram.listgen(intArray0);
        List list9 = AppendPairProgram.listgen(intArray0);
        List list10 = AppendPairProgram.listgen(intArray0);
        List list11 = AppendPairProgram.listgen(intArray0);
        List list12 = AppendPairProgram.listgen(intArray0);
        List list13 = AppendPairProgram.listgen(intArray0);
        List list14 = AppendPairProgram.listgen(intArray0);
        List list15 = AppendPairProgram.listgen(intArray0);
        List list16 = AppendPairProgram.listgen(intArray0);
        List list17 = AppendPairProgram.listgen(intArray0);
        java.lang.Class<?> wildcardClass18 = list17.getClass();
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(list1);
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0598");
        int[] intArray4 = new int[] { 'a', (short) 10, (short) 100, (byte) 0 };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        List list7 = AppendPairProgram.listgen(intArray4);
        List list8 = AppendPairProgram.listgen(intArray4);
        List list9 = AppendPairProgram.listgen(intArray4);
        List list10 = AppendPairProgram.listgen(intArray4);
        java.lang.Class<?> wildcardClass11 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[97, 10, 100, 0]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0599");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray7 = new int[] { (byte) 10 };
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list11, (int) (short) 1);
        List list14 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list14, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
    }

    @Test
    public void test0600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0600");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, (int) (short) -1);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list19, (int) '4');
        int[] intArray22 = new int[] {};
        List list23 = AppendPairProgram.listgen(intArray22);
        List list24 = AppendPairProgram.listgen(intArray22);
        appendPairProgram0.TestStudentSubmission(list24, 0);
        java.lang.Class<?> wildcardClass27 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]");
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0601");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray15 = new int[] {};
        List list16 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 100);
        int[] intArray20 = new int[] { (byte) 10 };
        List list21 = AppendPairProgram.listgen(intArray20);
        appendPairProgram0.TestStudentSubmission(list21, (-1));
        int[] intArray25 = new int[] { (byte) 10 };
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        List list31 = AppendPairProgram.listgen(intArray25);
        List list32 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list32, (int) (short) -1);
        int[] intArray35 = new int[] {};
        List list36 = AppendPairProgram.listgen(intArray35);
        List list37 = AppendPairProgram.listgen(intArray35);
        List list38 = AppendPairProgram.listgen(intArray35);
        List list39 = AppendPairProgram.listgen(intArray35);
        List list40 = AppendPairProgram.listgen(intArray35);
        List list41 = AppendPairProgram.listgen(intArray35);
        List list42 = AppendPairProgram.listgen(intArray35);
        List list43 = AppendPairProgram.listgen(intArray35);
        List list44 = AppendPairProgram.listgen(intArray35);
        List list45 = AppendPairProgram.listgen(intArray35);
        List list46 = AppendPairProgram.listgen(intArray35);
        List list47 = AppendPairProgram.listgen(intArray35);
        List list48 = AppendPairProgram.listgen(intArray35);
        List list49 = AppendPairProgram.listgen(intArray35);
        List list50 = AppendPairProgram.listgen(intArray35);
        List list51 = AppendPairProgram.listgen(intArray35);
        appendPairProgram0.TestStudentSubmission(list51, (int) '#');
        int[] intArray55 = new int[] { (byte) 10 };
        List list56 = AppendPairProgram.listgen(intArray55);
        List list57 = AppendPairProgram.listgen(intArray55);
        List list58 = AppendPairProgram.listgen(intArray55);
        List list59 = AppendPairProgram.listgen(intArray55);
        appendPairProgram0.TestStudentSubmission(list59, (int) (short) 1);
        java.lang.Class<?> wildcardClass62 = list59.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10]");
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[10]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[]");
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[10]");
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0602");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list24, (int) (short) 0);
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list29, 100);
        int[] intArray33 = new int[] { (byte) 10 };
        List list34 = AppendPairProgram.listgen(intArray33);
        List list35 = AppendPairProgram.listgen(intArray33);
        appendPairProgram0.TestStudentSubmission(list35, 100);
        int[] intArray39 = new int[] { (byte) 10 };
        List list40 = AppendPairProgram.listgen(intArray39);
        List list41 = AppendPairProgram.listgen(intArray39);
        appendPairProgram0.TestStudentSubmission(list41, (int) (byte) 0);
        java.lang.Class<?> wildcardClass44 = list41.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10]");
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10]");
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0603");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, (int) (byte) 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list10, (-1));
        int[] intArray13 = new int[] {};
        List list14 = AppendPairProgram.listgen(intArray13);
        List list15 = AppendPairProgram.listgen(intArray13);
        appendPairProgram0.TestStudentSubmission(list15, (int) (byte) 1);
        int[] intArray19 = new int[] { (byte) 10 };
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        List list24 = AppendPairProgram.listgen(intArray19);
        List list25 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list25, (int) (short) -1);
        int[] intArray28 = new int[] {};
        List list29 = AppendPairProgram.listgen(intArray28);
        List list30 = AppendPairProgram.listgen(intArray28);
        List list31 = AppendPairProgram.listgen(intArray28);
        List list32 = AppendPairProgram.listgen(intArray28);
        List list33 = AppendPairProgram.listgen(intArray28);
        List list34 = AppendPairProgram.listgen(intArray28);
        List list35 = AppendPairProgram.listgen(intArray28);
        List list36 = AppendPairProgram.listgen(intArray28);
        List list37 = AppendPairProgram.listgen(intArray28);
        List list38 = AppendPairProgram.listgen(intArray28);
        List list39 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list39, (int) (short) 0);
        int[] intArray43 = new int[] { (byte) 10 };
        List list44 = AppendPairProgram.listgen(intArray43);
        List list45 = AppendPairProgram.listgen(intArray43);
        List list46 = AppendPairProgram.listgen(intArray43);
        List list47 = AppendPairProgram.listgen(intArray43);
        List list48 = AppendPairProgram.listgen(intArray43);
        List list49 = AppendPairProgram.listgen(intArray43);
        appendPairProgram0.TestStudentSubmission(list49, (int) '4');
        java.lang.Class<?> wildcardClass52 = list49.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[10]");
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0604");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, 1);
        List list16 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list16, (int) ' ');
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
    }

    @Test
    public void test0605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0605");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        List list14 = AppendPairProgram.listgen(intArray7);
        List list15 = AppendPairProgram.listgen(intArray7);
        List list16 = AppendPairProgram.listgen(intArray7);
        List list17 = AppendPairProgram.listgen(intArray7);
        List list18 = AppendPairProgram.listgen(intArray7);
        List list19 = AppendPairProgram.listgen(intArray7);
        List list20 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list20, (int) '#');
        int[] intArray24 = new int[] { (byte) 10 };
        List list25 = AppendPairProgram.listgen(intArray24);
        List list26 = AppendPairProgram.listgen(intArray24);
        List list27 = AppendPairProgram.listgen(intArray24);
        List list28 = AppendPairProgram.listgen(intArray24);
        List list29 = AppendPairProgram.listgen(intArray24);
        List list30 = AppendPairProgram.listgen(intArray24);
        List list31 = AppendPairProgram.listgen(intArray24);
        List list32 = AppendPairProgram.listgen(intArray24);
        List list33 = AppendPairProgram.listgen(intArray24);
        List list34 = AppendPairProgram.listgen(intArray24);
        List list35 = AppendPairProgram.listgen(intArray24);
        List list36 = AppendPairProgram.listgen(intArray24);
        List list37 = AppendPairProgram.listgen(intArray24);
        appendPairProgram0.TestStudentSubmission(list37, (int) (byte) 100);
        java.lang.Class<?> wildcardClass40 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[10]");
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0606");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray16 = new int[] { (byte) 10 };
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list18, (int) (byte) -1);
        int[] intArray21 = new int[] {};
        List list22 = AppendPairProgram.listgen(intArray21);
        List list23 = AppendPairProgram.listgen(intArray21);
        List list24 = AppendPairProgram.listgen(intArray21);
        List list25 = AppendPairProgram.listgen(intArray21);
        List list26 = AppendPairProgram.listgen(intArray21);
        List list27 = AppendPairProgram.listgen(intArray21);
        List list28 = AppendPairProgram.listgen(intArray21);
        List list29 = AppendPairProgram.listgen(intArray21);
        List list30 = AppendPairProgram.listgen(intArray21);
        List list31 = AppendPairProgram.listgen(intArray21);
        List list32 = AppendPairProgram.listgen(intArray21);
        List list33 = AppendPairProgram.listgen(intArray21);
        List list34 = AppendPairProgram.listgen(intArray21);
        List list35 = AppendPairProgram.listgen(intArray21);
        List list36 = AppendPairProgram.listgen(intArray21);
        appendPairProgram0.TestStudentSubmission(list36, (int) (short) 1);
        int[] intArray39 = new int[] {};
        List list40 = AppendPairProgram.listgen(intArray39);
        List list41 = AppendPairProgram.listgen(intArray39);
        List list42 = AppendPairProgram.listgen(intArray39);
        List list43 = AppendPairProgram.listgen(intArray39);
        appendPairProgram0.TestStudentSubmission(list43, (int) (short) 100);
        int[] intArray46 = new int[] {};
        List list47 = AppendPairProgram.listgen(intArray46);
        List list48 = AppendPairProgram.listgen(intArray46);
        List list49 = AppendPairProgram.listgen(intArray46);
        List list50 = AppendPairProgram.listgen(intArray46);
        List list51 = AppendPairProgram.listgen(intArray46);
        List list52 = AppendPairProgram.listgen(intArray46);
        List list53 = AppendPairProgram.listgen(intArray46);
        List list54 = AppendPairProgram.listgen(intArray46);
        List list55 = AppendPairProgram.listgen(intArray46);
        List list56 = AppendPairProgram.listgen(intArray46);
        List list57 = AppendPairProgram.listgen(intArray46);
        List list58 = AppendPairProgram.listgen(intArray46);
        List list59 = AppendPairProgram.listgen(intArray46);
        List list60 = AppendPairProgram.listgen(intArray46);
        List list61 = AppendPairProgram.listgen(intArray46);
        List list62 = AppendPairProgram.listgen(intArray46);
        appendPairProgram0.TestStudentSubmission(list62, (int) (byte) 10);
        java.lang.Class<?> wildcardClass65 = list62.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]");
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(list61);
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0607");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray12 = new int[] { (byte) 10 };
        List list13 = AppendPairProgram.listgen(intArray12);
        List list14 = AppendPairProgram.listgen(intArray12);
        List list15 = AppendPairProgram.listgen(intArray12);
        appendPairProgram0.TestStudentSubmission(list15, 10);
        int[] intArray18 = new int[] {};
        List list19 = AppendPairProgram.listgen(intArray18);
        List list20 = AppendPairProgram.listgen(intArray18);
        List list21 = AppendPairProgram.listgen(intArray18);
        List list22 = AppendPairProgram.listgen(intArray18);
        List list23 = AppendPairProgram.listgen(intArray18);
        appendPairProgram0.TestStudentSubmission(list23, 0);
        int[] intArray26 = new int[] {};
        List list27 = AppendPairProgram.listgen(intArray26);
        List list28 = AppendPairProgram.listgen(intArray26);
        List list29 = AppendPairProgram.listgen(intArray26);
        List list30 = AppendPairProgram.listgen(intArray26);
        List list31 = AppendPairProgram.listgen(intArray26);
        List list32 = AppendPairProgram.listgen(intArray26);
        List list33 = AppendPairProgram.listgen(intArray26);
        List list34 = AppendPairProgram.listgen(intArray26);
        List list35 = AppendPairProgram.listgen(intArray26);
        List list36 = AppendPairProgram.listgen(intArray26);
        List list37 = AppendPairProgram.listgen(intArray26);
        appendPairProgram0.TestStudentSubmission(list37, (int) (byte) 10);
        List list40 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list40, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10]");
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
    }

    @Test
    public void test0608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0608");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) -1);
        int[] intArray14 = new int[] {};
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 10);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list23, (int) (byte) 0);
        List list26 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list26, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
    }

    @Test
    public void test0609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0609");
        int[] intArray4 = new int[] { 'a', (byte) -1, 100, (byte) 10 };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        List list7 = AppendPairProgram.listgen(intArray4);
        List list8 = AppendPairProgram.listgen(intArray4);
        List list9 = AppendPairProgram.listgen(intArray4);
        List list10 = AppendPairProgram.listgen(intArray4);
        List list11 = AppendPairProgram.listgen(intArray4);
        List list12 = AppendPairProgram.listgen(intArray4);
        java.lang.Class<?> wildcardClass13 = list12.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[97, -1, 100, 10]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0610");
        int[] intArray3 = new int[] { 0, '#', (short) -1 };
        List list4 = AppendPairProgram.listgen(intArray3);
        List list5 = AppendPairProgram.listgen(intArray3);
        List list6 = AppendPairProgram.listgen(intArray3);
        List list7 = AppendPairProgram.listgen(intArray3);
        List list8 = AppendPairProgram.listgen(intArray3);
        List list9 = AppendPairProgram.listgen(intArray3);
        List list10 = AppendPairProgram.listgen(intArray3);
        List list11 = AppendPairProgram.listgen(intArray3);
        List list12 = AppendPairProgram.listgen(intArray3);
        List list13 = AppendPairProgram.listgen(intArray3);
        List list14 = AppendPairProgram.listgen(intArray3);
        List list15 = AppendPairProgram.listgen(intArray3);
        List list16 = AppendPairProgram.listgen(intArray3);
        List list17 = AppendPairProgram.listgen(intArray3);
        List list18 = AppendPairProgram.listgen(intArray3);
        List list19 = AppendPairProgram.listgen(intArray3);
        java.lang.Class<?> wildcardClass20 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[0, 35, -1]");
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0611");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        List list7 = AppendPairProgram.listgen(intArray1);
        List list8 = AppendPairProgram.listgen(intArray1);
        List list9 = AppendPairProgram.listgen(intArray1);
        List list10 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list10, (int) (byte) 10);
        int[] intArray14 = new int[] { 0 };
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (short) 0);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list23, 0);
        int[] intArray27 = new int[] { 0 };
        List list28 = AppendPairProgram.listgen(intArray27);
        List list29 = AppendPairProgram.listgen(intArray27);
        List list30 = AppendPairProgram.listgen(intArray27);
        List list31 = AppendPairProgram.listgen(intArray27);
        List list32 = AppendPairProgram.listgen(intArray27);
        List list33 = AppendPairProgram.listgen(intArray27);
        appendPairProgram0.TestStudentSubmission(list33, (int) (short) 0);
        java.lang.Class<?> wildcardClass36 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0]");
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0612");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        List list7 = AppendPairProgram.listgen(intArray1);
        List list8 = AppendPairProgram.listgen(intArray1);
        List list9 = AppendPairProgram.listgen(intArray1);
        List list10 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list10, (int) (byte) 10);
        int[] intArray14 = new int[] { 0 };
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (short) 0);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list23, 0);
        int[] intArray26 = new int[] {};
        List list27 = AppendPairProgram.listgen(intArray26);
        List list28 = AppendPairProgram.listgen(intArray26);
        List list29 = AppendPairProgram.listgen(intArray26);
        List list30 = AppendPairProgram.listgen(intArray26);
        List list31 = AppendPairProgram.listgen(intArray26);
        List list32 = AppendPairProgram.listgen(intArray26);
        List list33 = AppendPairProgram.listgen(intArray26);
        appendPairProgram0.TestStudentSubmission(list33, 0);
        java.lang.Class<?> wildcardClass36 = list33.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0613");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        List list14 = AppendPairProgram.listgen(intArray11);
        List list15 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list15, (int) (byte) -1);
        int[] intArray18 = new int[] {};
        List list19 = AppendPairProgram.listgen(intArray18);
        List list20 = AppendPairProgram.listgen(intArray18);
        List list21 = AppendPairProgram.listgen(intArray18);
        appendPairProgram0.TestStudentSubmission(list21, (int) (short) 10);
        int[] intArray25 = new int[] { (byte) 10 };
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list29, 100);
        java.lang.Class<?> wildcardClass32 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[10]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0614");
        int[] intArray1 = new int[] { (byte) 10 };
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        List list7 = AppendPairProgram.listgen(intArray1);
        List list8 = AppendPairProgram.listgen(intArray1);
        List list9 = AppendPairProgram.listgen(intArray1);
        List list10 = AppendPairProgram.listgen(intArray1);
        List list11 = AppendPairProgram.listgen(intArray1);
        List list12 = AppendPairProgram.listgen(intArray1);
        List list13 = AppendPairProgram.listgen(intArray1);
        List list14 = AppendPairProgram.listgen(intArray1);
        List list15 = AppendPairProgram.listgen(intArray1);
        List list16 = AppendPairProgram.listgen(intArray1);
        List list17 = AppendPairProgram.listgen(intArray1);
        List list18 = AppendPairProgram.listgen(intArray1);
        List list19 = AppendPairProgram.listgen(intArray1);
        java.lang.Class<?> wildcardClass20 = list19.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[10]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0615");
        int[] intArray5 = new int[] { '4', 10, (byte) 1, (byte) 100, (byte) 10 };
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        List list9 = AppendPairProgram.listgen(intArray5);
        List list10 = AppendPairProgram.listgen(intArray5);
        java.lang.Class<?> wildcardClass11 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[52, 10, 1, 100, 10]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0616");
        int[] intArray2 = new int[] { 10, (byte) 0 };
        List list3 = AppendPairProgram.listgen(intArray2);
        List list4 = AppendPairProgram.listgen(intArray2);
        List list5 = AppendPairProgram.listgen(intArray2);
        List list6 = AppendPairProgram.listgen(intArray2);
        List list7 = AppendPairProgram.listgen(intArray2);
        List list8 = AppendPairProgram.listgen(intArray2);
        List list9 = AppendPairProgram.listgen(intArray2);
        List list10 = AppendPairProgram.listgen(intArray2);
        List list11 = AppendPairProgram.listgen(intArray2);
        java.lang.Class<?> wildcardClass12 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[10, 0]");
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0617");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list9, (int) (short) 0);
        int[] intArray12 = new int[] {};
        List list13 = AppendPairProgram.listgen(intArray12);
        List list14 = AppendPairProgram.listgen(intArray12);
        List list15 = AppendPairProgram.listgen(intArray12);
        List list16 = AppendPairProgram.listgen(intArray12);
        List list17 = AppendPairProgram.listgen(intArray12);
        List list18 = AppendPairProgram.listgen(intArray12);
        List list19 = AppendPairProgram.listgen(intArray12);
        List list20 = AppendPairProgram.listgen(intArray12);
        List list21 = AppendPairProgram.listgen(intArray12);
        List list22 = AppendPairProgram.listgen(intArray12);
        appendPairProgram0.TestStudentSubmission(list22, (int) (byte) 0);
        List list25 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list25, (-1));
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
    }

    @Test
    public void test0618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0618");
        int[] intArray6 = new int[] { (short) -1, '#', '4', (short) -1, (short) 100, (byte) -1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass15 = list14.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 35, 52, -1, 100, -1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0619");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, 1);
        int[] intArray10 = new int[] { (byte) 10 };
        List list11 = AppendPairProgram.listgen(intArray10);
        List list12 = AppendPairProgram.listgen(intArray10);
        List list13 = AppendPairProgram.listgen(intArray10);
        appendPairProgram0.TestStudentSubmission(list13, (int) ' ');
        java.lang.Class<?> wildcardClass16 = list13.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10]");
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0620");
        int[] intArray6 = new int[] { 0, (short) 10, (short) -1, '#', (byte) 100, 1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        List list25 = AppendPairProgram.listgen(intArray6);
        List list26 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass27 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 10, -1, 35, 100, 1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0621");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray16 = new int[] { (byte) 10 };
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list18, (int) (byte) -1);
        int[] intArray21 = new int[] {};
        List list22 = AppendPairProgram.listgen(intArray21);
        List list23 = AppendPairProgram.listgen(intArray21);
        List list24 = AppendPairProgram.listgen(intArray21);
        List list25 = AppendPairProgram.listgen(intArray21);
        List list26 = AppendPairProgram.listgen(intArray21);
        List list27 = AppendPairProgram.listgen(intArray21);
        List list28 = AppendPairProgram.listgen(intArray21);
        List list29 = AppendPairProgram.listgen(intArray21);
        List list30 = AppendPairProgram.listgen(intArray21);
        List list31 = AppendPairProgram.listgen(intArray21);
        List list32 = AppendPairProgram.listgen(intArray21);
        List list33 = AppendPairProgram.listgen(intArray21);
        List list34 = AppendPairProgram.listgen(intArray21);
        List list35 = AppendPairProgram.listgen(intArray21);
        List list36 = AppendPairProgram.listgen(intArray21);
        appendPairProgram0.TestStudentSubmission(list36, (int) (short) 1);
        java.lang.Class<?> wildcardClass39 = list36.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0622");
        int[] intArray4 = new int[] { (byte) 100, 'a', (byte) 0, 'a' };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        List list7 = AppendPairProgram.listgen(intArray4);
        List list8 = AppendPairProgram.listgen(intArray4);
        List list9 = AppendPairProgram.listgen(intArray4);
        java.lang.Class<?> wildcardClass10 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, 97, 0, 97]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0623");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list11, 0);
        int[] intArray15 = new int[] { (byte) 10 };
        List list16 = AppendPairProgram.listgen(intArray15);
        List list17 = AppendPairProgram.listgen(intArray15);
        List list18 = AppendPairProgram.listgen(intArray15);
        List list19 = AppendPairProgram.listgen(intArray15);
        List list20 = AppendPairProgram.listgen(intArray15);
        List list21 = AppendPairProgram.listgen(intArray15);
        List list22 = AppendPairProgram.listgen(intArray15);
        List list23 = AppendPairProgram.listgen(intArray15);
        List list24 = AppendPairProgram.listgen(intArray15);
        List list25 = AppendPairProgram.listgen(intArray15);
        List list26 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list26, (int) (byte) 100);
        java.lang.Class<?> wildcardClass29 = list26.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0624");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray15 = new int[] {};
        List list16 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 100);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        List list24 = AppendPairProgram.listgen(intArray19);
        List list25 = AppendPairProgram.listgen(intArray19);
        List list26 = AppendPairProgram.listgen(intArray19);
        List list27 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list27, (int) (short) -1);
        int[] intArray31 = new int[] { (byte) 10 };
        List list32 = AppendPairProgram.listgen(intArray31);
        List list33 = AppendPairProgram.listgen(intArray31);
        List list34 = AppendPairProgram.listgen(intArray31);
        List list35 = AppendPairProgram.listgen(intArray31);
        List list36 = AppendPairProgram.listgen(intArray31);
        List list37 = AppendPairProgram.listgen(intArray31);
        List list38 = AppendPairProgram.listgen(intArray31);
        List list39 = AppendPairProgram.listgen(intArray31);
        List list40 = AppendPairProgram.listgen(intArray31);
        appendPairProgram0.TestStudentSubmission(list40, (int) (short) 100);
        java.lang.Class<?> wildcardClass43 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10]");
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0625");
        int[] intArray6 = new int[] { (short) -1, '#', '4', (short) -1, (short) 100, (byte) -1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass13 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 35, 52, -1, 100, -1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0626");
        int[] intArray6 = new int[] { 0, (short) 10, (short) -1, '#', (byte) 100, 1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass23 = list22.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 10, -1, 35, 100, 1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0627");
        int[] intArray6 = new int[] { (byte) 0, (short) -1, ' ', 'a', (byte) 100, (byte) 10 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass17 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, -1, 32, 97, 100, 10]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0628");
        int[] intArray3 = new int[] { 0, '#', (short) -1 };
        List list4 = AppendPairProgram.listgen(intArray3);
        List list5 = AppendPairProgram.listgen(intArray3);
        List list6 = AppendPairProgram.listgen(intArray3);
        List list7 = AppendPairProgram.listgen(intArray3);
        List list8 = AppendPairProgram.listgen(intArray3);
        List list9 = AppendPairProgram.listgen(intArray3);
        List list10 = AppendPairProgram.listgen(intArray3);
        List list11 = AppendPairProgram.listgen(intArray3);
        List list12 = AppendPairProgram.listgen(intArray3);
        List list13 = AppendPairProgram.listgen(intArray3);
        List list14 = AppendPairProgram.listgen(intArray3);
        List list15 = AppendPairProgram.listgen(intArray3);
        List list16 = AppendPairProgram.listgen(intArray3);
        List list17 = AppendPairProgram.listgen(intArray3);
        List list18 = AppendPairProgram.listgen(intArray3);
        java.lang.Class<?> wildcardClass19 = list18.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[0, 35, -1]");
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0629");
        int[] intArray6 = new int[] { 0, (short) 10, (short) -1, '#', (byte) 100, 1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        List list25 = AppendPairProgram.listgen(intArray6);
        List list26 = AppendPairProgram.listgen(intArray6);
        List list27 = AppendPairProgram.listgen(intArray6);
        List list28 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass29 = list28.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 10, -1, 35, 100, 1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0630");
        int[] intArray6 = new int[] { 0, (short) 10, (short) -1, '#', (byte) 100, 1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass14 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 10, -1, 35, 100, 1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0631");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray17 = new int[] { (byte) 10 };
        List list18 = AppendPairProgram.listgen(intArray17);
        List list19 = AppendPairProgram.listgen(intArray17);
        List list20 = AppendPairProgram.listgen(intArray17);
        List list21 = AppendPairProgram.listgen(intArray17);
        List list22 = AppendPairProgram.listgen(intArray17);
        List list23 = AppendPairProgram.listgen(intArray17);
        List list24 = AppendPairProgram.listgen(intArray17);
        List list25 = AppendPairProgram.listgen(intArray17);
        appendPairProgram0.TestStudentSubmission(list25, (int) (byte) 100);
        int[] intArray28 = new int[] {};
        List list29 = AppendPairProgram.listgen(intArray28);
        List list30 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list30, 0);
        int[] intArray34 = new int[] { (byte) 10 };
        List list35 = AppendPairProgram.listgen(intArray34);
        List list36 = AppendPairProgram.listgen(intArray34);
        List list37 = AppendPairProgram.listgen(intArray34);
        List list38 = AppendPairProgram.listgen(intArray34);
        List list39 = AppendPairProgram.listgen(intArray34);
        List list40 = AppendPairProgram.listgen(intArray34);
        List list41 = AppendPairProgram.listgen(intArray34);
        appendPairProgram0.TestStudentSubmission(list41, (int) (byte) 100);
        java.lang.Class<?> wildcardClass44 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10]");
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[10]");
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0632");
        int[] intArray2 = new int[] { 10, (byte) 0 };
        List list3 = AppendPairProgram.listgen(intArray2);
        List list4 = AppendPairProgram.listgen(intArray2);
        List list5 = AppendPairProgram.listgen(intArray2);
        List list6 = AppendPairProgram.listgen(intArray2);
        List list7 = AppendPairProgram.listgen(intArray2);
        List list8 = AppendPairProgram.listgen(intArray2);
        List list9 = AppendPairProgram.listgen(intArray2);
        List list10 = AppendPairProgram.listgen(intArray2);
        List list11 = AppendPairProgram.listgen(intArray2);
        List list12 = AppendPairProgram.listgen(intArray2);
        java.lang.Class<?> wildcardClass13 = list12.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[10, 0]");
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0633");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list9, (int) (short) 0);
        int[] intArray12 = new int[] {};
        List list13 = AppendPairProgram.listgen(intArray12);
        List list14 = AppendPairProgram.listgen(intArray12);
        List list15 = AppendPairProgram.listgen(intArray12);
        List list16 = AppendPairProgram.listgen(intArray12);
        List list17 = AppendPairProgram.listgen(intArray12);
        List list18 = AppendPairProgram.listgen(intArray12);
        List list19 = AppendPairProgram.listgen(intArray12);
        List list20 = AppendPairProgram.listgen(intArray12);
        List list21 = AppendPairProgram.listgen(intArray12);
        List list22 = AppendPairProgram.listgen(intArray12);
        List list23 = AppendPairProgram.listgen(intArray12);
        List list24 = AppendPairProgram.listgen(intArray12);
        appendPairProgram0.TestStudentSubmission(list24, (int) '#');
        int[] intArray28 = new int[] { 0 };
        List list29 = AppendPairProgram.listgen(intArray28);
        List list30 = AppendPairProgram.listgen(intArray28);
        List list31 = AppendPairProgram.listgen(intArray28);
        List list32 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list32, (int) (byte) 100);
        List list35 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list35, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
    }

    @Test
    public void test0634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0634");
        int[] intArray3 = new int[] { 0, '#', (short) -1 };
        List list4 = AppendPairProgram.listgen(intArray3);
        List list5 = AppendPairProgram.listgen(intArray3);
        List list6 = AppendPairProgram.listgen(intArray3);
        List list7 = AppendPairProgram.listgen(intArray3);
        List list8 = AppendPairProgram.listgen(intArray3);
        List list9 = AppendPairProgram.listgen(intArray3);
        List list10 = AppendPairProgram.listgen(intArray3);
        List list11 = AppendPairProgram.listgen(intArray3);
        List list12 = AppendPairProgram.listgen(intArray3);
        List list13 = AppendPairProgram.listgen(intArray3);
        List list14 = AppendPairProgram.listgen(intArray3);
        List list15 = AppendPairProgram.listgen(intArray3);
        List list16 = AppendPairProgram.listgen(intArray3);
        List list17 = AppendPairProgram.listgen(intArray3);
        List list18 = AppendPairProgram.listgen(intArray3);
        List list19 = AppendPairProgram.listgen(intArray3);
        List list20 = AppendPairProgram.listgen(intArray3);
        List list21 = AppendPairProgram.listgen(intArray3);
        List list22 = AppendPairProgram.listgen(intArray3);
        java.lang.Class<?> wildcardClass23 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[0, 35, -1]");
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0635");
        int[] intArray4 = new int[] { (byte) 100, 'a', (byte) 0, 'a' };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        List list7 = AppendPairProgram.listgen(intArray4);
        List list8 = AppendPairProgram.listgen(intArray4);
        List list9 = AppendPairProgram.listgen(intArray4);
        java.lang.Class<?> wildcardClass10 = list9.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, 97, 0, 97]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0636");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, (int) '4');
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list26, (int) (byte) 1);
        int[] intArray29 = new int[] {};
        List list30 = AppendPairProgram.listgen(intArray29);
        List list31 = AppendPairProgram.listgen(intArray29);
        List list32 = AppendPairProgram.listgen(intArray29);
        List list33 = AppendPairProgram.listgen(intArray29);
        List list34 = AppendPairProgram.listgen(intArray29);
        List list35 = AppendPairProgram.listgen(intArray29);
        List list36 = AppendPairProgram.listgen(intArray29);
        List list37 = AppendPairProgram.listgen(intArray29);
        List list38 = AppendPairProgram.listgen(intArray29);
        List list39 = AppendPairProgram.listgen(intArray29);
        appendPairProgram0.TestStudentSubmission(list39, (-1));
        int[] intArray42 = new int[] {};
        List list43 = AppendPairProgram.listgen(intArray42);
        List list44 = AppendPairProgram.listgen(intArray42);
        List list45 = AppendPairProgram.listgen(intArray42);
        List list46 = AppendPairProgram.listgen(intArray42);
        List list47 = AppendPairProgram.listgen(intArray42);
        List list48 = AppendPairProgram.listgen(intArray42);
        List list49 = AppendPairProgram.listgen(intArray42);
        List list50 = AppendPairProgram.listgen(intArray42);
        List list51 = AppendPairProgram.listgen(intArray42);
        appendPairProgram0.TestStudentSubmission(list51, (int) 'a');
        List list54 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list54, (int) '4');
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[]");
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]");
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
    }

    @Test
    public void test0637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0637");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray15 = new int[] {};
        List list16 = AppendPairProgram.listgen(intArray15);
        List list17 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list17, (int) (short) 1);
        int[] intArray21 = new int[] { (byte) 10 };
        List list22 = AppendPairProgram.listgen(intArray21);
        List list23 = AppendPairProgram.listgen(intArray21);
        List list24 = AppendPairProgram.listgen(intArray21);
        List list25 = AppendPairProgram.listgen(intArray21);
        List list26 = AppendPairProgram.listgen(intArray21);
        List list27 = AppendPairProgram.listgen(intArray21);
        List list28 = AppendPairProgram.listgen(intArray21);
        List list29 = AppendPairProgram.listgen(intArray21);
        List list30 = AppendPairProgram.listgen(intArray21);
        List list31 = AppendPairProgram.listgen(intArray21);
        List list32 = AppendPairProgram.listgen(intArray21);
        List list33 = AppendPairProgram.listgen(intArray21);
        appendPairProgram0.TestStudentSubmission(list33, 10);
        java.lang.Class<?> wildcardClass36 = list33.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10]");
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0638");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, (int) '4');
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list26, (int) (byte) 1);
        int[] intArray29 = new int[] {};
        List list30 = AppendPairProgram.listgen(intArray29);
        List list31 = AppendPairProgram.listgen(intArray29);
        List list32 = AppendPairProgram.listgen(intArray29);
        List list33 = AppendPairProgram.listgen(intArray29);
        List list34 = AppendPairProgram.listgen(intArray29);
        List list35 = AppendPairProgram.listgen(intArray29);
        List list36 = AppendPairProgram.listgen(intArray29);
        List list37 = AppendPairProgram.listgen(intArray29);
        List list38 = AppendPairProgram.listgen(intArray29);
        List list39 = AppendPairProgram.listgen(intArray29);
        appendPairProgram0.TestStudentSubmission(list39, (-1));
        int[] intArray42 = new int[] {};
        List list43 = AppendPairProgram.listgen(intArray42);
        List list44 = AppendPairProgram.listgen(intArray42);
        List list45 = AppendPairProgram.listgen(intArray42);
        List list46 = AppendPairProgram.listgen(intArray42);
        List list47 = AppendPairProgram.listgen(intArray42);
        List list48 = AppendPairProgram.listgen(intArray42);
        List list49 = AppendPairProgram.listgen(intArray42);
        List list50 = AppendPairProgram.listgen(intArray42);
        List list51 = AppendPairProgram.listgen(intArray42);
        List list52 = AppendPairProgram.listgen(intArray42);
        List list53 = AppendPairProgram.listgen(intArray42);
        List list54 = AppendPairProgram.listgen(intArray42);
        appendPairProgram0.TestStudentSubmission(list54, (int) '4');
        java.lang.Class<?> wildcardClass57 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[]");
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]");
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0639");
        int[] intArray6 = new int[] { 0, (short) 10, (short) -1, '#', (byte) 100, 1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass16 = list15.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 10, -1, 35, 100, 1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0640");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, 1);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list22, (int) (short) 1);
        int[] intArray25 = new int[] {};
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        List list31 = AppendPairProgram.listgen(intArray25);
        List list32 = AppendPairProgram.listgen(intArray25);
        List list33 = AppendPairProgram.listgen(intArray25);
        List list34 = AppendPairProgram.listgen(intArray25);
        List list35 = AppendPairProgram.listgen(intArray25);
        List list36 = AppendPairProgram.listgen(intArray25);
        List list37 = AppendPairProgram.listgen(intArray25);
        List list38 = AppendPairProgram.listgen(intArray25);
        List list39 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list39, (int) '#');
        int[] intArray42 = new int[] {};
        List list43 = AppendPairProgram.listgen(intArray42);
        List list44 = AppendPairProgram.listgen(intArray42);
        List list45 = AppendPairProgram.listgen(intArray42);
        List list46 = AppendPairProgram.listgen(intArray42);
        List list47 = AppendPairProgram.listgen(intArray42);
        List list48 = AppendPairProgram.listgen(intArray42);
        List list49 = AppendPairProgram.listgen(intArray42);
        List list50 = AppendPairProgram.listgen(intArray42);
        List list51 = AppendPairProgram.listgen(intArray42);
        appendPairProgram0.TestStudentSubmission(list51, (int) 'a');
        int[] intArray55 = new int[] { (byte) 10 };
        List list56 = AppendPairProgram.listgen(intArray55);
        List list57 = AppendPairProgram.listgen(intArray55);
        List list58 = AppendPairProgram.listgen(intArray55);
        appendPairProgram0.TestStudentSubmission(list58, (int) '4');
        List list61 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list61, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]");
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[10]");
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
    }

    @Test
    public void test0641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0641");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, (int) '4');
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list26, (int) (byte) 1);
        int[] intArray29 = new int[] {};
        List list30 = AppendPairProgram.listgen(intArray29);
        List list31 = AppendPairProgram.listgen(intArray29);
        List list32 = AppendPairProgram.listgen(intArray29);
        List list33 = AppendPairProgram.listgen(intArray29);
        List list34 = AppendPairProgram.listgen(intArray29);
        List list35 = AppendPairProgram.listgen(intArray29);
        List list36 = AppendPairProgram.listgen(intArray29);
        List list37 = AppendPairProgram.listgen(intArray29);
        List list38 = AppendPairProgram.listgen(intArray29);
        List list39 = AppendPairProgram.listgen(intArray29);
        appendPairProgram0.TestStudentSubmission(list39, (-1));
        int[] intArray43 = new int[] { 0 };
        List list44 = AppendPairProgram.listgen(intArray43);
        List list45 = AppendPairProgram.listgen(intArray43);
        List list46 = AppendPairProgram.listgen(intArray43);
        appendPairProgram0.TestStudentSubmission(list46, (int) ' ');
        java.lang.Class<?> wildcardClass49 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[]");
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0]");
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0642");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, (int) '4');
        List list16 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list16, (-1));
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
    }

    @Test
    public void test0643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0643");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list24, (int) (short) 0);
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list29, 100);
        int[] intArray33 = new int[] { (byte) 10 };
        List list34 = AppendPairProgram.listgen(intArray33);
        appendPairProgram0.TestStudentSubmission(list34, (-1));
        int[] intArray38 = new int[] { (byte) 10 };
        List list39 = AppendPairProgram.listgen(intArray38);
        List list40 = AppendPairProgram.listgen(intArray38);
        List list41 = AppendPairProgram.listgen(intArray38);
        List list42 = AppendPairProgram.listgen(intArray38);
        List list43 = AppendPairProgram.listgen(intArray38);
        List list44 = AppendPairProgram.listgen(intArray38);
        List list45 = AppendPairProgram.listgen(intArray38);
        List list46 = AppendPairProgram.listgen(intArray38);
        List list47 = AppendPairProgram.listgen(intArray38);
        List list48 = AppendPairProgram.listgen(intArray38);
        appendPairProgram0.TestStudentSubmission(list48, (int) (short) 10);
        java.lang.Class<?> wildcardClass51 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10]");
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[10]");
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0644");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        List list7 = AppendPairProgram.listgen(intArray1);
        List list8 = AppendPairProgram.listgen(intArray1);
        List list9 = AppendPairProgram.listgen(intArray1);
        List list10 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list10, (int) (byte) 10);
        int[] intArray14 = new int[] { 0 };
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (short) 0);
        java.lang.Class<?> wildcardClass19 = list16.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0645");
        int[] intArray0 = new int[] {};
        List list1 = AppendPairProgram.listgen(intArray0);
        List list2 = AppendPairProgram.listgen(intArray0);
        List list3 = AppendPairProgram.listgen(intArray0);
        List list4 = AppendPairProgram.listgen(intArray0);
        List list5 = AppendPairProgram.listgen(intArray0);
        List list6 = AppendPairProgram.listgen(intArray0);
        List list7 = AppendPairProgram.listgen(intArray0);
        List list8 = AppendPairProgram.listgen(intArray0);
        List list9 = AppendPairProgram.listgen(intArray0);
        List list10 = AppendPairProgram.listgen(intArray0);
        List list11 = AppendPairProgram.listgen(intArray0);
        List list12 = AppendPairProgram.listgen(intArray0);
        List list13 = AppendPairProgram.listgen(intArray0);
        List list14 = AppendPairProgram.listgen(intArray0);
        List list15 = AppendPairProgram.listgen(intArray0);
        List list16 = AppendPairProgram.listgen(intArray0);
        List list17 = AppendPairProgram.listgen(intArray0);
        List list18 = AppendPairProgram.listgen(intArray0);
        List list19 = AppendPairProgram.listgen(intArray0);
        java.lang.Class<?> wildcardClass20 = intArray0.getClass();
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(list1);
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0646");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list24, (int) (short) 0);
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list29, 100);
        int[] intArray33 = new int[] { (byte) 10 };
        List list34 = AppendPairProgram.listgen(intArray33);
        appendPairProgram0.TestStudentSubmission(list34, (-1));
        int[] intArray37 = new int[] {};
        List list38 = AppendPairProgram.listgen(intArray37);
        List list39 = AppendPairProgram.listgen(intArray37);
        List list40 = AppendPairProgram.listgen(intArray37);
        List list41 = AppendPairProgram.listgen(intArray37);
        List list42 = AppendPairProgram.listgen(intArray37);
        List list43 = AppendPairProgram.listgen(intArray37);
        List list44 = AppendPairProgram.listgen(intArray37);
        List list45 = AppendPairProgram.listgen(intArray37);
        List list46 = AppendPairProgram.listgen(intArray37);
        List list47 = AppendPairProgram.listgen(intArray37);
        List list48 = AppendPairProgram.listgen(intArray37);
        List list49 = AppendPairProgram.listgen(intArray37);
        List list50 = AppendPairProgram.listgen(intArray37);
        List list51 = AppendPairProgram.listgen(intArray37);
        appendPairProgram0.TestStudentSubmission(list51, (int) (short) 100);
        int[] intArray54 = new int[] {};
        List list55 = AppendPairProgram.listgen(intArray54);
        List list56 = AppendPairProgram.listgen(intArray54);
        List list57 = AppendPairProgram.listgen(intArray54);
        List list58 = AppendPairProgram.listgen(intArray54);
        appendPairProgram0.TestStudentSubmission(list58, (int) (short) 10);
        java.lang.Class<?> wildcardClass61 = list58.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10]");
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[]");
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[]");
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0647");
        int[] intArray4 = new int[] { (-1), (byte) 100, (byte) 1, (byte) 1 };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        List list7 = AppendPairProgram.listgen(intArray4);
        List list8 = AppendPairProgram.listgen(intArray4);
        List list9 = AppendPairProgram.listgen(intArray4);
        List list10 = AppendPairProgram.listgen(intArray4);
        List list11 = AppendPairProgram.listgen(intArray4);
        List list12 = AppendPairProgram.listgen(intArray4);
        java.lang.Class<?> wildcardClass13 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 100, 1, 1]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0648");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) -1);
        int[] intArray14 = new int[] {};
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 10);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list23, (int) (byte) 0);
        int[] intArray26 = new int[] {};
        List list27 = AppendPairProgram.listgen(intArray26);
        List list28 = AppendPairProgram.listgen(intArray26);
        List list29 = AppendPairProgram.listgen(intArray26);
        List list30 = AppendPairProgram.listgen(intArray26);
        List list31 = AppendPairProgram.listgen(intArray26);
        List list32 = AppendPairProgram.listgen(intArray26);
        appendPairProgram0.TestStudentSubmission(list32, 100);
        int[] intArray36 = new int[] { (byte) 10 };
        List list37 = AppendPairProgram.listgen(intArray36);
        List list38 = AppendPairProgram.listgen(intArray36);
        List list39 = AppendPairProgram.listgen(intArray36);
        List list40 = AppendPairProgram.listgen(intArray36);
        List list41 = AppendPairProgram.listgen(intArray36);
        List list42 = AppendPairProgram.listgen(intArray36);
        List list43 = AppendPairProgram.listgen(intArray36);
        appendPairProgram0.TestStudentSubmission(list43, 100);
        int[] intArray46 = new int[] {};
        List list47 = AppendPairProgram.listgen(intArray46);
        List list48 = AppendPairProgram.listgen(intArray46);
        List list49 = AppendPairProgram.listgen(intArray46);
        List list50 = AppendPairProgram.listgen(intArray46);
        List list51 = AppendPairProgram.listgen(intArray46);
        List list52 = AppendPairProgram.listgen(intArray46);
        List list53 = AppendPairProgram.listgen(intArray46);
        appendPairProgram0.TestStudentSubmission(list53, (int) (short) 1);
        int[] intArray56 = new int[] {};
        List list57 = AppendPairProgram.listgen(intArray56);
        List list58 = AppendPairProgram.listgen(intArray56);
        List list59 = AppendPairProgram.listgen(intArray56);
        List list60 = AppendPairProgram.listgen(intArray56);
        appendPairProgram0.TestStudentSubmission(list60, (int) (short) 10);
        java.lang.Class<?> wildcardClass63 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[10]");
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[]");
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0649");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, (int) '4');
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list26, (int) (byte) 1);
        int[] intArray30 = new int[] { 0 };
        List list31 = AppendPairProgram.listgen(intArray30);
        List list32 = AppendPairProgram.listgen(intArray30);
        appendPairProgram0.TestStudentSubmission(list32, (int) 'a');
        java.lang.Class<?> wildcardClass35 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0]");
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0650");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        List list14 = AppendPairProgram.listgen(intArray11);
        List list15 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list15, (int) (byte) -1);
        int[] intArray18 = new int[] {};
        List list19 = AppendPairProgram.listgen(intArray18);
        List list20 = AppendPairProgram.listgen(intArray18);
        List list21 = AppendPairProgram.listgen(intArray18);
        appendPairProgram0.TestStudentSubmission(list21, (int) (short) 10);
        int[] intArray25 = new int[] { (byte) 10 };
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        List list31 = AppendPairProgram.listgen(intArray25);
        List list32 = AppendPairProgram.listgen(intArray25);
        List list33 = AppendPairProgram.listgen(intArray25);
        List list34 = AppendPairProgram.listgen(intArray25);
        List list35 = AppendPairProgram.listgen(intArray25);
        List list36 = AppendPairProgram.listgen(intArray25);
        List list37 = AppendPairProgram.listgen(intArray25);
        List list38 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list38, (int) ' ');
        java.lang.Class<?> wildcardClass41 = list38.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[10]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0651");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        List list7 = AppendPairProgram.listgen(intArray1);
        List list8 = AppendPairProgram.listgen(intArray1);
        List list9 = AppendPairProgram.listgen(intArray1);
        List list10 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list10, (int) (byte) 10);
        int[] intArray14 = new int[] { 0 };
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (short) 0);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list23, 0);
        int[] intArray27 = new int[] { 0 };
        List list28 = AppendPairProgram.listgen(intArray27);
        List list29 = AppendPairProgram.listgen(intArray27);
        List list30 = AppendPairProgram.listgen(intArray27);
        List list31 = AppendPairProgram.listgen(intArray27);
        List list32 = AppendPairProgram.listgen(intArray27);
        List list33 = AppendPairProgram.listgen(intArray27);
        appendPairProgram0.TestStudentSubmission(list33, (int) (short) 0);
        java.lang.Class<?> wildcardClass36 = list33.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0]");
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0652");
        int[] intArray0 = new int[] {};
        List list1 = AppendPairProgram.listgen(intArray0);
        List list2 = AppendPairProgram.listgen(intArray0);
        List list3 = AppendPairProgram.listgen(intArray0);
        List list4 = AppendPairProgram.listgen(intArray0);
        List list5 = AppendPairProgram.listgen(intArray0);
        List list6 = AppendPairProgram.listgen(intArray0);
        List list7 = AppendPairProgram.listgen(intArray0);
        List list8 = AppendPairProgram.listgen(intArray0);
        List list9 = AppendPairProgram.listgen(intArray0);
        List list10 = AppendPairProgram.listgen(intArray0);
        List list11 = AppendPairProgram.listgen(intArray0);
        List list12 = AppendPairProgram.listgen(intArray0);
        List list13 = AppendPairProgram.listgen(intArray0);
        List list14 = AppendPairProgram.listgen(intArray0);
        List list15 = AppendPairProgram.listgen(intArray0);
        List list16 = AppendPairProgram.listgen(intArray0);
        List list17 = AppendPairProgram.listgen(intArray0);
        List list18 = AppendPairProgram.listgen(intArray0);
        java.lang.Class<?> wildcardClass19 = intArray0.getClass();
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(list1);
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0653");
        int[] intArray1 = new int[] { (byte) 10 };
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        List list7 = AppendPairProgram.listgen(intArray1);
        List list8 = AppendPairProgram.listgen(intArray1);
        List list9 = AppendPairProgram.listgen(intArray1);
        List list10 = AppendPairProgram.listgen(intArray1);
        List list11 = AppendPairProgram.listgen(intArray1);
        List list12 = AppendPairProgram.listgen(intArray1);
        List list13 = AppendPairProgram.listgen(intArray1);
        List list14 = AppendPairProgram.listgen(intArray1);
        List list15 = AppendPairProgram.listgen(intArray1);
        List list16 = AppendPairProgram.listgen(intArray1);
        List list17 = AppendPairProgram.listgen(intArray1);
        List list18 = AppendPairProgram.listgen(intArray1);
        java.lang.Class<?> wildcardClass19 = list18.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[10]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0654");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, (int) (short) -1);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list19, (int) '4');
        List list22 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list22, 1);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
    }

    @Test
    public void test0655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0655");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, (int) '4');
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list26, (int) (byte) 1);
        int[] intArray30 = new int[] { (byte) 10 };
        List list31 = AppendPairProgram.listgen(intArray30);
        List list32 = AppendPairProgram.listgen(intArray30);
        List list33 = AppendPairProgram.listgen(intArray30);
        List list34 = AppendPairProgram.listgen(intArray30);
        List list35 = AppendPairProgram.listgen(intArray30);
        List list36 = AppendPairProgram.listgen(intArray30);
        List list37 = AppendPairProgram.listgen(intArray30);
        List list38 = AppendPairProgram.listgen(intArray30);
        List list39 = AppendPairProgram.listgen(intArray30);
        List list40 = AppendPairProgram.listgen(intArray30);
        List list41 = AppendPairProgram.listgen(intArray30);
        List list42 = AppendPairProgram.listgen(intArray30);
        appendPairProgram0.TestStudentSubmission(list42, (int) '#');
        java.lang.Class<?> wildcardClass45 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[10]");
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0656");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray15 = new int[] {};
        List list16 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 100);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        List list24 = AppendPairProgram.listgen(intArray19);
        List list25 = AppendPairProgram.listgen(intArray19);
        List list26 = AppendPairProgram.listgen(intArray19);
        List list27 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list27, (int) (short) -1);
        int[] intArray31 = new int[] { (byte) 10 };
        List list32 = AppendPairProgram.listgen(intArray31);
        List list33 = AppendPairProgram.listgen(intArray31);
        List list34 = AppendPairProgram.listgen(intArray31);
        List list35 = AppendPairProgram.listgen(intArray31);
        List list36 = AppendPairProgram.listgen(intArray31);
        List list37 = AppendPairProgram.listgen(intArray31);
        List list38 = AppendPairProgram.listgen(intArray31);
        List list39 = AppendPairProgram.listgen(intArray31);
        appendPairProgram0.TestStudentSubmission(list39, (int) (byte) 10);
        java.lang.Class<?> wildcardClass42 = list39.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10]");
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0657");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        List list12 = AppendPairProgram.listgen(intArray9);
        List list13 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        java.lang.Class<?> wildcardClass16 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0658");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray16 = new int[] { (byte) 10 };
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list22, (int) (byte) 0);
        int[] intArray26 = new int[] { 0 };
        List list27 = AppendPairProgram.listgen(intArray26);
        appendPairProgram0.TestStudentSubmission(list27, 0);
        java.lang.Class<?> wildcardClass30 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0]");
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0659");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, (int) '4');
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list26, (int) (byte) 1);
        int[] intArray30 = new int[] { (byte) 10 };
        List list31 = AppendPairProgram.listgen(intArray30);
        List list32 = AppendPairProgram.listgen(intArray30);
        List list33 = AppendPairProgram.listgen(intArray30);
        List list34 = AppendPairProgram.listgen(intArray30);
        List list35 = AppendPairProgram.listgen(intArray30);
        List list36 = AppendPairProgram.listgen(intArray30);
        List list37 = AppendPairProgram.listgen(intArray30);
        List list38 = AppendPairProgram.listgen(intArray30);
        List list39 = AppendPairProgram.listgen(intArray30);
        List list40 = AppendPairProgram.listgen(intArray30);
        List list41 = AppendPairProgram.listgen(intArray30);
        List list42 = AppendPairProgram.listgen(intArray30);
        appendPairProgram0.TestStudentSubmission(list42, (int) '#');
        java.lang.Class<?> wildcardClass45 = list42.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[10]");
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0660");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) 0);
        int[] intArray15 = new int[] { 0 };
        List list16 = AppendPairProgram.listgen(intArray15);
        List list17 = AppendPairProgram.listgen(intArray15);
        List list18 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list18, (int) (byte) 10);
        java.lang.Class<?> wildcardClass21 = list18.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0661");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray16 = new int[] { (byte) 10 };
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list22, (int) (byte) 0);
        int[] intArray25 = new int[] {};
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list30, 0);
        int[] intArray33 = new int[] {};
        List list34 = AppendPairProgram.listgen(intArray33);
        List list35 = AppendPairProgram.listgen(intArray33);
        List list36 = AppendPairProgram.listgen(intArray33);
        appendPairProgram0.TestStudentSubmission(list36, (int) (byte) 1);
        List list39 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list39, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]");
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
    }

    @Test
    public void test0662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0662");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, 1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        List list12 = AppendPairProgram.listgen(intArray9);
        List list13 = AppendPairProgram.listgen(intArray9);
        List list14 = AppendPairProgram.listgen(intArray9);
        List list15 = AppendPairProgram.listgen(intArray9);
        List list16 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 0);
        List list19 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list19, (int) 'a');
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
    }

    @Test
    public void test0663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0663");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list24, (int) (short) 0);
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list29, 100);
        int[] intArray33 = new int[] { (byte) 10 };
        List list34 = AppendPairProgram.listgen(intArray33);
        List list35 = AppendPairProgram.listgen(intArray33);
        appendPairProgram0.TestStudentSubmission(list35, 100);
        int[] intArray38 = new int[] {};
        List list39 = AppendPairProgram.listgen(intArray38);
        appendPairProgram0.TestStudentSubmission(list39, (int) (byte) -1);
        java.lang.Class<?> wildcardClass42 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10]");
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[]");
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0664");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) -1);
        int[] intArray14 = new int[] {};
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 10);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list23, (int) (byte) 0);
        int[] intArray26 = new int[] {};
        List list27 = AppendPairProgram.listgen(intArray26);
        List list28 = AppendPairProgram.listgen(intArray26);
        List list29 = AppendPairProgram.listgen(intArray26);
        List list30 = AppendPairProgram.listgen(intArray26);
        List list31 = AppendPairProgram.listgen(intArray26);
        List list32 = AppendPairProgram.listgen(intArray26);
        appendPairProgram0.TestStudentSubmission(list32, 100);
        int[] intArray36 = new int[] { (byte) 10 };
        List list37 = AppendPairProgram.listgen(intArray36);
        List list38 = AppendPairProgram.listgen(intArray36);
        List list39 = AppendPairProgram.listgen(intArray36);
        List list40 = AppendPairProgram.listgen(intArray36);
        List list41 = AppendPairProgram.listgen(intArray36);
        List list42 = AppendPairProgram.listgen(intArray36);
        List list43 = AppendPairProgram.listgen(intArray36);
        appendPairProgram0.TestStudentSubmission(list43, 100);
        int[] intArray46 = new int[] {};
        List list47 = AppendPairProgram.listgen(intArray46);
        List list48 = AppendPairProgram.listgen(intArray46);
        List list49 = AppendPairProgram.listgen(intArray46);
        List list50 = AppendPairProgram.listgen(intArray46);
        List list51 = AppendPairProgram.listgen(intArray46);
        appendPairProgram0.TestStudentSubmission(list51, 100);
        int[] intArray54 = new int[] {};
        List list55 = AppendPairProgram.listgen(intArray54);
        List list56 = AppendPairProgram.listgen(intArray54);
        List list57 = AppendPairProgram.listgen(intArray54);
        appendPairProgram0.TestStudentSubmission(list57, 100);
        List list60 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list60, (int) 'a');
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[10]");
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[]");
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
    }

    @Test
    public void test0665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0665");
        int[] intArray5 = new int[] { '4', 10, (byte) 1, (byte) 100, (byte) 10 };
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        java.lang.Class<?> wildcardClass9 = list8.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[52, 10, 1, 100, 10]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0666");
        int[] intArray1 = new int[] { 0 };
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        java.lang.Class<?> wildcardClass6 = list5.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[0]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0667");
        int[] intArray6 = new int[] { 0, (short) 10, (short) -1, '#', (byte) 100, 1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        List list25 = AppendPairProgram.listgen(intArray6);
        List list26 = AppendPairProgram.listgen(intArray6);
        List list27 = AppendPairProgram.listgen(intArray6);
        List list28 = AppendPairProgram.listgen(intArray6);
        List list29 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass30 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 10, -1, 35, 100, 1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0668");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        List list12 = AppendPairProgram.listgen(intArray9);
        List list13 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        List list27 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list27, 100);
        java.lang.Class<?> wildcardClass30 = list27.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0669");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, (int) '4');
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list26, (int) (byte) 1);
        int[] intArray29 = new int[] {};
        List list30 = AppendPairProgram.listgen(intArray29);
        List list31 = AppendPairProgram.listgen(intArray29);
        List list32 = AppendPairProgram.listgen(intArray29);
        List list33 = AppendPairProgram.listgen(intArray29);
        List list34 = AppendPairProgram.listgen(intArray29);
        List list35 = AppendPairProgram.listgen(intArray29);
        List list36 = AppendPairProgram.listgen(intArray29);
        List list37 = AppendPairProgram.listgen(intArray29);
        List list38 = AppendPairProgram.listgen(intArray29);
        List list39 = AppendPairProgram.listgen(intArray29);
        appendPairProgram0.TestStudentSubmission(list39, (-1));
        int[] intArray43 = new int[] { 0 };
        List list44 = AppendPairProgram.listgen(intArray43);
        List list45 = AppendPairProgram.listgen(intArray43);
        List list46 = AppendPairProgram.listgen(intArray43);
        appendPairProgram0.TestStudentSubmission(list46, (int) ' ');
        java.lang.Class<?> wildcardClass49 = list46.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[]");
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0]");
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0670");
        int[] intArray0 = new int[] {};
        List list1 = AppendPairProgram.listgen(intArray0);
        List list2 = AppendPairProgram.listgen(intArray0);
        List list3 = AppendPairProgram.listgen(intArray0);
        List list4 = AppendPairProgram.listgen(intArray0);
        List list5 = AppendPairProgram.listgen(intArray0);
        List list6 = AppendPairProgram.listgen(intArray0);
        List list7 = AppendPairProgram.listgen(intArray0);
        List list8 = AppendPairProgram.listgen(intArray0);
        List list9 = AppendPairProgram.listgen(intArray0);
        List list10 = AppendPairProgram.listgen(intArray0);
        List list11 = AppendPairProgram.listgen(intArray0);
        List list12 = AppendPairProgram.listgen(intArray0);
        List list13 = AppendPairProgram.listgen(intArray0);
        List list14 = AppendPairProgram.listgen(intArray0);
        List list15 = AppendPairProgram.listgen(intArray0);
        List list16 = AppendPairProgram.listgen(intArray0);
        List list17 = AppendPairProgram.listgen(intArray0);
        List list18 = AppendPairProgram.listgen(intArray0);
        java.lang.Class<?> wildcardClass19 = list18.getClass();
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(list1);
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0671");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        List list7 = AppendPairProgram.listgen(intArray1);
        List list8 = AppendPairProgram.listgen(intArray1);
        List list9 = AppendPairProgram.listgen(intArray1);
        List list10 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list10, (int) (byte) 10);
        int[] intArray14 = new int[] { 0 };
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (short) 0);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list23, 0);
        java.lang.Class<?> wildcardClass26 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0672");
        int[] intArray5 = new int[] { (-1), 100, (short) 0, (byte) 100, (short) 100 };
        List list6 = AppendPairProgram.listgen(intArray5);
        java.lang.Class<?> wildcardClass7 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 0, 100, 100]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0673");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list11, 0);
        int[] intArray15 = new int[] { (byte) 10 };
        List list16 = AppendPairProgram.listgen(intArray15);
        List list17 = AppendPairProgram.listgen(intArray15);
        List list18 = AppendPairProgram.listgen(intArray15);
        List list19 = AppendPairProgram.listgen(intArray15);
        List list20 = AppendPairProgram.listgen(intArray15);
        List list21 = AppendPairProgram.listgen(intArray15);
        List list22 = AppendPairProgram.listgen(intArray15);
        List list23 = AppendPairProgram.listgen(intArray15);
        List list24 = AppendPairProgram.listgen(intArray15);
        List list25 = AppendPairProgram.listgen(intArray15);
        List list26 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list26, (int) (byte) 100);
        int[] intArray30 = new int[] { 0 };
        List list31 = AppendPairProgram.listgen(intArray30);
        List list32 = AppendPairProgram.listgen(intArray30);
        List list33 = AppendPairProgram.listgen(intArray30);
        appendPairProgram0.TestStudentSubmission(list33, (int) (short) 10);
        java.lang.Class<?> wildcardClass36 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0]");
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0674");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray16 = new int[] { (byte) 10 };
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list18, (int) (byte) -1);
        int[] intArray21 = new int[] {};
        List list22 = AppendPairProgram.listgen(intArray21);
        List list23 = AppendPairProgram.listgen(intArray21);
        List list24 = AppendPairProgram.listgen(intArray21);
        List list25 = AppendPairProgram.listgen(intArray21);
        List list26 = AppendPairProgram.listgen(intArray21);
        List list27 = AppendPairProgram.listgen(intArray21);
        List list28 = AppendPairProgram.listgen(intArray21);
        List list29 = AppendPairProgram.listgen(intArray21);
        List list30 = AppendPairProgram.listgen(intArray21);
        appendPairProgram0.TestStudentSubmission(list30, (int) (short) -1);
        List list33 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list33, 100);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
    }

    @Test
    public void test0675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0675");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray16 = new int[] { (byte) 10 };
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list18, (int) (byte) -1);
        int[] intArray21 = new int[] {};
        List list22 = AppendPairProgram.listgen(intArray21);
        List list23 = AppendPairProgram.listgen(intArray21);
        List list24 = AppendPairProgram.listgen(intArray21);
        List list25 = AppendPairProgram.listgen(intArray21);
        List list26 = AppendPairProgram.listgen(intArray21);
        List list27 = AppendPairProgram.listgen(intArray21);
        List list28 = AppendPairProgram.listgen(intArray21);
        List list29 = AppendPairProgram.listgen(intArray21);
        List list30 = AppendPairProgram.listgen(intArray21);
        appendPairProgram0.TestStudentSubmission(list30, (int) (short) -1);
        int[] intArray33 = new int[] {};
        List list34 = AppendPairProgram.listgen(intArray33);
        List list35 = AppendPairProgram.listgen(intArray33);
        List list36 = AppendPairProgram.listgen(intArray33);
        List list37 = AppendPairProgram.listgen(intArray33);
        List list38 = AppendPairProgram.listgen(intArray33);
        List list39 = AppendPairProgram.listgen(intArray33);
        List list40 = AppendPairProgram.listgen(intArray33);
        List list41 = AppendPairProgram.listgen(intArray33);
        List list42 = AppendPairProgram.listgen(intArray33);
        List list43 = AppendPairProgram.listgen(intArray33);
        List list44 = AppendPairProgram.listgen(intArray33);
        List list45 = AppendPairProgram.listgen(intArray33);
        List list46 = AppendPairProgram.listgen(intArray33);
        List list47 = AppendPairProgram.listgen(intArray33);
        List list48 = AppendPairProgram.listgen(intArray33);
        List list49 = AppendPairProgram.listgen(intArray33);
        appendPairProgram0.TestStudentSubmission(list49, 0);
        java.lang.Class<?> wildcardClass52 = list49.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]");
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0676");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 10);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        List list14 = AppendPairProgram.listgen(intArray11);
        List list15 = AppendPairProgram.listgen(intArray11);
        List list16 = AppendPairProgram.listgen(intArray11);
        List list17 = AppendPairProgram.listgen(intArray11);
        List list18 = AppendPairProgram.listgen(intArray11);
        List list19 = AppendPairProgram.listgen(intArray11);
        List list20 = AppendPairProgram.listgen(intArray11);
        List list21 = AppendPairProgram.listgen(intArray11);
        List list22 = AppendPairProgram.listgen(intArray11);
        List list23 = AppendPairProgram.listgen(intArray11);
        List list24 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list24, (int) (byte) 0);
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        List list30 = AppendPairProgram.listgen(intArray28);
        List list31 = AppendPairProgram.listgen(intArray28);
        List list32 = AppendPairProgram.listgen(intArray28);
        List list33 = AppendPairProgram.listgen(intArray28);
        List list34 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list34, 1);
        int[] intArray38 = new int[] { (byte) 10 };
        List list39 = AppendPairProgram.listgen(intArray38);
        List list40 = AppendPairProgram.listgen(intArray38);
        List list41 = AppendPairProgram.listgen(intArray38);
        List list42 = AppendPairProgram.listgen(intArray38);
        List list43 = AppendPairProgram.listgen(intArray38);
        List list44 = AppendPairProgram.listgen(intArray38);
        List list45 = AppendPairProgram.listgen(intArray38);
        List list46 = AppendPairProgram.listgen(intArray38);
        List list47 = AppendPairProgram.listgen(intArray38);
        appendPairProgram0.TestStudentSubmission(list47, (int) (byte) 100);
        int[] intArray50 = new int[] {};
        List list51 = AppendPairProgram.listgen(intArray50);
        List list52 = AppendPairProgram.listgen(intArray50);
        List list53 = AppendPairProgram.listgen(intArray50);
        List list54 = AppendPairProgram.listgen(intArray50);
        List list55 = AppendPairProgram.listgen(intArray50);
        List list56 = AppendPairProgram.listgen(intArray50);
        List list57 = AppendPairProgram.listgen(intArray50);
        List list58 = AppendPairProgram.listgen(intArray50);
        List list59 = AppendPairProgram.listgen(intArray50);
        appendPairProgram0.TestStudentSubmission(list59, (int) '4');
        List list62 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list62, 100);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[10]");
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[]");
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
    }

    @Test
    public void test0677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0677");
        int[] intArray6 = new int[] { (short) -1, '#', '4', (short) -1, (short) 100, (byte) -1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass23 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 35, 52, -1, 100, -1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0678");
        int[] intArray6 = new int[] { (short) 0, (byte) 0, (byte) 1, 0, (-1), (byte) 100 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass17 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0, 1, 0, -1, 100]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0679");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray16 = new int[] { (byte) 10 };
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list22, (int) (byte) 0);
        int[] intArray25 = new int[] {};
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list30, 0);
        int[] intArray33 = new int[] {};
        List list34 = AppendPairProgram.listgen(intArray33);
        List list35 = AppendPairProgram.listgen(intArray33);
        List list36 = AppendPairProgram.listgen(intArray33);
        appendPairProgram0.TestStudentSubmission(list36, (int) (byte) 1);
        int[] intArray39 = new int[] {};
        List list40 = AppendPairProgram.listgen(intArray39);
        List list41 = AppendPairProgram.listgen(intArray39);
        List list42 = AppendPairProgram.listgen(intArray39);
        List list43 = AppendPairProgram.listgen(intArray39);
        List list44 = AppendPairProgram.listgen(intArray39);
        List list45 = AppendPairProgram.listgen(intArray39);
        List list46 = AppendPairProgram.listgen(intArray39);
        List list47 = AppendPairProgram.listgen(intArray39);
        List list48 = AppendPairProgram.listgen(intArray39);
        List list49 = AppendPairProgram.listgen(intArray39);
        List list50 = AppendPairProgram.listgen(intArray39);
        List list51 = AppendPairProgram.listgen(intArray39);
        List list52 = AppendPairProgram.listgen(intArray39);
        List list53 = AppendPairProgram.listgen(intArray39);
        List list54 = AppendPairProgram.listgen(intArray39);
        List list55 = AppendPairProgram.listgen(intArray39);
        appendPairProgram0.TestStudentSubmission(list55, (int) '#');
        java.lang.Class<?> wildcardClass58 = list55.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]");
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]");
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0680");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray16 = new int[] { (byte) 10 };
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list22, (int) (byte) 0);
        int[] intArray25 = new int[] {};
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list30, 0);
        int[] intArray33 = new int[] {};
        List list34 = AppendPairProgram.listgen(intArray33);
        List list35 = AppendPairProgram.listgen(intArray33);
        List list36 = AppendPairProgram.listgen(intArray33);
        appendPairProgram0.TestStudentSubmission(list36, (int) (byte) 1);
        int[] intArray39 = new int[] {};
        List list40 = AppendPairProgram.listgen(intArray39);
        List list41 = AppendPairProgram.listgen(intArray39);
        List list42 = AppendPairProgram.listgen(intArray39);
        List list43 = AppendPairProgram.listgen(intArray39);
        List list44 = AppendPairProgram.listgen(intArray39);
        List list45 = AppendPairProgram.listgen(intArray39);
        List list46 = AppendPairProgram.listgen(intArray39);
        List list47 = AppendPairProgram.listgen(intArray39);
        List list48 = AppendPairProgram.listgen(intArray39);
        List list49 = AppendPairProgram.listgen(intArray39);
        List list50 = AppendPairProgram.listgen(intArray39);
        List list51 = AppendPairProgram.listgen(intArray39);
        List list52 = AppendPairProgram.listgen(intArray39);
        List list53 = AppendPairProgram.listgen(intArray39);
        List list54 = AppendPairProgram.listgen(intArray39);
        List list55 = AppendPairProgram.listgen(intArray39);
        appendPairProgram0.TestStudentSubmission(list55, (int) '#');
        List list58 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list58, (int) ' ');
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]");
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]");
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
    }

    @Test
    public void test0681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0681");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, 1);
        int[] intArray17 = new int[] { (byte) 10 };
        List list18 = AppendPairProgram.listgen(intArray17);
        List list19 = AppendPairProgram.listgen(intArray17);
        List list20 = AppendPairProgram.listgen(intArray17);
        List list21 = AppendPairProgram.listgen(intArray17);
        List list22 = AppendPairProgram.listgen(intArray17);
        List list23 = AppendPairProgram.listgen(intArray17);
        List list24 = AppendPairProgram.listgen(intArray17);
        List list25 = AppendPairProgram.listgen(intArray17);
        appendPairProgram0.TestStudentSubmission(list25, (int) (short) 0);
        int[] intArray29 = new int[] { (byte) 10 };
        List list30 = AppendPairProgram.listgen(intArray29);
        List list31 = AppendPairProgram.listgen(intArray29);
        appendPairProgram0.TestStudentSubmission(list31, (-1));
        int[] intArray35 = new int[] { (byte) 10 };
        List list36 = AppendPairProgram.listgen(intArray35);
        List list37 = AppendPairProgram.listgen(intArray35);
        List list38 = AppendPairProgram.listgen(intArray35);
        List list39 = AppendPairProgram.listgen(intArray35);
        List list40 = AppendPairProgram.listgen(intArray35);
        List list41 = AppendPairProgram.listgen(intArray35);
        List list42 = AppendPairProgram.listgen(intArray35);
        List list43 = AppendPairProgram.listgen(intArray35);
        appendPairProgram0.TestStudentSubmission(list43, (int) (short) -1);
        int[] intArray46 = new int[] {};
        List list47 = AppendPairProgram.listgen(intArray46);
        List list48 = AppendPairProgram.listgen(intArray46);
        List list49 = AppendPairProgram.listgen(intArray46);
        List list50 = AppendPairProgram.listgen(intArray46);
        List list51 = AppendPairProgram.listgen(intArray46);
        List list52 = AppendPairProgram.listgen(intArray46);
        List list53 = AppendPairProgram.listgen(intArray46);
        List list54 = AppendPairProgram.listgen(intArray46);
        List list55 = AppendPairProgram.listgen(intArray46);
        List list56 = AppendPairProgram.listgen(intArray46);
        List list57 = AppendPairProgram.listgen(intArray46);
        List list58 = AppendPairProgram.listgen(intArray46);
        List list59 = AppendPairProgram.listgen(intArray46);
        List list60 = AppendPairProgram.listgen(intArray46);
        List list61 = AppendPairProgram.listgen(intArray46);
        List list62 = AppendPairProgram.listgen(intArray46);
        appendPairProgram0.TestStudentSubmission(list62, (-1));
        int[] intArray66 = new int[] { (byte) 10 };
        List list67 = AppendPairProgram.listgen(intArray66);
        appendPairProgram0.TestStudentSubmission(list67, (-1));
        java.lang.Class<?> wildcardClass70 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10]");
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10]");
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[10]");
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(list61);
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[10]");
        org.junit.Assert.assertNotNull(list67);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0682");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 10);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        List list14 = AppendPairProgram.listgen(intArray11);
        List list15 = AppendPairProgram.listgen(intArray11);
        List list16 = AppendPairProgram.listgen(intArray11);
        List list17 = AppendPairProgram.listgen(intArray11);
        List list18 = AppendPairProgram.listgen(intArray11);
        List list19 = AppendPairProgram.listgen(intArray11);
        List list20 = AppendPairProgram.listgen(intArray11);
        List list21 = AppendPairProgram.listgen(intArray11);
        List list22 = AppendPairProgram.listgen(intArray11);
        List list23 = AppendPairProgram.listgen(intArray11);
        List list24 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list24, (int) (byte) 0);
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        List list30 = AppendPairProgram.listgen(intArray28);
        List list31 = AppendPairProgram.listgen(intArray28);
        List list32 = AppendPairProgram.listgen(intArray28);
        List list33 = AppendPairProgram.listgen(intArray28);
        List list34 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list34, 1);
        int[] intArray38 = new int[] { (byte) 10 };
        List list39 = AppendPairProgram.listgen(intArray38);
        List list40 = AppendPairProgram.listgen(intArray38);
        List list41 = AppendPairProgram.listgen(intArray38);
        List list42 = AppendPairProgram.listgen(intArray38);
        List list43 = AppendPairProgram.listgen(intArray38);
        List list44 = AppendPairProgram.listgen(intArray38);
        List list45 = AppendPairProgram.listgen(intArray38);
        List list46 = AppendPairProgram.listgen(intArray38);
        List list47 = AppendPairProgram.listgen(intArray38);
        appendPairProgram0.TestStudentSubmission(list47, (int) (byte) 100);
        int[] intArray50 = new int[] {};
        List list51 = AppendPairProgram.listgen(intArray50);
        List list52 = AppendPairProgram.listgen(intArray50);
        List list53 = AppendPairProgram.listgen(intArray50);
        List list54 = AppendPairProgram.listgen(intArray50);
        List list55 = AppendPairProgram.listgen(intArray50);
        List list56 = AppendPairProgram.listgen(intArray50);
        List list57 = AppendPairProgram.listgen(intArray50);
        List list58 = AppendPairProgram.listgen(intArray50);
        List list59 = AppendPairProgram.listgen(intArray50);
        appendPairProgram0.TestStudentSubmission(list59, (int) '4');
        List list62 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list62, 10);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[10]");
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[]");
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
    }

    @Test
    public void test0683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0683");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, (int) '4');
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list26, (int) (byte) 1);
        int[] intArray30 = new int[] { 0 };
        List list31 = AppendPairProgram.listgen(intArray30);
        List list32 = AppendPairProgram.listgen(intArray30);
        appendPairProgram0.TestStudentSubmission(list32, (int) 'a');
        int[] intArray35 = new int[] {};
        List list36 = AppendPairProgram.listgen(intArray35);
        List list37 = AppendPairProgram.listgen(intArray35);
        List list38 = AppendPairProgram.listgen(intArray35);
        List list39 = AppendPairProgram.listgen(intArray35);
        List list40 = AppendPairProgram.listgen(intArray35);
        List list41 = AppendPairProgram.listgen(intArray35);
        List list42 = AppendPairProgram.listgen(intArray35);
        List list43 = AppendPairProgram.listgen(intArray35);
        List list44 = AppendPairProgram.listgen(intArray35);
        appendPairProgram0.TestStudentSubmission(list44, (int) '#');
        int[] intArray47 = new int[] {};
        List list48 = AppendPairProgram.listgen(intArray47);
        List list49 = AppendPairProgram.listgen(intArray47);
        List list50 = AppendPairProgram.listgen(intArray47);
        List list51 = AppendPairProgram.listgen(intArray47);
        List list52 = AppendPairProgram.listgen(intArray47);
        List list53 = AppendPairProgram.listgen(intArray47);
        List list54 = AppendPairProgram.listgen(intArray47);
        List list55 = AppendPairProgram.listgen(intArray47);
        List list56 = AppendPairProgram.listgen(intArray47);
        List list57 = AppendPairProgram.listgen(intArray47);
        List list58 = AppendPairProgram.listgen(intArray47);
        List list59 = AppendPairProgram.listgen(intArray47);
        List list60 = AppendPairProgram.listgen(intArray47);
        List list61 = AppendPairProgram.listgen(intArray47);
        List list62 = AppendPairProgram.listgen(intArray47);
        List list63 = AppendPairProgram.listgen(intArray47);
        appendPairProgram0.TestStudentSubmission(list63, (int) (byte) 1);
        java.lang.Class<?> wildcardClass66 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0]");
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[]");
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[]");
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(list61);
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(list63);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test0684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0684");
        int[] intArray1 = new int[] { 0 };
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        java.lang.Class<?> wildcardClass7 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[0]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0685");
        int[] intArray6 = new int[] { (byte) 0, (short) -1, ' ', 'a', (byte) 100, (byte) 10 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass23 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, -1, 32, 97, 100, 10]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0686");
        int[] intArray6 = new int[] { (short) -1, '#', '4', (short) -1, (short) 100, (byte) -1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass22 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 35, 52, -1, 100, -1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0687");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray16 = new int[] { (byte) 10 };
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list22, (int) (byte) 0);
        int[] intArray25 = new int[] {};
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list30, 0);
        int[] intArray33 = new int[] {};
        List list34 = AppendPairProgram.listgen(intArray33);
        List list35 = AppendPairProgram.listgen(intArray33);
        List list36 = AppendPairProgram.listgen(intArray33);
        appendPairProgram0.TestStudentSubmission(list36, (int) (byte) 1);
        int[] intArray39 = new int[] {};
        List list40 = AppendPairProgram.listgen(intArray39);
        List list41 = AppendPairProgram.listgen(intArray39);
        List list42 = AppendPairProgram.listgen(intArray39);
        List list43 = AppendPairProgram.listgen(intArray39);
        List list44 = AppendPairProgram.listgen(intArray39);
        List list45 = AppendPairProgram.listgen(intArray39);
        List list46 = AppendPairProgram.listgen(intArray39);
        List list47 = AppendPairProgram.listgen(intArray39);
        List list48 = AppendPairProgram.listgen(intArray39);
        List list49 = AppendPairProgram.listgen(intArray39);
        List list50 = AppendPairProgram.listgen(intArray39);
        List list51 = AppendPairProgram.listgen(intArray39);
        List list52 = AppendPairProgram.listgen(intArray39);
        List list53 = AppendPairProgram.listgen(intArray39);
        List list54 = AppendPairProgram.listgen(intArray39);
        List list55 = AppendPairProgram.listgen(intArray39);
        appendPairProgram0.TestStudentSubmission(list55, (int) '#');
        java.lang.Class<?> wildcardClass58 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]");
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]");
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0688");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list9, (int) (short) 0);
        int[] intArray12 = new int[] {};
        List list13 = AppendPairProgram.listgen(intArray12);
        List list14 = AppendPairProgram.listgen(intArray12);
        List list15 = AppendPairProgram.listgen(intArray12);
        List list16 = AppendPairProgram.listgen(intArray12);
        List list17 = AppendPairProgram.listgen(intArray12);
        List list18 = AppendPairProgram.listgen(intArray12);
        List list19 = AppendPairProgram.listgen(intArray12);
        List list20 = AppendPairProgram.listgen(intArray12);
        List list21 = AppendPairProgram.listgen(intArray12);
        List list22 = AppendPairProgram.listgen(intArray12);
        List list23 = AppendPairProgram.listgen(intArray12);
        List list24 = AppendPairProgram.listgen(intArray12);
        appendPairProgram0.TestStudentSubmission(list24, (int) '#');
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        List list30 = AppendPairProgram.listgen(intArray28);
        List list31 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list31, (int) (byte) 0);
        java.lang.Class<?> wildcardClass34 = list31.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0689");
        int[] intArray4 = new int[] { 'a', (short) 10, (short) 100, (byte) 0 };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        List list7 = AppendPairProgram.listgen(intArray4);
        List list8 = AppendPairProgram.listgen(intArray4);
        List list9 = AppendPairProgram.listgen(intArray4);
        java.lang.Class<?> wildcardClass10 = list9.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[97, 10, 100, 0]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0690");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray15 = new int[] {};
        List list16 = AppendPairProgram.listgen(intArray15);
        List list17 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list17, (int) (short) 1);
        int[] intArray21 = new int[] { (byte) 10 };
        List list22 = AppendPairProgram.listgen(intArray21);
        List list23 = AppendPairProgram.listgen(intArray21);
        List list24 = AppendPairProgram.listgen(intArray21);
        List list25 = AppendPairProgram.listgen(intArray21);
        List list26 = AppendPairProgram.listgen(intArray21);
        List list27 = AppendPairProgram.listgen(intArray21);
        List list28 = AppendPairProgram.listgen(intArray21);
        List list29 = AppendPairProgram.listgen(intArray21);
        List list30 = AppendPairProgram.listgen(intArray21);
        List list31 = AppendPairProgram.listgen(intArray21);
        List list32 = AppendPairProgram.listgen(intArray21);
        List list33 = AppendPairProgram.listgen(intArray21);
        appendPairProgram0.TestStudentSubmission(list33, 10);
        java.lang.Class<?> wildcardClass36 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10]");
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0691");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray16 = new int[] { (byte) 10 };
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list22, (int) (byte) 0);
        int[] intArray25 = new int[] {};
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list30, 0);
        int[] intArray33 = new int[] {};
        List list34 = AppendPairProgram.listgen(intArray33);
        List list35 = AppendPairProgram.listgen(intArray33);
        List list36 = AppendPairProgram.listgen(intArray33);
        appendPairProgram0.TestStudentSubmission(list36, (int) (byte) 1);
        int[] intArray40 = new int[] { (byte) 10 };
        List list41 = AppendPairProgram.listgen(intArray40);
        List list42 = AppendPairProgram.listgen(intArray40);
        List list43 = AppendPairProgram.listgen(intArray40);
        List list44 = AppendPairProgram.listgen(intArray40);
        List list45 = AppendPairProgram.listgen(intArray40);
        List list46 = AppendPairProgram.listgen(intArray40);
        List list47 = AppendPairProgram.listgen(intArray40);
        List list48 = AppendPairProgram.listgen(intArray40);
        List list49 = AppendPairProgram.listgen(intArray40);
        List list50 = AppendPairProgram.listgen(intArray40);
        List list51 = AppendPairProgram.listgen(intArray40);
        List list52 = AppendPairProgram.listgen(intArray40);
        List list53 = AppendPairProgram.listgen(intArray40);
        List list54 = AppendPairProgram.listgen(intArray40);
        List list55 = AppendPairProgram.listgen(intArray40);
        appendPairProgram0.TestStudentSubmission(list55, (int) (byte) -1);
        java.lang.Class<?> wildcardClass58 = list55.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]");
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[10]");
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0692");
        int[] intArray3 = new int[] { 0, '#', (short) -1 };
        List list4 = AppendPairProgram.listgen(intArray3);
        List list5 = AppendPairProgram.listgen(intArray3);
        List list6 = AppendPairProgram.listgen(intArray3);
        List list7 = AppendPairProgram.listgen(intArray3);
        List list8 = AppendPairProgram.listgen(intArray3);
        List list9 = AppendPairProgram.listgen(intArray3);
        List list10 = AppendPairProgram.listgen(intArray3);
        List list11 = AppendPairProgram.listgen(intArray3);
        List list12 = AppendPairProgram.listgen(intArray3);
        List list13 = AppendPairProgram.listgen(intArray3);
        List list14 = AppendPairProgram.listgen(intArray3);
        List list15 = AppendPairProgram.listgen(intArray3);
        List list16 = AppendPairProgram.listgen(intArray3);
        List list17 = AppendPairProgram.listgen(intArray3);
        List list18 = AppendPairProgram.listgen(intArray3);
        List list19 = AppendPairProgram.listgen(intArray3);
        List list20 = AppendPairProgram.listgen(intArray3);
        List list21 = AppendPairProgram.listgen(intArray3);
        java.lang.Class<?> wildcardClass22 = list21.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[0, 35, -1]");
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0693");
        int[] intArray2 = new int[] { 10, (byte) 0 };
        List list3 = AppendPairProgram.listgen(intArray2);
        List list4 = AppendPairProgram.listgen(intArray2);
        List list5 = AppendPairProgram.listgen(intArray2);
        List list6 = AppendPairProgram.listgen(intArray2);
        List list7 = AppendPairProgram.listgen(intArray2);
        List list8 = AppendPairProgram.listgen(intArray2);
        List list9 = AppendPairProgram.listgen(intArray2);
        List list10 = AppendPairProgram.listgen(intArray2);
        List list11 = AppendPairProgram.listgen(intArray2);
        List list12 = AppendPairProgram.listgen(intArray2);
        List list13 = AppendPairProgram.listgen(intArray2);
        java.lang.Class<?> wildcardClass14 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[10, 0]");
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0694");
        int[] intArray0 = new int[] {};
        List list1 = AppendPairProgram.listgen(intArray0);
        List list2 = AppendPairProgram.listgen(intArray0);
        List list3 = AppendPairProgram.listgen(intArray0);
        List list4 = AppendPairProgram.listgen(intArray0);
        List list5 = AppendPairProgram.listgen(intArray0);
        List list6 = AppendPairProgram.listgen(intArray0);
        List list7 = AppendPairProgram.listgen(intArray0);
        List list8 = AppendPairProgram.listgen(intArray0);
        List list9 = AppendPairProgram.listgen(intArray0);
        List list10 = AppendPairProgram.listgen(intArray0);
        List list11 = AppendPairProgram.listgen(intArray0);
        List list12 = AppendPairProgram.listgen(intArray0);
        List list13 = AppendPairProgram.listgen(intArray0);
        List list14 = AppendPairProgram.listgen(intArray0);
        List list15 = AppendPairProgram.listgen(intArray0);
        List list16 = AppendPairProgram.listgen(intArray0);
        List list17 = AppendPairProgram.listgen(intArray0);
        List list18 = AppendPairProgram.listgen(intArray0);
        List list19 = AppendPairProgram.listgen(intArray0);
        List list20 = AppendPairProgram.listgen(intArray0);
        java.lang.Class<?> wildcardClass21 = intArray0.getClass();
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(list1);
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0695");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) -1);
        int[] intArray14 = new int[] {};
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 10);
        List list19 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list19, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
    }

    @Test
    public void test0696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0696");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        List list9 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list9, (int) (short) -1);
        int[] intArray13 = new int[] { (byte) 10 };
        List list14 = AppendPairProgram.listgen(intArray13);
        List list15 = AppendPairProgram.listgen(intArray13);
        List list16 = AppendPairProgram.listgen(intArray13);
        List list17 = AppendPairProgram.listgen(intArray13);
        List list18 = AppendPairProgram.listgen(intArray13);
        List list19 = AppendPairProgram.listgen(intArray13);
        List list20 = AppendPairProgram.listgen(intArray13);
        List list21 = AppendPairProgram.listgen(intArray13);
        List list22 = AppendPairProgram.listgen(intArray13);
        appendPairProgram0.TestStudentSubmission(list22, (int) '#');
        java.lang.Class<?> wildcardClass25 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10]");
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0697");
        int[] intArray1 = new int[] { (byte) 10 };
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        List list7 = AppendPairProgram.listgen(intArray1);
        List list8 = AppendPairProgram.listgen(intArray1);
        List list9 = AppendPairProgram.listgen(intArray1);
        List list10 = AppendPairProgram.listgen(intArray1);
        List list11 = AppendPairProgram.listgen(intArray1);
        List list12 = AppendPairProgram.listgen(intArray1);
        List list13 = AppendPairProgram.listgen(intArray1);
        List list14 = AppendPairProgram.listgen(intArray1);
        List list15 = AppendPairProgram.listgen(intArray1);
        List list16 = AppendPairProgram.listgen(intArray1);
        List list17 = AppendPairProgram.listgen(intArray1);
        List list18 = AppendPairProgram.listgen(intArray1);
        List list19 = AppendPairProgram.listgen(intArray1);
        List list20 = AppendPairProgram.listgen(intArray1);
        java.lang.Class<?> wildcardClass21 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[10]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0698");
        int[] intArray6 = new int[] { (short) 0, (byte) 0, (byte) 1, 0, (-1), (byte) 100 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass25 = list24.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0, 1, 0, -1, 100]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0699");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray15 = new int[] {};
        List list16 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list16, (int) (short) 100);
        List list19 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list19, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]");
        org.junit.Assert.assertNotNull(list16);
    }

    @Test
    public void test0700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0700");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, (int) '4');
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list26, (int) (byte) 1);
        int[] intArray30 = new int[] { 0 };
        List list31 = AppendPairProgram.listgen(intArray30);
        List list32 = AppendPairProgram.listgen(intArray30);
        appendPairProgram0.TestStudentSubmission(list32, (int) 'a');
        int[] intArray36 = new int[] { 0 };
        List list37 = AppendPairProgram.listgen(intArray36);
        List list38 = AppendPairProgram.listgen(intArray36);
        List list39 = AppendPairProgram.listgen(intArray36);
        appendPairProgram0.TestStudentSubmission(list39, (int) (short) 1);
        java.lang.Class<?> wildcardClass42 = list39.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0]");
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0]");
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0701");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        List list12 = AppendPairProgram.listgen(intArray9);
        List list13 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        List list27 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list27, 100);
        int[] intArray31 = new int[] { (byte) 10 };
        List list32 = AppendPairProgram.listgen(intArray31);
        List list33 = AppendPairProgram.listgen(intArray31);
        List list34 = AppendPairProgram.listgen(intArray31);
        List list35 = AppendPairProgram.listgen(intArray31);
        List list36 = AppendPairProgram.listgen(intArray31);
        appendPairProgram0.TestStudentSubmission(list36, (int) (byte) 100);
        int[] intArray40 = new int[] { (byte) 10 };
        List list41 = AppendPairProgram.listgen(intArray40);
        List list42 = AppendPairProgram.listgen(intArray40);
        List list43 = AppendPairProgram.listgen(intArray40);
        List list44 = AppendPairProgram.listgen(intArray40);
        List list45 = AppendPairProgram.listgen(intArray40);
        List list46 = AppendPairProgram.listgen(intArray40);
        List list47 = AppendPairProgram.listgen(intArray40);
        List list48 = AppendPairProgram.listgen(intArray40);
        List list49 = AppendPairProgram.listgen(intArray40);
        List list50 = AppendPairProgram.listgen(intArray40);
        List list51 = AppendPairProgram.listgen(intArray40);
        List list52 = AppendPairProgram.listgen(intArray40);
        appendPairProgram0.TestStudentSubmission(list52, (int) (short) 100);
        java.lang.Class<?> wildcardClass55 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10]");
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[10]");
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0702");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray15 = new int[] {};
        List list16 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 100);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        List list24 = AppendPairProgram.listgen(intArray19);
        List list25 = AppendPairProgram.listgen(intArray19);
        List list26 = AppendPairProgram.listgen(intArray19);
        List list27 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list27, (int) (short) -1);
        int[] intArray31 = new int[] { (byte) 10 };
        List list32 = AppendPairProgram.listgen(intArray31);
        List list33 = AppendPairProgram.listgen(intArray31);
        List list34 = AppendPairProgram.listgen(intArray31);
        List list35 = AppendPairProgram.listgen(intArray31);
        List list36 = AppendPairProgram.listgen(intArray31);
        List list37 = AppendPairProgram.listgen(intArray31);
        List list38 = AppendPairProgram.listgen(intArray31);
        List list39 = AppendPairProgram.listgen(intArray31);
        List list40 = AppendPairProgram.listgen(intArray31);
        appendPairProgram0.TestStudentSubmission(list40, (int) (short) 100);
        java.lang.Class<?> wildcardClass43 = list40.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10]");
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0703");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        List list7 = AppendPairProgram.listgen(intArray1);
        List list8 = AppendPairProgram.listgen(intArray1);
        List list9 = AppendPairProgram.listgen(intArray1);
        List list10 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list10, (int) (byte) 10);
        int[] intArray14 = new int[] { 0 };
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (short) 0);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list23, 0);
        int[] intArray26 = new int[] {};
        List list27 = AppendPairProgram.listgen(intArray26);
        List list28 = AppendPairProgram.listgen(intArray26);
        List list29 = AppendPairProgram.listgen(intArray26);
        List list30 = AppendPairProgram.listgen(intArray26);
        List list31 = AppendPairProgram.listgen(intArray26);
        List list32 = AppendPairProgram.listgen(intArray26);
        List list33 = AppendPairProgram.listgen(intArray26);
        appendPairProgram0.TestStudentSubmission(list33, 0);
        java.lang.Class<?> wildcardClass36 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0704");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        List list9 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list9, (int) (short) -1);
        int[] intArray13 = new int[] { (byte) 10 };
        List list14 = AppendPairProgram.listgen(intArray13);
        List list15 = AppendPairProgram.listgen(intArray13);
        List list16 = AppendPairProgram.listgen(intArray13);
        List list17 = AppendPairProgram.listgen(intArray13);
        List list18 = AppendPairProgram.listgen(intArray13);
        List list19 = AppendPairProgram.listgen(intArray13);
        List list20 = AppendPairProgram.listgen(intArray13);
        List list21 = AppendPairProgram.listgen(intArray13);
        List list22 = AppendPairProgram.listgen(intArray13);
        appendPairProgram0.TestStudentSubmission(list22, (int) '#');
        java.lang.Class<?> wildcardClass25 = list22.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10]");
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0705");
        int[] intArray1 = new int[] { 0 };
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        List list7 = AppendPairProgram.listgen(intArray1);
        java.lang.Class<?> wildcardClass8 = list7.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[0]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0706");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) -1);
        int[] intArray14 = new int[] {};
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 10);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list23, (int) (byte) 0);
        int[] intArray26 = new int[] {};
        List list27 = AppendPairProgram.listgen(intArray26);
        List list28 = AppendPairProgram.listgen(intArray26);
        List list29 = AppendPairProgram.listgen(intArray26);
        List list30 = AppendPairProgram.listgen(intArray26);
        List list31 = AppendPairProgram.listgen(intArray26);
        appendPairProgram0.TestStudentSubmission(list31, (-1));
        java.lang.Class<?> wildcardClass34 = list31.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0707");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 10);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        List list14 = AppendPairProgram.listgen(intArray11);
        List list15 = AppendPairProgram.listgen(intArray11);
        List list16 = AppendPairProgram.listgen(intArray11);
        List list17 = AppendPairProgram.listgen(intArray11);
        List list18 = AppendPairProgram.listgen(intArray11);
        List list19 = AppendPairProgram.listgen(intArray11);
        List list20 = AppendPairProgram.listgen(intArray11);
        List list21 = AppendPairProgram.listgen(intArray11);
        List list22 = AppendPairProgram.listgen(intArray11);
        List list23 = AppendPairProgram.listgen(intArray11);
        List list24 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list24, (int) (byte) 0);
        List list27 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list27, (int) ' ');
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
    }

    @Test
    public void test0708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0708");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) -1);
        int[] intArray14 = new int[] {};
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 10);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list22, (int) '#');
        java.lang.Class<?> wildcardClass25 = list22.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0709");
        int[] intArray6 = new int[] { (short) -1, '#', '4', (short) -1, (short) 100, (byte) -1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        List list25 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass26 = list25.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 35, 52, -1, 100, -1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0710");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 10);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        List list14 = AppendPairProgram.listgen(intArray11);
        List list15 = AppendPairProgram.listgen(intArray11);
        List list16 = AppendPairProgram.listgen(intArray11);
        List list17 = AppendPairProgram.listgen(intArray11);
        List list18 = AppendPairProgram.listgen(intArray11);
        List list19 = AppendPairProgram.listgen(intArray11);
        List list20 = AppendPairProgram.listgen(intArray11);
        List list21 = AppendPairProgram.listgen(intArray11);
        List list22 = AppendPairProgram.listgen(intArray11);
        List list23 = AppendPairProgram.listgen(intArray11);
        List list24 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list24, (int) (byte) 0);
        int[] intArray27 = new int[] {};
        List list28 = AppendPairProgram.listgen(intArray27);
        appendPairProgram0.TestStudentSubmission(list28, 0);
        int[] intArray31 = new int[] {};
        List list32 = AppendPairProgram.listgen(intArray31);
        List list33 = AppendPairProgram.listgen(intArray31);
        List list34 = AppendPairProgram.listgen(intArray31);
        List list35 = AppendPairProgram.listgen(intArray31);
        List list36 = AppendPairProgram.listgen(intArray31);
        List list37 = AppendPairProgram.listgen(intArray31);
        List list38 = AppendPairProgram.listgen(intArray31);
        List list39 = AppendPairProgram.listgen(intArray31);
        List list40 = AppendPairProgram.listgen(intArray31);
        List list41 = AppendPairProgram.listgen(intArray31);
        List list42 = AppendPairProgram.listgen(intArray31);
        List list43 = AppendPairProgram.listgen(intArray31);
        appendPairProgram0.TestStudentSubmission(list43, (-1));
        java.lang.Class<?> wildcardClass46 = list43.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[]");
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]");
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0711");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray16 = new int[] { (byte) 10 };
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list18, (int) (byte) -1);
        int[] intArray21 = new int[] {};
        List list22 = AppendPairProgram.listgen(intArray21);
        List list23 = AppendPairProgram.listgen(intArray21);
        List list24 = AppendPairProgram.listgen(intArray21);
        List list25 = AppendPairProgram.listgen(intArray21);
        List list26 = AppendPairProgram.listgen(intArray21);
        List list27 = AppendPairProgram.listgen(intArray21);
        List list28 = AppendPairProgram.listgen(intArray21);
        List list29 = AppendPairProgram.listgen(intArray21);
        List list30 = AppendPairProgram.listgen(intArray21);
        List list31 = AppendPairProgram.listgen(intArray21);
        List list32 = AppendPairProgram.listgen(intArray21);
        List list33 = AppendPairProgram.listgen(intArray21);
        List list34 = AppendPairProgram.listgen(intArray21);
        List list35 = AppendPairProgram.listgen(intArray21);
        List list36 = AppendPairProgram.listgen(intArray21);
        List list37 = AppendPairProgram.listgen(intArray21);
        appendPairProgram0.TestStudentSubmission(list37, (int) 'a');
        List list40 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list40, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
    }

    @Test
    public void test0712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0712");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray16 = new int[] { (byte) 10 };
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list18, (int) (byte) -1);
        int[] intArray21 = new int[] {};
        List list22 = AppendPairProgram.listgen(intArray21);
        List list23 = AppendPairProgram.listgen(intArray21);
        List list24 = AppendPairProgram.listgen(intArray21);
        List list25 = AppendPairProgram.listgen(intArray21);
        List list26 = AppendPairProgram.listgen(intArray21);
        List list27 = AppendPairProgram.listgen(intArray21);
        List list28 = AppendPairProgram.listgen(intArray21);
        List list29 = AppendPairProgram.listgen(intArray21);
        List list30 = AppendPairProgram.listgen(intArray21);
        List list31 = AppendPairProgram.listgen(intArray21);
        List list32 = AppendPairProgram.listgen(intArray21);
        List list33 = AppendPairProgram.listgen(intArray21);
        List list34 = AppendPairProgram.listgen(intArray21);
        List list35 = AppendPairProgram.listgen(intArray21);
        List list36 = AppendPairProgram.listgen(intArray21);
        appendPairProgram0.TestStudentSubmission(list36, (int) (short) 1);
        int[] intArray39 = new int[] {};
        List list40 = AppendPairProgram.listgen(intArray39);
        List list41 = AppendPairProgram.listgen(intArray39);
        List list42 = AppendPairProgram.listgen(intArray39);
        List list43 = AppendPairProgram.listgen(intArray39);
        appendPairProgram0.TestStudentSubmission(list43, (int) (short) 100);
        java.lang.Class<?> wildcardClass46 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]");
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0713");
        int[] intArray6 = new int[] { 0, (short) 10, (short) -1, '#', (byte) 100, 1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        List list25 = AppendPairProgram.listgen(intArray6);
        List list26 = AppendPairProgram.listgen(intArray6);
        List list27 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass28 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 10, -1, 35, 100, 1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0714");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list24, (int) (short) 0);
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list29, 100);
        int[] intArray33 = new int[] { (byte) 10 };
        List list34 = AppendPairProgram.listgen(intArray33);
        List list35 = AppendPairProgram.listgen(intArray33);
        appendPairProgram0.TestStudentSubmission(list35, 100);
        int[] intArray39 = new int[] { (byte) 10 };
        List list40 = AppendPairProgram.listgen(intArray39);
        List list41 = AppendPairProgram.listgen(intArray39);
        appendPairProgram0.TestStudentSubmission(list41, (int) (byte) 0);
        List list44 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list44, (-1));
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10]");
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10]");
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
    }

    @Test
    public void test0715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0715");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        List list7 = AppendPairProgram.listgen(intArray1);
        List list8 = AppendPairProgram.listgen(intArray1);
        List list9 = AppendPairProgram.listgen(intArray1);
        List list10 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list10, (int) (byte) 10);
        int[] intArray14 = new int[] { 0 };
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) ' ');
        java.lang.Class<?> wildcardClass19 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0716");
        int[] intArray2 = new int[] { 10, (byte) 0 };
        List list3 = AppendPairProgram.listgen(intArray2);
        List list4 = AppendPairProgram.listgen(intArray2);
        List list5 = AppendPairProgram.listgen(intArray2);
        List list6 = AppendPairProgram.listgen(intArray2);
        List list7 = AppendPairProgram.listgen(intArray2);
        List list8 = AppendPairProgram.listgen(intArray2);
        List list9 = AppendPairProgram.listgen(intArray2);
        java.lang.Class<?> wildcardClass10 = list9.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[10, 0]");
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0717");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, 0);
        List list9 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list9, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
    }

    @Test
    public void test0718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0718");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 10);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        List list14 = AppendPairProgram.listgen(intArray11);
        List list15 = AppendPairProgram.listgen(intArray11);
        List list16 = AppendPairProgram.listgen(intArray11);
        List list17 = AppendPairProgram.listgen(intArray11);
        List list18 = AppendPairProgram.listgen(intArray11);
        List list19 = AppendPairProgram.listgen(intArray11);
        List list20 = AppendPairProgram.listgen(intArray11);
        List list21 = AppendPairProgram.listgen(intArray11);
        List list22 = AppendPairProgram.listgen(intArray11);
        List list23 = AppendPairProgram.listgen(intArray11);
        List list24 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list24, (int) (byte) 0);
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        List list30 = AppendPairProgram.listgen(intArray28);
        List list31 = AppendPairProgram.listgen(intArray28);
        List list32 = AppendPairProgram.listgen(intArray28);
        List list33 = AppendPairProgram.listgen(intArray28);
        List list34 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list34, 1);
        int[] intArray38 = new int[] { (byte) 10 };
        List list39 = AppendPairProgram.listgen(intArray38);
        List list40 = AppendPairProgram.listgen(intArray38);
        List list41 = AppendPairProgram.listgen(intArray38);
        List list42 = AppendPairProgram.listgen(intArray38);
        List list43 = AppendPairProgram.listgen(intArray38);
        List list44 = AppendPairProgram.listgen(intArray38);
        List list45 = AppendPairProgram.listgen(intArray38);
        List list46 = AppendPairProgram.listgen(intArray38);
        List list47 = AppendPairProgram.listgen(intArray38);
        appendPairProgram0.TestStudentSubmission(list47, (int) (byte) 100);
        int[] intArray50 = new int[] {};
        List list51 = AppendPairProgram.listgen(intArray50);
        List list52 = AppendPairProgram.listgen(intArray50);
        List list53 = AppendPairProgram.listgen(intArray50);
        List list54 = AppendPairProgram.listgen(intArray50);
        List list55 = AppendPairProgram.listgen(intArray50);
        List list56 = AppendPairProgram.listgen(intArray50);
        List list57 = AppendPairProgram.listgen(intArray50);
        List list58 = AppendPairProgram.listgen(intArray50);
        List list59 = AppendPairProgram.listgen(intArray50);
        appendPairProgram0.TestStudentSubmission(list59, (int) '4');
        java.lang.Class<?> wildcardClass62 = list59.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[10]");
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[]");
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0719");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray15 = new int[] {};
        List list16 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 100);
        int[] intArray20 = new int[] { (byte) 10 };
        List list21 = AppendPairProgram.listgen(intArray20);
        appendPairProgram0.TestStudentSubmission(list21, (-1));
        int[] intArray25 = new int[] { (byte) 10 };
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        List list31 = AppendPairProgram.listgen(intArray25);
        List list32 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list32, (int) (short) -1);
        int[] intArray35 = new int[] {};
        List list36 = AppendPairProgram.listgen(intArray35);
        List list37 = AppendPairProgram.listgen(intArray35);
        List list38 = AppendPairProgram.listgen(intArray35);
        List list39 = AppendPairProgram.listgen(intArray35);
        List list40 = AppendPairProgram.listgen(intArray35);
        List list41 = AppendPairProgram.listgen(intArray35);
        List list42 = AppendPairProgram.listgen(intArray35);
        List list43 = AppendPairProgram.listgen(intArray35);
        List list44 = AppendPairProgram.listgen(intArray35);
        List list45 = AppendPairProgram.listgen(intArray35);
        List list46 = AppendPairProgram.listgen(intArray35);
        List list47 = AppendPairProgram.listgen(intArray35);
        List list48 = AppendPairProgram.listgen(intArray35);
        List list49 = AppendPairProgram.listgen(intArray35);
        List list50 = AppendPairProgram.listgen(intArray35);
        List list51 = AppendPairProgram.listgen(intArray35);
        appendPairProgram0.TestStudentSubmission(list51, (int) '#');
        int[] intArray55 = new int[] { (byte) 10 };
        List list56 = AppendPairProgram.listgen(intArray55);
        List list57 = AppendPairProgram.listgen(intArray55);
        List list58 = AppendPairProgram.listgen(intArray55);
        List list59 = AppendPairProgram.listgen(intArray55);
        appendPairProgram0.TestStudentSubmission(list59, (int) (short) 1);
        java.lang.Class<?> wildcardClass62 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10]");
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[10]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[]");
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[10]");
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0720");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, 1);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list22, (int) (short) 1);
        int[] intArray25 = new int[] {};
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        List list31 = AppendPairProgram.listgen(intArray25);
        List list32 = AppendPairProgram.listgen(intArray25);
        List list33 = AppendPairProgram.listgen(intArray25);
        List list34 = AppendPairProgram.listgen(intArray25);
        List list35 = AppendPairProgram.listgen(intArray25);
        List list36 = AppendPairProgram.listgen(intArray25);
        List list37 = AppendPairProgram.listgen(intArray25);
        List list38 = AppendPairProgram.listgen(intArray25);
        List list39 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list39, (int) '#');
        int[] intArray42 = new int[] {};
        List list43 = AppendPairProgram.listgen(intArray42);
        List list44 = AppendPairProgram.listgen(intArray42);
        List list45 = AppendPairProgram.listgen(intArray42);
        appendPairProgram0.TestStudentSubmission(list45, 10);
        int[] intArray48 = new int[] {};
        List list49 = AppendPairProgram.listgen(intArray48);
        List list50 = AppendPairProgram.listgen(intArray48);
        List list51 = AppendPairProgram.listgen(intArray48);
        List list52 = AppendPairProgram.listgen(intArray48);
        List list53 = AppendPairProgram.listgen(intArray48);
        List list54 = AppendPairProgram.listgen(intArray48);
        appendPairProgram0.TestStudentSubmission(list54, (int) (short) 1);
        int[] intArray58 = new int[] { (byte) 10 };
        List list59 = AppendPairProgram.listgen(intArray58);
        List list60 = AppendPairProgram.listgen(intArray58);
        List list61 = AppendPairProgram.listgen(intArray58);
        List list62 = AppendPairProgram.listgen(intArray58);
        appendPairProgram0.TestStudentSubmission(list62, 1);
        java.lang.Class<?> wildcardClass65 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]");
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[]");
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[10]");
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(list61);
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0721");
        int[] intArray6 = new int[] { (short) 0, (byte) 0, (byte) 1, 0, (-1), (byte) 100 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        List list25 = AppendPairProgram.listgen(intArray6);
        List list26 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass27 = list26.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0, 1, 0, -1, 100]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0722");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) 0);
        int[] intArray15 = new int[] { (byte) 10 };
        List list16 = AppendPairProgram.listgen(intArray15);
        List list17 = AppendPairProgram.listgen(intArray15);
        List list18 = AppendPairProgram.listgen(intArray15);
        List list19 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list19, (int) (byte) 100);
        int[] intArray23 = new int[] { 0 };
        List list24 = AppendPairProgram.listgen(intArray23);
        List list25 = AppendPairProgram.listgen(intArray23);
        List list26 = AppendPairProgram.listgen(intArray23);
        appendPairProgram0.TestStudentSubmission(list26, (int) (short) -1);
        java.lang.Class<?> wildcardClass29 = list26.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0]");
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0723");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        List list14 = AppendPairProgram.listgen(intArray11);
        List list15 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list15, (int) (byte) -1);
        int[] intArray18 = new int[] {};
        List list19 = AppendPairProgram.listgen(intArray18);
        List list20 = AppendPairProgram.listgen(intArray18);
        List list21 = AppendPairProgram.listgen(intArray18);
        List list22 = AppendPairProgram.listgen(intArray18);
        List list23 = AppendPairProgram.listgen(intArray18);
        List list24 = AppendPairProgram.listgen(intArray18);
        List list25 = AppendPairProgram.listgen(intArray18);
        appendPairProgram0.TestStudentSubmission(list25, (-1));
        int[] intArray28 = new int[] {};
        List list29 = AppendPairProgram.listgen(intArray28);
        List list30 = AppendPairProgram.listgen(intArray28);
        List list31 = AppendPairProgram.listgen(intArray28);
        List list32 = AppendPairProgram.listgen(intArray28);
        List list33 = AppendPairProgram.listgen(intArray28);
        List list34 = AppendPairProgram.listgen(intArray28);
        List list35 = AppendPairProgram.listgen(intArray28);
        List list36 = AppendPairProgram.listgen(intArray28);
        List list37 = AppendPairProgram.listgen(intArray28);
        List list38 = AppendPairProgram.listgen(intArray28);
        List list39 = AppendPairProgram.listgen(intArray28);
        List list40 = AppendPairProgram.listgen(intArray28);
        List list41 = AppendPairProgram.listgen(intArray28);
        List list42 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list42, (int) (short) 0);
        int[] intArray46 = new int[] { (byte) 10 };
        List list47 = AppendPairProgram.listgen(intArray46);
        List list48 = AppendPairProgram.listgen(intArray46);
        List list49 = AppendPairProgram.listgen(intArray46);
        List list50 = AppendPairProgram.listgen(intArray46);
        List list51 = AppendPairProgram.listgen(intArray46);
        List list52 = AppendPairProgram.listgen(intArray46);
        List list53 = AppendPairProgram.listgen(intArray46);
        List list54 = AppendPairProgram.listgen(intArray46);
        List list55 = AppendPairProgram.listgen(intArray46);
        List list56 = AppendPairProgram.listgen(intArray46);
        List list57 = AppendPairProgram.listgen(intArray46);
        List list58 = AppendPairProgram.listgen(intArray46);
        List list59 = AppendPairProgram.listgen(intArray46);
        List list60 = AppendPairProgram.listgen(intArray46);
        List list61 = AppendPairProgram.listgen(intArray46);
        List list62 = AppendPairProgram.listgen(intArray46);
        appendPairProgram0.TestStudentSubmission(list62, (-1));
        java.lang.Class<?> wildcardClass65 = list62.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[10]");
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(list61);
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0724");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, (int) (byte) 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list10, (-1));
        int[] intArray13 = new int[] {};
        List list14 = AppendPairProgram.listgen(intArray13);
        List list15 = AppendPairProgram.listgen(intArray13);
        appendPairProgram0.TestStudentSubmission(list15, (int) (byte) 1);
        int[] intArray19 = new int[] { (byte) 10 };
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        List list24 = AppendPairProgram.listgen(intArray19);
        List list25 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list25, (int) (short) -1);
        int[] intArray28 = new int[] {};
        List list29 = AppendPairProgram.listgen(intArray28);
        List list30 = AppendPairProgram.listgen(intArray28);
        List list31 = AppendPairProgram.listgen(intArray28);
        List list32 = AppendPairProgram.listgen(intArray28);
        List list33 = AppendPairProgram.listgen(intArray28);
        List list34 = AppendPairProgram.listgen(intArray28);
        List list35 = AppendPairProgram.listgen(intArray28);
        List list36 = AppendPairProgram.listgen(intArray28);
        List list37 = AppendPairProgram.listgen(intArray28);
        List list38 = AppendPairProgram.listgen(intArray28);
        List list39 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list39, (int) (short) 0);
        int[] intArray43 = new int[] { (byte) 10 };
        List list44 = AppendPairProgram.listgen(intArray43);
        List list45 = AppendPairProgram.listgen(intArray43);
        List list46 = AppendPairProgram.listgen(intArray43);
        List list47 = AppendPairProgram.listgen(intArray43);
        List list48 = AppendPairProgram.listgen(intArray43);
        List list49 = AppendPairProgram.listgen(intArray43);
        appendPairProgram0.TestStudentSubmission(list49, (int) '4');
        java.lang.Class<?> wildcardClass52 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[10]");
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0725");
        int[] intArray6 = new int[] { (short) 0, (byte) 0, (byte) 1, 0, (-1), (byte) 100 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        List list25 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass26 = list25.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0, 1, 0, -1, 100]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0726");
        int[] intArray4 = new int[] { 'a', (short) 10, (short) 100, (byte) 0 };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        List list7 = AppendPairProgram.listgen(intArray4);
        List list8 = AppendPairProgram.listgen(intArray4);
        List list9 = AppendPairProgram.listgen(intArray4);
        java.lang.Class<?> wildcardClass10 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[97, 10, 100, 0]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0727");
        int[] intArray6 = new int[] { (byte) 0, (short) -1, ' ', 'a', (byte) 100, (byte) 10 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass24 = list23.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, -1, 32, 97, 100, 10]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0728");
        int[] intArray2 = new int[] { 10, (byte) 0 };
        List list3 = AppendPairProgram.listgen(intArray2);
        List list4 = AppendPairProgram.listgen(intArray2);
        List list5 = AppendPairProgram.listgen(intArray2);
        List list6 = AppendPairProgram.listgen(intArray2);
        List list7 = AppendPairProgram.listgen(intArray2);
        List list8 = AppendPairProgram.listgen(intArray2);
        List list9 = AppendPairProgram.listgen(intArray2);
        List list10 = AppendPairProgram.listgen(intArray2);
        List list11 = AppendPairProgram.listgen(intArray2);
        List list12 = AppendPairProgram.listgen(intArray2);
        java.lang.Class<?> wildcardClass13 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[10, 0]");
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0729");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, (int) (short) -1);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list19, (int) '4');
        java.lang.Class<?> wildcardClass22 = list19.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0730");
        int[] intArray5 = new int[] { '4', 10, (byte) 1, (byte) 100, (byte) 10 };
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        List list9 = AppendPairProgram.listgen(intArray5);
        List list10 = AppendPairProgram.listgen(intArray5);
        List list11 = AppendPairProgram.listgen(intArray5);
        java.lang.Class<?> wildcardClass12 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[52, 10, 1, 100, 10]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0731");
        int[] intArray6 = new int[] { 0, (short) 10, (short) -1, '#', (byte) 100, 1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        List list25 = AppendPairProgram.listgen(intArray6);
        List list26 = AppendPairProgram.listgen(intArray6);
        List list27 = AppendPairProgram.listgen(intArray6);
        List list28 = AppendPairProgram.listgen(intArray6);
        List list29 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass30 = list29.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 10, -1, 35, 100, 1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0732");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list24, (int) (short) 0);
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list29, 100);
        int[] intArray32 = new int[] {};
        List list33 = AppendPairProgram.listgen(intArray32);
        List list34 = AppendPairProgram.listgen(intArray32);
        List list35 = AppendPairProgram.listgen(intArray32);
        List list36 = AppendPairProgram.listgen(intArray32);
        List list37 = AppendPairProgram.listgen(intArray32);
        List list38 = AppendPairProgram.listgen(intArray32);
        List list39 = AppendPairProgram.listgen(intArray32);
        List list40 = AppendPairProgram.listgen(intArray32);
        appendPairProgram0.TestStudentSubmission(list40, (int) (byte) 100);
        int[] intArray43 = new int[] {};
        List list44 = AppendPairProgram.listgen(intArray43);
        List list45 = AppendPairProgram.listgen(intArray43);
        List list46 = AppendPairProgram.listgen(intArray43);
        List list47 = AppendPairProgram.listgen(intArray43);
        List list48 = AppendPairProgram.listgen(intArray43);
        List list49 = AppendPairProgram.listgen(intArray43);
        List list50 = AppendPairProgram.listgen(intArray43);
        List list51 = AppendPairProgram.listgen(intArray43);
        List list52 = AppendPairProgram.listgen(intArray43);
        List list53 = AppendPairProgram.listgen(intArray43);
        List list54 = AppendPairProgram.listgen(intArray43);
        List list55 = AppendPairProgram.listgen(intArray43);
        List list56 = AppendPairProgram.listgen(intArray43);
        List list57 = AppendPairProgram.listgen(intArray43);
        List list58 = AppendPairProgram.listgen(intArray43);
        List list59 = AppendPairProgram.listgen(intArray43);
        appendPairProgram0.TestStudentSubmission(list59, 0);
        int[] intArray62 = new int[] {};
        List list63 = AppendPairProgram.listgen(intArray62);
        List list64 = AppendPairProgram.listgen(intArray62);
        List list65 = AppendPairProgram.listgen(intArray62);
        List list66 = AppendPairProgram.listgen(intArray62);
        List list67 = AppendPairProgram.listgen(intArray62);
        List list68 = AppendPairProgram.listgen(intArray62);
        List list69 = AppendPairProgram.listgen(intArray62);
        List list70 = AppendPairProgram.listgen(intArray62);
        List list71 = AppendPairProgram.listgen(intArray62);
        List list72 = AppendPairProgram.listgen(intArray62);
        List list73 = AppendPairProgram.listgen(intArray62);
        List list74 = AppendPairProgram.listgen(intArray62);
        List list75 = AppendPairProgram.listgen(intArray62);
        appendPairProgram0.TestStudentSubmission(list75, (int) (short) 0);
        List list78 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list78, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[]");
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[]");
        org.junit.Assert.assertNotNull(list63);
        org.junit.Assert.assertNotNull(list64);
        org.junit.Assert.assertNotNull(list65);
        org.junit.Assert.assertNotNull(list66);
        org.junit.Assert.assertNotNull(list67);
        org.junit.Assert.assertNotNull(list68);
        org.junit.Assert.assertNotNull(list69);
        org.junit.Assert.assertNotNull(list70);
        org.junit.Assert.assertNotNull(list71);
        org.junit.Assert.assertNotNull(list72);
        org.junit.Assert.assertNotNull(list73);
        org.junit.Assert.assertNotNull(list74);
        org.junit.Assert.assertNotNull(list75);
    }

    @Test
    public void test0733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0733");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray10 = new int[] { (byte) 10 };
        List list11 = AppendPairProgram.listgen(intArray10);
        List list12 = AppendPairProgram.listgen(intArray10);
        List list13 = AppendPairProgram.listgen(intArray10);
        List list14 = AppendPairProgram.listgen(intArray10);
        List list15 = AppendPairProgram.listgen(intArray10);
        List list16 = AppendPairProgram.listgen(intArray10);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 1);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        List list24 = AppendPairProgram.listgen(intArray19);
        List list25 = AppendPairProgram.listgen(intArray19);
        List list26 = AppendPairProgram.listgen(intArray19);
        List list27 = AppendPairProgram.listgen(intArray19);
        List list28 = AppendPairProgram.listgen(intArray19);
        List list29 = AppendPairProgram.listgen(intArray19);
        List list30 = AppendPairProgram.listgen(intArray19);
        List list31 = AppendPairProgram.listgen(intArray19);
        List list32 = AppendPairProgram.listgen(intArray19);
        List list33 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list33, (int) (byte) 1);
        int[] intArray37 = new int[] { (byte) 10 };
        List list38 = AppendPairProgram.listgen(intArray37);
        List list39 = AppendPairProgram.listgen(intArray37);
        List list40 = AppendPairProgram.listgen(intArray37);
        List list41 = AppendPairProgram.listgen(intArray37);
        List list42 = AppendPairProgram.listgen(intArray37);
        List list43 = AppendPairProgram.listgen(intArray37);
        List list44 = AppendPairProgram.listgen(intArray37);
        List list45 = AppendPairProgram.listgen(intArray37);
        List list46 = AppendPairProgram.listgen(intArray37);
        List list47 = AppendPairProgram.listgen(intArray37);
        appendPairProgram0.TestStudentSubmission(list47, (int) (byte) 100);
        java.lang.Class<?> wildcardClass50 = list47.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10]");
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[10]");
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0734");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list11, 0);
        int[] intArray15 = new int[] { (byte) 10 };
        List list16 = AppendPairProgram.listgen(intArray15);
        List list17 = AppendPairProgram.listgen(intArray15);
        List list18 = AppendPairProgram.listgen(intArray15);
        List list19 = AppendPairProgram.listgen(intArray15);
        List list20 = AppendPairProgram.listgen(intArray15);
        List list21 = AppendPairProgram.listgen(intArray15);
        List list22 = AppendPairProgram.listgen(intArray15);
        List list23 = AppendPairProgram.listgen(intArray15);
        List list24 = AppendPairProgram.listgen(intArray15);
        List list25 = AppendPairProgram.listgen(intArray15);
        List list26 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list26, (int) (byte) 100);
        int[] intArray30 = new int[] { (byte) 10 };
        List list31 = AppendPairProgram.listgen(intArray30);
        List list32 = AppendPairProgram.listgen(intArray30);
        List list33 = AppendPairProgram.listgen(intArray30);
        List list34 = AppendPairProgram.listgen(intArray30);
        List list35 = AppendPairProgram.listgen(intArray30);
        List list36 = AppendPairProgram.listgen(intArray30);
        List list37 = AppendPairProgram.listgen(intArray30);
        List list38 = AppendPairProgram.listgen(intArray30);
        List list39 = AppendPairProgram.listgen(intArray30);
        List list40 = AppendPairProgram.listgen(intArray30);
        appendPairProgram0.TestStudentSubmission(list40, 1);
        int[] intArray43 = new int[] {};
        List list44 = AppendPairProgram.listgen(intArray43);
        List list45 = AppendPairProgram.listgen(intArray43);
        List list46 = AppendPairProgram.listgen(intArray43);
        List list47 = AppendPairProgram.listgen(intArray43);
        List list48 = AppendPairProgram.listgen(intArray43);
        List list49 = AppendPairProgram.listgen(intArray43);
        List list50 = AppendPairProgram.listgen(intArray43);
        List list51 = AppendPairProgram.listgen(intArray43);
        List list52 = AppendPairProgram.listgen(intArray43);
        List list53 = AppendPairProgram.listgen(intArray43);
        List list54 = AppendPairProgram.listgen(intArray43);
        List list55 = AppendPairProgram.listgen(intArray43);
        List list56 = AppendPairProgram.listgen(intArray43);
        List list57 = AppendPairProgram.listgen(intArray43);
        appendPairProgram0.TestStudentSubmission(list57, 0);
        java.lang.Class<?> wildcardClass60 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[10]");
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0735");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list9, (int) (short) 0);
        int[] intArray12 = new int[] {};
        List list13 = AppendPairProgram.listgen(intArray12);
        List list14 = AppendPairProgram.listgen(intArray12);
        List list15 = AppendPairProgram.listgen(intArray12);
        List list16 = AppendPairProgram.listgen(intArray12);
        List list17 = AppendPairProgram.listgen(intArray12);
        List list18 = AppendPairProgram.listgen(intArray12);
        List list19 = AppendPairProgram.listgen(intArray12);
        List list20 = AppendPairProgram.listgen(intArray12);
        List list21 = AppendPairProgram.listgen(intArray12);
        List list22 = AppendPairProgram.listgen(intArray12);
        List list23 = AppendPairProgram.listgen(intArray12);
        List list24 = AppendPairProgram.listgen(intArray12);
        appendPairProgram0.TestStudentSubmission(list24, (int) '#');
        int[] intArray28 = new int[] { 0 };
        List list29 = AppendPairProgram.listgen(intArray28);
        List list30 = AppendPairProgram.listgen(intArray28);
        List list31 = AppendPairProgram.listgen(intArray28);
        List list32 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list32, (int) (byte) 100);
        List list35 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list35, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
    }

    @Test
    public void test0736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0736");
        int[] intArray6 = new int[] { (short) -1, '#', '4', (short) -1, (short) 100, (byte) -1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass25 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 35, 52, -1, 100, -1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0737");
        int[] intArray6 = new int[] { (byte) 0, (short) -1, ' ', 'a', (byte) 100, (byte) 10 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass21 = list20.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, -1, 32, 97, 100, 10]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0738");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, (int) '4');
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list26, (int) (byte) 1);
        int[] intArray30 = new int[] { 0 };
        List list31 = AppendPairProgram.listgen(intArray30);
        List list32 = AppendPairProgram.listgen(intArray30);
        appendPairProgram0.TestStudentSubmission(list32, (int) 'a');
        int[] intArray36 = new int[] { (byte) 10 };
        List list37 = AppendPairProgram.listgen(intArray36);
        List list38 = AppendPairProgram.listgen(intArray36);
        List list39 = AppendPairProgram.listgen(intArray36);
        List list40 = AppendPairProgram.listgen(intArray36);
        List list41 = AppendPairProgram.listgen(intArray36);
        List list42 = AppendPairProgram.listgen(intArray36);
        List list43 = AppendPairProgram.listgen(intArray36);
        List list44 = AppendPairProgram.listgen(intArray36);
        List list45 = AppendPairProgram.listgen(intArray36);
        List list46 = AppendPairProgram.listgen(intArray36);
        List list47 = AppendPairProgram.listgen(intArray36);
        List list48 = AppendPairProgram.listgen(intArray36);
        List list49 = AppendPairProgram.listgen(intArray36);
        List list50 = AppendPairProgram.listgen(intArray36);
        List list51 = AppendPairProgram.listgen(intArray36);
        appendPairProgram0.TestStudentSubmission(list51, (int) '#');
        java.lang.Class<?> wildcardClass54 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0]");
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[10]");
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0739");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) -1);
        int[] intArray14 = new int[] {};
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 10);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        List list24 = AppendPairProgram.listgen(intArray19);
        List list25 = AppendPairProgram.listgen(intArray19);
        List list26 = AppendPairProgram.listgen(intArray19);
        List list27 = AppendPairProgram.listgen(intArray19);
        List list28 = AppendPairProgram.listgen(intArray19);
        List list29 = AppendPairProgram.listgen(intArray19);
        List list30 = AppendPairProgram.listgen(intArray19);
        List list31 = AppendPairProgram.listgen(intArray19);
        List list32 = AppendPairProgram.listgen(intArray19);
        List list33 = AppendPairProgram.listgen(intArray19);
        List list34 = AppendPairProgram.listgen(intArray19);
        List list35 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list35, 0);
        java.lang.Class<?> wildcardClass38 = list35.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0740");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) -1);
        int[] intArray14 = new int[] {};
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 10);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list23, (int) (byte) 0);
        int[] intArray26 = new int[] {};
        List list27 = AppendPairProgram.listgen(intArray26);
        List list28 = AppendPairProgram.listgen(intArray26);
        List list29 = AppendPairProgram.listgen(intArray26);
        List list30 = AppendPairProgram.listgen(intArray26);
        List list31 = AppendPairProgram.listgen(intArray26);
        List list32 = AppendPairProgram.listgen(intArray26);
        appendPairProgram0.TestStudentSubmission(list32, 100);
        int[] intArray36 = new int[] { (byte) 10 };
        List list37 = AppendPairProgram.listgen(intArray36);
        List list38 = AppendPairProgram.listgen(intArray36);
        List list39 = AppendPairProgram.listgen(intArray36);
        List list40 = AppendPairProgram.listgen(intArray36);
        List list41 = AppendPairProgram.listgen(intArray36);
        List list42 = AppendPairProgram.listgen(intArray36);
        List list43 = AppendPairProgram.listgen(intArray36);
        appendPairProgram0.TestStudentSubmission(list43, 100);
        int[] intArray46 = new int[] {};
        List list47 = AppendPairProgram.listgen(intArray46);
        List list48 = AppendPairProgram.listgen(intArray46);
        List list49 = AppendPairProgram.listgen(intArray46);
        List list50 = AppendPairProgram.listgen(intArray46);
        List list51 = AppendPairProgram.listgen(intArray46);
        appendPairProgram0.TestStudentSubmission(list51, 100);
        int[] intArray54 = new int[] {};
        List list55 = AppendPairProgram.listgen(intArray54);
        List list56 = AppendPairProgram.listgen(intArray54);
        List list57 = AppendPairProgram.listgen(intArray54);
        appendPairProgram0.TestStudentSubmission(list57, 100);
        int[] intArray61 = new int[] { (byte) 10 };
        List list62 = AppendPairProgram.listgen(intArray61);
        List list63 = AppendPairProgram.listgen(intArray61);
        List list64 = AppendPairProgram.listgen(intArray61);
        List list65 = AppendPairProgram.listgen(intArray61);
        List list66 = AppendPairProgram.listgen(intArray61);
        List list67 = AppendPairProgram.listgen(intArray61);
        List list68 = AppendPairProgram.listgen(intArray61);
        List list69 = AppendPairProgram.listgen(intArray61);
        List list70 = AppendPairProgram.listgen(intArray61);
        List list71 = AppendPairProgram.listgen(intArray61);
        List list72 = AppendPairProgram.listgen(intArray61);
        List list73 = AppendPairProgram.listgen(intArray61);
        List list74 = AppendPairProgram.listgen(intArray61);
        List list75 = AppendPairProgram.listgen(intArray61);
        appendPairProgram0.TestStudentSubmission(list75, (int) (byte) 100);
        int[] intArray78 = new int[] {};
        List list79 = AppendPairProgram.listgen(intArray78);
        List list80 = AppendPairProgram.listgen(intArray78);
        List list81 = AppendPairProgram.listgen(intArray78);
        List list82 = AppendPairProgram.listgen(intArray78);
        List list83 = AppendPairProgram.listgen(intArray78);
        appendPairProgram0.TestStudentSubmission(list83, (int) (byte) 1);
        java.lang.Class<?> wildcardClass86 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[10]");
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[]");
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[10]");
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(list63);
        org.junit.Assert.assertNotNull(list64);
        org.junit.Assert.assertNotNull(list65);
        org.junit.Assert.assertNotNull(list66);
        org.junit.Assert.assertNotNull(list67);
        org.junit.Assert.assertNotNull(list68);
        org.junit.Assert.assertNotNull(list69);
        org.junit.Assert.assertNotNull(list70);
        org.junit.Assert.assertNotNull(list71);
        org.junit.Assert.assertNotNull(list72);
        org.junit.Assert.assertNotNull(list73);
        org.junit.Assert.assertNotNull(list74);
        org.junit.Assert.assertNotNull(list75);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[]");
        org.junit.Assert.assertNotNull(list79);
        org.junit.Assert.assertNotNull(list80);
        org.junit.Assert.assertNotNull(list81);
        org.junit.Assert.assertNotNull(list82);
        org.junit.Assert.assertNotNull(list83);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0741");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, (int) (byte) 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list10, (-1));
        int[] intArray13 = new int[] {};
        List list14 = AppendPairProgram.listgen(intArray13);
        List list15 = AppendPairProgram.listgen(intArray13);
        appendPairProgram0.TestStudentSubmission(list15, (int) (byte) 1);
        List list18 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list18, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
    }

    @Test
    public void test0742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0742");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        List list14 = AppendPairProgram.listgen(intArray11);
        List list15 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list15, (int) (byte) -1);
        int[] intArray18 = new int[] {};
        List list19 = AppendPairProgram.listgen(intArray18);
        List list20 = AppendPairProgram.listgen(intArray18);
        List list21 = AppendPairProgram.listgen(intArray18);
        List list22 = AppendPairProgram.listgen(intArray18);
        List list23 = AppendPairProgram.listgen(intArray18);
        List list24 = AppendPairProgram.listgen(intArray18);
        List list25 = AppendPairProgram.listgen(intArray18);
        appendPairProgram0.TestStudentSubmission(list25, (-1));
        int[] intArray28 = new int[] {};
        List list29 = AppendPairProgram.listgen(intArray28);
        List list30 = AppendPairProgram.listgen(intArray28);
        List list31 = AppendPairProgram.listgen(intArray28);
        List list32 = AppendPairProgram.listgen(intArray28);
        List list33 = AppendPairProgram.listgen(intArray28);
        List list34 = AppendPairProgram.listgen(intArray28);
        List list35 = AppendPairProgram.listgen(intArray28);
        List list36 = AppendPairProgram.listgen(intArray28);
        List list37 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list37, 10);
        int[] intArray40 = new int[] {};
        List list41 = AppendPairProgram.listgen(intArray40);
        List list42 = AppendPairProgram.listgen(intArray40);
        List list43 = AppendPairProgram.listgen(intArray40);
        List list44 = AppendPairProgram.listgen(intArray40);
        List list45 = AppendPairProgram.listgen(intArray40);
        List list46 = AppendPairProgram.listgen(intArray40);
        List list47 = AppendPairProgram.listgen(intArray40);
        List list48 = AppendPairProgram.listgen(intArray40);
        List list49 = AppendPairProgram.listgen(intArray40);
        List list50 = AppendPairProgram.listgen(intArray40);
        List list51 = AppendPairProgram.listgen(intArray40);
        List list52 = AppendPairProgram.listgen(intArray40);
        appendPairProgram0.TestStudentSubmission(list52, (int) (short) 100);
        int[] intArray56 = new int[] { 0 };
        List list57 = AppendPairProgram.listgen(intArray56);
        List list58 = AppendPairProgram.listgen(intArray56);
        List list59 = AppendPairProgram.listgen(intArray56);
        appendPairProgram0.TestStudentSubmission(list59, (int) (byte) -1);
        java.lang.Class<?> wildcardClass62 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[]");
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0]");
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0743");
        int[] intArray0 = new int[] {};
        List list1 = AppendPairProgram.listgen(intArray0);
        List list2 = AppendPairProgram.listgen(intArray0);
        List list3 = AppendPairProgram.listgen(intArray0);
        List list4 = AppendPairProgram.listgen(intArray0);
        List list5 = AppendPairProgram.listgen(intArray0);
        List list6 = AppendPairProgram.listgen(intArray0);
        List list7 = AppendPairProgram.listgen(intArray0);
        List list8 = AppendPairProgram.listgen(intArray0);
        List list9 = AppendPairProgram.listgen(intArray0);
        List list10 = AppendPairProgram.listgen(intArray0);
        List list11 = AppendPairProgram.listgen(intArray0);
        List list12 = AppendPairProgram.listgen(intArray0);
        List list13 = AppendPairProgram.listgen(intArray0);
        List list14 = AppendPairProgram.listgen(intArray0);
        List list15 = AppendPairProgram.listgen(intArray0);
        List list16 = AppendPairProgram.listgen(intArray0);
        List list17 = AppendPairProgram.listgen(intArray0);
        List list18 = AppendPairProgram.listgen(intArray0);
        List list19 = AppendPairProgram.listgen(intArray0);
        List list20 = AppendPairProgram.listgen(intArray0);
        List list21 = AppendPairProgram.listgen(intArray0);
        java.lang.Class<?> wildcardClass22 = intArray0.getClass();
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(list1);
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0744");
        int[] intArray2 = new int[] { 10, (byte) 0 };
        List list3 = AppendPairProgram.listgen(intArray2);
        List list4 = AppendPairProgram.listgen(intArray2);
        List list5 = AppendPairProgram.listgen(intArray2);
        List list6 = AppendPairProgram.listgen(intArray2);
        List list7 = AppendPairProgram.listgen(intArray2);
        List list8 = AppendPairProgram.listgen(intArray2);
        List list9 = AppendPairProgram.listgen(intArray2);
        List list10 = AppendPairProgram.listgen(intArray2);
        List list11 = AppendPairProgram.listgen(intArray2);
        List list12 = AppendPairProgram.listgen(intArray2);
        List list13 = AppendPairProgram.listgen(intArray2);
        List list14 = AppendPairProgram.listgen(intArray2);
        List list15 = AppendPairProgram.listgen(intArray2);
        java.lang.Class<?> wildcardClass16 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[10, 0]");
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0745");
        int[] intArray1 = new int[] { 0 };
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        List list7 = AppendPairProgram.listgen(intArray1);
        List list8 = AppendPairProgram.listgen(intArray1);
        List list9 = AppendPairProgram.listgen(intArray1);
        java.lang.Class<?> wildcardClass10 = list9.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[0]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0746");
        int[] intArray4 = new int[] { (byte) 100, 'a', (byte) 0, 'a' };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        List list7 = AppendPairProgram.listgen(intArray4);
        List list8 = AppendPairProgram.listgen(intArray4);
        List list9 = AppendPairProgram.listgen(intArray4);
        List list10 = AppendPairProgram.listgen(intArray4);
        List list11 = AppendPairProgram.listgen(intArray4);
        List list12 = AppendPairProgram.listgen(intArray4);
        List list13 = AppendPairProgram.listgen(intArray4);
        java.lang.Class<?> wildcardClass14 = list13.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, 97, 0, 97]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0747");
        int[] intArray0 = new int[] {};
        List list1 = AppendPairProgram.listgen(intArray0);
        List list2 = AppendPairProgram.listgen(intArray0);
        List list3 = AppendPairProgram.listgen(intArray0);
        List list4 = AppendPairProgram.listgen(intArray0);
        List list5 = AppendPairProgram.listgen(intArray0);
        List list6 = AppendPairProgram.listgen(intArray0);
        List list7 = AppendPairProgram.listgen(intArray0);
        List list8 = AppendPairProgram.listgen(intArray0);
        List list9 = AppendPairProgram.listgen(intArray0);
        List list10 = AppendPairProgram.listgen(intArray0);
        List list11 = AppendPairProgram.listgen(intArray0);
        List list12 = AppendPairProgram.listgen(intArray0);
        List list13 = AppendPairProgram.listgen(intArray0);
        List list14 = AppendPairProgram.listgen(intArray0);
        List list15 = AppendPairProgram.listgen(intArray0);
        java.lang.Class<?> wildcardClass16 = intArray0.getClass();
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(list1);
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0748");
        int[] intArray1 = new int[] { 0 };
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        List list7 = AppendPairProgram.listgen(intArray1);
        java.lang.Class<?> wildcardClass8 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[0]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0749");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, (int) '4');
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list26, (int) (byte) 1);
        int[] intArray30 = new int[] { 0 };
        List list31 = AppendPairProgram.listgen(intArray30);
        List list32 = AppendPairProgram.listgen(intArray30);
        appendPairProgram0.TestStudentSubmission(list32, (int) 'a');
        int[] intArray35 = new int[] {};
        List list36 = AppendPairProgram.listgen(intArray35);
        List list37 = AppendPairProgram.listgen(intArray35);
        List list38 = AppendPairProgram.listgen(intArray35);
        List list39 = AppendPairProgram.listgen(intArray35);
        List list40 = AppendPairProgram.listgen(intArray35);
        List list41 = AppendPairProgram.listgen(intArray35);
        List list42 = AppendPairProgram.listgen(intArray35);
        List list43 = AppendPairProgram.listgen(intArray35);
        List list44 = AppendPairProgram.listgen(intArray35);
        appendPairProgram0.TestStudentSubmission(list44, (int) '#');
        java.lang.Class<?> wildcardClass47 = list44.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0]");
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[]");
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0750");
        int[] intArray6 = new int[] { 0, (short) 10, (short) -1, '#', (byte) 100, 1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        List list25 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass26 = list25.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 10, -1, 35, 100, 1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0751");
        int[] intArray1 = new int[] { (byte) 10 };
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        List list7 = AppendPairProgram.listgen(intArray1);
        List list8 = AppendPairProgram.listgen(intArray1);
        List list9 = AppendPairProgram.listgen(intArray1);
        List list10 = AppendPairProgram.listgen(intArray1);
        List list11 = AppendPairProgram.listgen(intArray1);
        List list12 = AppendPairProgram.listgen(intArray1);
        List list13 = AppendPairProgram.listgen(intArray1);
        List list14 = AppendPairProgram.listgen(intArray1);
        List list15 = AppendPairProgram.listgen(intArray1);
        List list16 = AppendPairProgram.listgen(intArray1);
        List list17 = AppendPairProgram.listgen(intArray1);
        List list18 = AppendPairProgram.listgen(intArray1);
        List list19 = AppendPairProgram.listgen(intArray1);
        java.lang.Class<?> wildcardClass20 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[10]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0752");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, (int) (byte) 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list10, (-1));
        int[] intArray13 = new int[] {};
        List list14 = AppendPairProgram.listgen(intArray13);
        List list15 = AppendPairProgram.listgen(intArray13);
        List list16 = AppendPairProgram.listgen(intArray13);
        List list17 = AppendPairProgram.listgen(intArray13);
        List list18 = AppendPairProgram.listgen(intArray13);
        List list19 = AppendPairProgram.listgen(intArray13);
        List list20 = AppendPairProgram.listgen(intArray13);
        List list21 = AppendPairProgram.listgen(intArray13);
        List list22 = AppendPairProgram.listgen(intArray13);
        List list23 = AppendPairProgram.listgen(intArray13);
        List list24 = AppendPairProgram.listgen(intArray13);
        List list25 = AppendPairProgram.listgen(intArray13);
        List list26 = AppendPairProgram.listgen(intArray13);
        List list27 = AppendPairProgram.listgen(intArray13);
        List list28 = AppendPairProgram.listgen(intArray13);
        List list29 = AppendPairProgram.listgen(intArray13);
        appendPairProgram0.TestStudentSubmission(list29, 0);
        java.lang.Class<?> wildcardClass32 = list29.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0753");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, (int) (byte) 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list10, (-1));
        int[] intArray13 = new int[] {};
        List list14 = AppendPairProgram.listgen(intArray13);
        List list15 = AppendPairProgram.listgen(intArray13);
        appendPairProgram0.TestStudentSubmission(list15, (int) (byte) 1);
        int[] intArray19 = new int[] { (byte) 10 };
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        List list24 = AppendPairProgram.listgen(intArray19);
        List list25 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list25, (int) (short) -1);
        int[] intArray28 = new int[] {};
        List list29 = AppendPairProgram.listgen(intArray28);
        List list30 = AppendPairProgram.listgen(intArray28);
        List list31 = AppendPairProgram.listgen(intArray28);
        List list32 = AppendPairProgram.listgen(intArray28);
        List list33 = AppendPairProgram.listgen(intArray28);
        List list34 = AppendPairProgram.listgen(intArray28);
        List list35 = AppendPairProgram.listgen(intArray28);
        List list36 = AppendPairProgram.listgen(intArray28);
        List list37 = AppendPairProgram.listgen(intArray28);
        List list38 = AppendPairProgram.listgen(intArray28);
        List list39 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list39, (int) (short) 0);
        java.lang.Class<?> wildcardClass42 = list39.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0754");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray10 = new int[] { (byte) 10 };
        List list11 = AppendPairProgram.listgen(intArray10);
        List list12 = AppendPairProgram.listgen(intArray10);
        List list13 = AppendPairProgram.listgen(intArray10);
        List list14 = AppendPairProgram.listgen(intArray10);
        List list15 = AppendPairProgram.listgen(intArray10);
        List list16 = AppendPairProgram.listgen(intArray10);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 1);
        int[] intArray20 = new int[] { 0 };
        List list21 = AppendPairProgram.listgen(intArray20);
        appendPairProgram0.TestStudentSubmission(list21, (int) (short) -1);
        java.lang.Class<?> wildcardClass24 = list21.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10]");
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0]");
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0755");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray15 = new int[] {};
        List list16 = AppendPairProgram.listgen(intArray15);
        List list17 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list17, (int) (short) 1);
        List list20 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list20, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
    }

    @Test
    public void test0756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0756");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, (int) (byte) 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list10, (-1));
        int[] intArray13 = new int[] {};
        List list14 = AppendPairProgram.listgen(intArray13);
        List list15 = AppendPairProgram.listgen(intArray13);
        List list16 = AppendPairProgram.listgen(intArray13);
        List list17 = AppendPairProgram.listgen(intArray13);
        List list18 = AppendPairProgram.listgen(intArray13);
        List list19 = AppendPairProgram.listgen(intArray13);
        List list20 = AppendPairProgram.listgen(intArray13);
        List list21 = AppendPairProgram.listgen(intArray13);
        List list22 = AppendPairProgram.listgen(intArray13);
        List list23 = AppendPairProgram.listgen(intArray13);
        List list24 = AppendPairProgram.listgen(intArray13);
        List list25 = AppendPairProgram.listgen(intArray13);
        List list26 = AppendPairProgram.listgen(intArray13);
        List list27 = AppendPairProgram.listgen(intArray13);
        appendPairProgram0.TestStudentSubmission(list27, (int) (short) -1);
        int[] intArray31 = new int[] { (byte) 10 };
        List list32 = AppendPairProgram.listgen(intArray31);
        List list33 = AppendPairProgram.listgen(intArray31);
        List list34 = AppendPairProgram.listgen(intArray31);
        List list35 = AppendPairProgram.listgen(intArray31);
        List list36 = AppendPairProgram.listgen(intArray31);
        List list37 = AppendPairProgram.listgen(intArray31);
        List list38 = AppendPairProgram.listgen(intArray31);
        List list39 = AppendPairProgram.listgen(intArray31);
        List list40 = AppendPairProgram.listgen(intArray31);
        List list41 = AppendPairProgram.listgen(intArray31);
        List list42 = AppendPairProgram.listgen(intArray31);
        List list43 = AppendPairProgram.listgen(intArray31);
        List list44 = AppendPairProgram.listgen(intArray31);
        List list45 = AppendPairProgram.listgen(intArray31);
        List list46 = AppendPairProgram.listgen(intArray31);
        appendPairProgram0.TestStudentSubmission(list46, 0);
        List list49 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list49, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10]");
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
    }

    @Test
    public void test0757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0757");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) -1);
        int[] intArray14 = new int[] {};
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 10);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list23, (int) (byte) 0);
        int[] intArray26 = new int[] {};
        List list27 = AppendPairProgram.listgen(intArray26);
        List list28 = AppendPairProgram.listgen(intArray26);
        List list29 = AppendPairProgram.listgen(intArray26);
        List list30 = AppendPairProgram.listgen(intArray26);
        List list31 = AppendPairProgram.listgen(intArray26);
        List list32 = AppendPairProgram.listgen(intArray26);
        appendPairProgram0.TestStudentSubmission(list32, 100);
        int[] intArray36 = new int[] { (byte) 10 };
        List list37 = AppendPairProgram.listgen(intArray36);
        List list38 = AppendPairProgram.listgen(intArray36);
        List list39 = AppendPairProgram.listgen(intArray36);
        List list40 = AppendPairProgram.listgen(intArray36);
        List list41 = AppendPairProgram.listgen(intArray36);
        List list42 = AppendPairProgram.listgen(intArray36);
        List list43 = AppendPairProgram.listgen(intArray36);
        appendPairProgram0.TestStudentSubmission(list43, 100);
        int[] intArray46 = new int[] {};
        List list47 = AppendPairProgram.listgen(intArray46);
        List list48 = AppendPairProgram.listgen(intArray46);
        List list49 = AppendPairProgram.listgen(intArray46);
        List list50 = AppendPairProgram.listgen(intArray46);
        List list51 = AppendPairProgram.listgen(intArray46);
        List list52 = AppendPairProgram.listgen(intArray46);
        List list53 = AppendPairProgram.listgen(intArray46);
        List list54 = AppendPairProgram.listgen(intArray46);
        appendPairProgram0.TestStudentSubmission(list54, (int) 'a');
        java.lang.Class<?> wildcardClass57 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[10]");
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0758");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, (int) '4');
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list26, (int) (byte) 1);
        int[] intArray29 = new int[] {};
        List list30 = AppendPairProgram.listgen(intArray29);
        List list31 = AppendPairProgram.listgen(intArray29);
        List list32 = AppendPairProgram.listgen(intArray29);
        List list33 = AppendPairProgram.listgen(intArray29);
        List list34 = AppendPairProgram.listgen(intArray29);
        List list35 = AppendPairProgram.listgen(intArray29);
        List list36 = AppendPairProgram.listgen(intArray29);
        List list37 = AppendPairProgram.listgen(intArray29);
        List list38 = AppendPairProgram.listgen(intArray29);
        List list39 = AppendPairProgram.listgen(intArray29);
        appendPairProgram0.TestStudentSubmission(list39, (-1));
        int[] intArray42 = new int[] {};
        List list43 = AppendPairProgram.listgen(intArray42);
        List list44 = AppendPairProgram.listgen(intArray42);
        List list45 = AppendPairProgram.listgen(intArray42);
        List list46 = AppendPairProgram.listgen(intArray42);
        List list47 = AppendPairProgram.listgen(intArray42);
        List list48 = AppendPairProgram.listgen(intArray42);
        List list49 = AppendPairProgram.listgen(intArray42);
        List list50 = AppendPairProgram.listgen(intArray42);
        List list51 = AppendPairProgram.listgen(intArray42);
        List list52 = AppendPairProgram.listgen(intArray42);
        List list53 = AppendPairProgram.listgen(intArray42);
        List list54 = AppendPairProgram.listgen(intArray42);
        appendPairProgram0.TestStudentSubmission(list54, (int) '4');
        java.lang.Class<?> wildcardClass57 = list54.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[]");
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]");
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0759");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, (int) '4');
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list26, (int) (byte) 1);
        int[] intArray29 = new int[] {};
        List list30 = AppendPairProgram.listgen(intArray29);
        List list31 = AppendPairProgram.listgen(intArray29);
        List list32 = AppendPairProgram.listgen(intArray29);
        List list33 = AppendPairProgram.listgen(intArray29);
        List list34 = AppendPairProgram.listgen(intArray29);
        List list35 = AppendPairProgram.listgen(intArray29);
        List list36 = AppendPairProgram.listgen(intArray29);
        List list37 = AppendPairProgram.listgen(intArray29);
        List list38 = AppendPairProgram.listgen(intArray29);
        List list39 = AppendPairProgram.listgen(intArray29);
        appendPairProgram0.TestStudentSubmission(list39, (-1));
        int[] intArray43 = new int[] { 0 };
        List list44 = AppendPairProgram.listgen(intArray43);
        List list45 = AppendPairProgram.listgen(intArray43);
        List list46 = AppendPairProgram.listgen(intArray43);
        appendPairProgram0.TestStudentSubmission(list46, 0);
        java.lang.Class<?> wildcardClass49 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[]");
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0]");
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0760");
        int[] intArray4 = new int[] { (-1), (byte) 100, (byte) 1, (byte) 1 };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        List list7 = AppendPairProgram.listgen(intArray4);
        List list8 = AppendPairProgram.listgen(intArray4);
        List list9 = AppendPairProgram.listgen(intArray4);
        List list10 = AppendPairProgram.listgen(intArray4);
        List list11 = AppendPairProgram.listgen(intArray4);
        List list12 = AppendPairProgram.listgen(intArray4);
        List list13 = AppendPairProgram.listgen(intArray4);
        List list14 = AppendPairProgram.listgen(intArray4);
        java.lang.Class<?> wildcardClass15 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 100, 1, 1]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0761");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) -1);
        int[] intArray14 = new int[] {};
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 10);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list23, (int) (byte) 0);
        int[] intArray26 = new int[] {};
        List list27 = AppendPairProgram.listgen(intArray26);
        List list28 = AppendPairProgram.listgen(intArray26);
        List list29 = AppendPairProgram.listgen(intArray26);
        List list30 = AppendPairProgram.listgen(intArray26);
        List list31 = AppendPairProgram.listgen(intArray26);
        appendPairProgram0.TestStudentSubmission(list31, (-1));
        int[] intArray35 = new int[] { (byte) 10 };
        List list36 = AppendPairProgram.listgen(intArray35);
        List list37 = AppendPairProgram.listgen(intArray35);
        List list38 = AppendPairProgram.listgen(intArray35);
        List list39 = AppendPairProgram.listgen(intArray35);
        List list40 = AppendPairProgram.listgen(intArray35);
        List list41 = AppendPairProgram.listgen(intArray35);
        List list42 = AppendPairProgram.listgen(intArray35);
        List list43 = AppendPairProgram.listgen(intArray35);
        List list44 = AppendPairProgram.listgen(intArray35);
        List list45 = AppendPairProgram.listgen(intArray35);
        List list46 = AppendPairProgram.listgen(intArray35);
        List list47 = AppendPairProgram.listgen(intArray35);
        List list48 = AppendPairProgram.listgen(intArray35);
        List list49 = AppendPairProgram.listgen(intArray35);
        List list50 = AppendPairProgram.listgen(intArray35);
        List list51 = AppendPairProgram.listgen(intArray35);
        appendPairProgram0.TestStudentSubmission(list51, (int) (byte) -1);
        java.lang.Class<?> wildcardClass54 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[10]");
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0762");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, 1);
        int[] intArray17 = new int[] { (byte) 10 };
        List list18 = AppendPairProgram.listgen(intArray17);
        List list19 = AppendPairProgram.listgen(intArray17);
        List list20 = AppendPairProgram.listgen(intArray17);
        List list21 = AppendPairProgram.listgen(intArray17);
        List list22 = AppendPairProgram.listgen(intArray17);
        List list23 = AppendPairProgram.listgen(intArray17);
        List list24 = AppendPairProgram.listgen(intArray17);
        List list25 = AppendPairProgram.listgen(intArray17);
        appendPairProgram0.TestStudentSubmission(list25, (int) (short) 0);
        int[] intArray29 = new int[] { (byte) 10 };
        List list30 = AppendPairProgram.listgen(intArray29);
        List list31 = AppendPairProgram.listgen(intArray29);
        appendPairProgram0.TestStudentSubmission(list31, (-1));
        int[] intArray35 = new int[] { (byte) 10 };
        List list36 = AppendPairProgram.listgen(intArray35);
        List list37 = AppendPairProgram.listgen(intArray35);
        List list38 = AppendPairProgram.listgen(intArray35);
        List list39 = AppendPairProgram.listgen(intArray35);
        List list40 = AppendPairProgram.listgen(intArray35);
        List list41 = AppendPairProgram.listgen(intArray35);
        List list42 = AppendPairProgram.listgen(intArray35);
        List list43 = AppendPairProgram.listgen(intArray35);
        appendPairProgram0.TestStudentSubmission(list43, (int) (short) -1);
        int[] intArray46 = new int[] {};
        List list47 = AppendPairProgram.listgen(intArray46);
        List list48 = AppendPairProgram.listgen(intArray46);
        List list49 = AppendPairProgram.listgen(intArray46);
        List list50 = AppendPairProgram.listgen(intArray46);
        List list51 = AppendPairProgram.listgen(intArray46);
        List list52 = AppendPairProgram.listgen(intArray46);
        List list53 = AppendPairProgram.listgen(intArray46);
        List list54 = AppendPairProgram.listgen(intArray46);
        List list55 = AppendPairProgram.listgen(intArray46);
        List list56 = AppendPairProgram.listgen(intArray46);
        List list57 = AppendPairProgram.listgen(intArray46);
        List list58 = AppendPairProgram.listgen(intArray46);
        List list59 = AppendPairProgram.listgen(intArray46);
        List list60 = AppendPairProgram.listgen(intArray46);
        List list61 = AppendPairProgram.listgen(intArray46);
        List list62 = AppendPairProgram.listgen(intArray46);
        appendPairProgram0.TestStudentSubmission(list62, (-1));
        java.lang.Class<?> wildcardClass65 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10]");
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10]");
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[10]");
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(list61);
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0763");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list24, (int) (short) 0);
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list29, 100);
        int[] intArray33 = new int[] { (byte) 10 };
        List list34 = AppendPairProgram.listgen(intArray33);
        appendPairProgram0.TestStudentSubmission(list34, 1);
        List list37 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list37, 0);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10]");
        org.junit.Assert.assertNotNull(list34);
    }

    @Test
    public void test0764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0764");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, (int) '4');
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list26, (int) (byte) 1);
        int[] intArray29 = new int[] {};
        List list30 = AppendPairProgram.listgen(intArray29);
        List list31 = AppendPairProgram.listgen(intArray29);
        List list32 = AppendPairProgram.listgen(intArray29);
        List list33 = AppendPairProgram.listgen(intArray29);
        List list34 = AppendPairProgram.listgen(intArray29);
        List list35 = AppendPairProgram.listgen(intArray29);
        List list36 = AppendPairProgram.listgen(intArray29);
        List list37 = AppendPairProgram.listgen(intArray29);
        List list38 = AppendPairProgram.listgen(intArray29);
        List list39 = AppendPairProgram.listgen(intArray29);
        appendPairProgram0.TestStudentSubmission(list39, (-1));
        int[] intArray42 = new int[] {};
        List list43 = AppendPairProgram.listgen(intArray42);
        List list44 = AppendPairProgram.listgen(intArray42);
        List list45 = AppendPairProgram.listgen(intArray42);
        List list46 = AppendPairProgram.listgen(intArray42);
        List list47 = AppendPairProgram.listgen(intArray42);
        List list48 = AppendPairProgram.listgen(intArray42);
        List list49 = AppendPairProgram.listgen(intArray42);
        List list50 = AppendPairProgram.listgen(intArray42);
        List list51 = AppendPairProgram.listgen(intArray42);
        appendPairProgram0.TestStudentSubmission(list51, (int) 'a');
        java.lang.Class<?> wildcardClass54 = list51.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[]");
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]");
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0765");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, 1);
        int[] intArray17 = new int[] { (byte) 10 };
        List list18 = AppendPairProgram.listgen(intArray17);
        List list19 = AppendPairProgram.listgen(intArray17);
        List list20 = AppendPairProgram.listgen(intArray17);
        List list21 = AppendPairProgram.listgen(intArray17);
        List list22 = AppendPairProgram.listgen(intArray17);
        List list23 = AppendPairProgram.listgen(intArray17);
        List list24 = AppendPairProgram.listgen(intArray17);
        List list25 = AppendPairProgram.listgen(intArray17);
        appendPairProgram0.TestStudentSubmission(list25, (int) (short) 0);
        int[] intArray29 = new int[] { (byte) 10 };
        List list30 = AppendPairProgram.listgen(intArray29);
        List list31 = AppendPairProgram.listgen(intArray29);
        appendPairProgram0.TestStudentSubmission(list31, (-1));
        int[] intArray35 = new int[] { (byte) 10 };
        List list36 = AppendPairProgram.listgen(intArray35);
        List list37 = AppendPairProgram.listgen(intArray35);
        List list38 = AppendPairProgram.listgen(intArray35);
        List list39 = AppendPairProgram.listgen(intArray35);
        List list40 = AppendPairProgram.listgen(intArray35);
        List list41 = AppendPairProgram.listgen(intArray35);
        List list42 = AppendPairProgram.listgen(intArray35);
        List list43 = AppendPairProgram.listgen(intArray35);
        appendPairProgram0.TestStudentSubmission(list43, (int) (short) -1);
        int[] intArray46 = new int[] {};
        List list47 = AppendPairProgram.listgen(intArray46);
        List list48 = AppendPairProgram.listgen(intArray46);
        List list49 = AppendPairProgram.listgen(intArray46);
        List list50 = AppendPairProgram.listgen(intArray46);
        List list51 = AppendPairProgram.listgen(intArray46);
        List list52 = AppendPairProgram.listgen(intArray46);
        List list53 = AppendPairProgram.listgen(intArray46);
        List list54 = AppendPairProgram.listgen(intArray46);
        List list55 = AppendPairProgram.listgen(intArray46);
        List list56 = AppendPairProgram.listgen(intArray46);
        List list57 = AppendPairProgram.listgen(intArray46);
        List list58 = AppendPairProgram.listgen(intArray46);
        List list59 = AppendPairProgram.listgen(intArray46);
        List list60 = AppendPairProgram.listgen(intArray46);
        List list61 = AppendPairProgram.listgen(intArray46);
        List list62 = AppendPairProgram.listgen(intArray46);
        appendPairProgram0.TestStudentSubmission(list62, (-1));
        int[] intArray65 = new int[] {};
        List list66 = AppendPairProgram.listgen(intArray65);
        List list67 = AppendPairProgram.listgen(intArray65);
        List list68 = AppendPairProgram.listgen(intArray65);
        List list69 = AppendPairProgram.listgen(intArray65);
        List list70 = AppendPairProgram.listgen(intArray65);
        List list71 = AppendPairProgram.listgen(intArray65);
        List list72 = AppendPairProgram.listgen(intArray65);
        List list73 = AppendPairProgram.listgen(intArray65);
        List list74 = AppendPairProgram.listgen(intArray65);
        List list75 = AppendPairProgram.listgen(intArray65);
        List list76 = AppendPairProgram.listgen(intArray65);
        List list77 = AppendPairProgram.listgen(intArray65);
        List list78 = AppendPairProgram.listgen(intArray65);
        List list79 = AppendPairProgram.listgen(intArray65);
        List list80 = AppendPairProgram.listgen(intArray65);
        List list81 = AppendPairProgram.listgen(intArray65);
        appendPairProgram0.TestStudentSubmission(list81, (int) (byte) 1);
        java.lang.Class<?> wildcardClass84 = list81.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10]");
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10]");
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[10]");
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(list61);
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[]");
        org.junit.Assert.assertNotNull(list66);
        org.junit.Assert.assertNotNull(list67);
        org.junit.Assert.assertNotNull(list68);
        org.junit.Assert.assertNotNull(list69);
        org.junit.Assert.assertNotNull(list70);
        org.junit.Assert.assertNotNull(list71);
        org.junit.Assert.assertNotNull(list72);
        org.junit.Assert.assertNotNull(list73);
        org.junit.Assert.assertNotNull(list74);
        org.junit.Assert.assertNotNull(list75);
        org.junit.Assert.assertNotNull(list76);
        org.junit.Assert.assertNotNull(list77);
        org.junit.Assert.assertNotNull(list78);
        org.junit.Assert.assertNotNull(list79);
        org.junit.Assert.assertNotNull(list80);
        org.junit.Assert.assertNotNull(list81);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0766");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray6 = new int[] { 0 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list11, (int) (short) -1);
        java.lang.Class<?> wildcardClass14 = list11.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0767");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray15 = new int[] {};
        List list16 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 100);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        List list24 = AppendPairProgram.listgen(intArray19);
        List list25 = AppendPairProgram.listgen(intArray19);
        List list26 = AppendPairProgram.listgen(intArray19);
        List list27 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list27, (int) (short) -1);
        int[] intArray31 = new int[] { (byte) 10 };
        List list32 = AppendPairProgram.listgen(intArray31);
        List list33 = AppendPairProgram.listgen(intArray31);
        List list34 = AppendPairProgram.listgen(intArray31);
        List list35 = AppendPairProgram.listgen(intArray31);
        List list36 = AppendPairProgram.listgen(intArray31);
        List list37 = AppendPairProgram.listgen(intArray31);
        List list38 = AppendPairProgram.listgen(intArray31);
        List list39 = AppendPairProgram.listgen(intArray31);
        List list40 = AppendPairProgram.listgen(intArray31);
        appendPairProgram0.TestStudentSubmission(list40, (int) (short) 100);
        int[] intArray44 = new int[] { (byte) 10 };
        List list45 = AppendPairProgram.listgen(intArray44);
        List list46 = AppendPairProgram.listgen(intArray44);
        List list47 = AppendPairProgram.listgen(intArray44);
        List list48 = AppendPairProgram.listgen(intArray44);
        List list49 = AppendPairProgram.listgen(intArray44);
        List list50 = AppendPairProgram.listgen(intArray44);
        List list51 = AppendPairProgram.listgen(intArray44);
        List list52 = AppendPairProgram.listgen(intArray44);
        List list53 = AppendPairProgram.listgen(intArray44);
        List list54 = AppendPairProgram.listgen(intArray44);
        appendPairProgram0.TestStudentSubmission(list54, (int) (byte) 100);
        java.lang.Class<?> wildcardClass57 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10]");
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[10]");
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0768");
        int[] intArray6 = new int[] { (short) -1, '#', '4', (short) -1, (short) 100, (byte) -1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass21 = list20.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 35, 52, -1, 100, -1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0769");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray12 = new int[] { (byte) 10 };
        List list13 = AppendPairProgram.listgen(intArray12);
        List list14 = AppendPairProgram.listgen(intArray12);
        List list15 = AppendPairProgram.listgen(intArray12);
        appendPairProgram0.TestStudentSubmission(list15, 10);
        int[] intArray19 = new int[] { (byte) 10 };
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        List list24 = AppendPairProgram.listgen(intArray19);
        List list25 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list25, (int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10]");
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0770");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, 1);
        int[] intArray17 = new int[] { (byte) 10 };
        List list18 = AppendPairProgram.listgen(intArray17);
        List list19 = AppendPairProgram.listgen(intArray17);
        List list20 = AppendPairProgram.listgen(intArray17);
        List list21 = AppendPairProgram.listgen(intArray17);
        List list22 = AppendPairProgram.listgen(intArray17);
        List list23 = AppendPairProgram.listgen(intArray17);
        List list24 = AppendPairProgram.listgen(intArray17);
        List list25 = AppendPairProgram.listgen(intArray17);
        appendPairProgram0.TestStudentSubmission(list25, (int) (short) 0);
        int[] intArray29 = new int[] { (byte) 10 };
        List list30 = AppendPairProgram.listgen(intArray29);
        List list31 = AppendPairProgram.listgen(intArray29);
        appendPairProgram0.TestStudentSubmission(list31, (-1));
        int[] intArray35 = new int[] { (byte) 10 };
        List list36 = AppendPairProgram.listgen(intArray35);
        List list37 = AppendPairProgram.listgen(intArray35);
        List list38 = AppendPairProgram.listgen(intArray35);
        List list39 = AppendPairProgram.listgen(intArray35);
        List list40 = AppendPairProgram.listgen(intArray35);
        List list41 = AppendPairProgram.listgen(intArray35);
        List list42 = AppendPairProgram.listgen(intArray35);
        List list43 = AppendPairProgram.listgen(intArray35);
        appendPairProgram0.TestStudentSubmission(list43, (int) (short) -1);
        int[] intArray46 = new int[] {};
        List list47 = AppendPairProgram.listgen(intArray46);
        List list48 = AppendPairProgram.listgen(intArray46);
        List list49 = AppendPairProgram.listgen(intArray46);
        List list50 = AppendPairProgram.listgen(intArray46);
        List list51 = AppendPairProgram.listgen(intArray46);
        List list52 = AppendPairProgram.listgen(intArray46);
        List list53 = AppendPairProgram.listgen(intArray46);
        List list54 = AppendPairProgram.listgen(intArray46);
        List list55 = AppendPairProgram.listgen(intArray46);
        List list56 = AppendPairProgram.listgen(intArray46);
        List list57 = AppendPairProgram.listgen(intArray46);
        List list58 = AppendPairProgram.listgen(intArray46);
        List list59 = AppendPairProgram.listgen(intArray46);
        List list60 = AppendPairProgram.listgen(intArray46);
        List list61 = AppendPairProgram.listgen(intArray46);
        List list62 = AppendPairProgram.listgen(intArray46);
        appendPairProgram0.TestStudentSubmission(list62, (-1));
        int[] intArray65 = new int[] {};
        List list66 = AppendPairProgram.listgen(intArray65);
        List list67 = AppendPairProgram.listgen(intArray65);
        List list68 = AppendPairProgram.listgen(intArray65);
        List list69 = AppendPairProgram.listgen(intArray65);
        List list70 = AppendPairProgram.listgen(intArray65);
        List list71 = AppendPairProgram.listgen(intArray65);
        List list72 = AppendPairProgram.listgen(intArray65);
        List list73 = AppendPairProgram.listgen(intArray65);
        List list74 = AppendPairProgram.listgen(intArray65);
        List list75 = AppendPairProgram.listgen(intArray65);
        List list76 = AppendPairProgram.listgen(intArray65);
        List list77 = AppendPairProgram.listgen(intArray65);
        List list78 = AppendPairProgram.listgen(intArray65);
        List list79 = AppendPairProgram.listgen(intArray65);
        List list80 = AppendPairProgram.listgen(intArray65);
        List list81 = AppendPairProgram.listgen(intArray65);
        appendPairProgram0.TestStudentSubmission(list81, (int) (byte) 1);
        java.lang.Class<?> wildcardClass84 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10]");
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10]");
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[10]");
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(list61);
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[]");
        org.junit.Assert.assertNotNull(list66);
        org.junit.Assert.assertNotNull(list67);
        org.junit.Assert.assertNotNull(list68);
        org.junit.Assert.assertNotNull(list69);
        org.junit.Assert.assertNotNull(list70);
        org.junit.Assert.assertNotNull(list71);
        org.junit.Assert.assertNotNull(list72);
        org.junit.Assert.assertNotNull(list73);
        org.junit.Assert.assertNotNull(list74);
        org.junit.Assert.assertNotNull(list75);
        org.junit.Assert.assertNotNull(list76);
        org.junit.Assert.assertNotNull(list77);
        org.junit.Assert.assertNotNull(list78);
        org.junit.Assert.assertNotNull(list79);
        org.junit.Assert.assertNotNull(list80);
        org.junit.Assert.assertNotNull(list81);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0771");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray12 = new int[] { (byte) 10 };
        List list13 = AppendPairProgram.listgen(intArray12);
        List list14 = AppendPairProgram.listgen(intArray12);
        List list15 = AppendPairProgram.listgen(intArray12);
        appendPairProgram0.TestStudentSubmission(list15, 10);
        int[] intArray18 = new int[] {};
        List list19 = AppendPairProgram.listgen(intArray18);
        List list20 = AppendPairProgram.listgen(intArray18);
        List list21 = AppendPairProgram.listgen(intArray18);
        List list22 = AppendPairProgram.listgen(intArray18);
        List list23 = AppendPairProgram.listgen(intArray18);
        appendPairProgram0.TestStudentSubmission(list23, 0);
        int[] intArray26 = new int[] {};
        List list27 = AppendPairProgram.listgen(intArray26);
        List list28 = AppendPairProgram.listgen(intArray26);
        List list29 = AppendPairProgram.listgen(intArray26);
        List list30 = AppendPairProgram.listgen(intArray26);
        List list31 = AppendPairProgram.listgen(intArray26);
        List list32 = AppendPairProgram.listgen(intArray26);
        List list33 = AppendPairProgram.listgen(intArray26);
        List list34 = AppendPairProgram.listgen(intArray26);
        List list35 = AppendPairProgram.listgen(intArray26);
        List list36 = AppendPairProgram.listgen(intArray26);
        List list37 = AppendPairProgram.listgen(intArray26);
        appendPairProgram0.TestStudentSubmission(list37, (int) (byte) 10);
        List list40 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list40, 1);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10]");
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
    }

    @Test
    public void test0772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0772");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list24, (int) (short) 0);
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list29, 100);
        int[] intArray33 = new int[] { (byte) 10 };
        List list34 = AppendPairProgram.listgen(intArray33);
        appendPairProgram0.TestStudentSubmission(list34, (-1));
        int[] intArray37 = new int[] {};
        List list38 = AppendPairProgram.listgen(intArray37);
        List list39 = AppendPairProgram.listgen(intArray37);
        List list40 = AppendPairProgram.listgen(intArray37);
        List list41 = AppendPairProgram.listgen(intArray37);
        List list42 = AppendPairProgram.listgen(intArray37);
        List list43 = AppendPairProgram.listgen(intArray37);
        List list44 = AppendPairProgram.listgen(intArray37);
        List list45 = AppendPairProgram.listgen(intArray37);
        List list46 = AppendPairProgram.listgen(intArray37);
        List list47 = AppendPairProgram.listgen(intArray37);
        List list48 = AppendPairProgram.listgen(intArray37);
        List list49 = AppendPairProgram.listgen(intArray37);
        List list50 = AppendPairProgram.listgen(intArray37);
        List list51 = AppendPairProgram.listgen(intArray37);
        appendPairProgram0.TestStudentSubmission(list51, (int) (short) 100);
        int[] intArray55 = new int[] { (byte) 10 };
        List list56 = AppendPairProgram.listgen(intArray55);
        List list57 = AppendPairProgram.listgen(intArray55);
        List list58 = AppendPairProgram.listgen(intArray55);
        List list59 = AppendPairProgram.listgen(intArray55);
        List list60 = AppendPairProgram.listgen(intArray55);
        List list61 = AppendPairProgram.listgen(intArray55);
        List list62 = AppendPairProgram.listgen(intArray55);
        List list63 = AppendPairProgram.listgen(intArray55);
        List list64 = AppendPairProgram.listgen(intArray55);
        List list65 = AppendPairProgram.listgen(intArray55);
        appendPairProgram0.TestStudentSubmission(list65, 1);
        java.lang.Class<?> wildcardClass68 = list65.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10]");
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[]");
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[10]");
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(list61);
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(list63);
        org.junit.Assert.assertNotNull(list64);
        org.junit.Assert.assertNotNull(list65);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0773");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray10 = new int[] { (byte) 10 };
        List list11 = AppendPairProgram.listgen(intArray10);
        List list12 = AppendPairProgram.listgen(intArray10);
        List list13 = AppendPairProgram.listgen(intArray10);
        List list14 = AppendPairProgram.listgen(intArray10);
        List list15 = AppendPairProgram.listgen(intArray10);
        List list16 = AppendPairProgram.listgen(intArray10);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 1);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        List list24 = AppendPairProgram.listgen(intArray19);
        List list25 = AppendPairProgram.listgen(intArray19);
        List list26 = AppendPairProgram.listgen(intArray19);
        List list27 = AppendPairProgram.listgen(intArray19);
        List list28 = AppendPairProgram.listgen(intArray19);
        List list29 = AppendPairProgram.listgen(intArray19);
        List list30 = AppendPairProgram.listgen(intArray19);
        List list31 = AppendPairProgram.listgen(intArray19);
        List list32 = AppendPairProgram.listgen(intArray19);
        List list33 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list33, (int) (byte) 1);
        int[] intArray37 = new int[] { (byte) 10 };
        List list38 = AppendPairProgram.listgen(intArray37);
        List list39 = AppendPairProgram.listgen(intArray37);
        List list40 = AppendPairProgram.listgen(intArray37);
        List list41 = AppendPairProgram.listgen(intArray37);
        List list42 = AppendPairProgram.listgen(intArray37);
        List list43 = AppendPairProgram.listgen(intArray37);
        List list44 = AppendPairProgram.listgen(intArray37);
        List list45 = AppendPairProgram.listgen(intArray37);
        List list46 = AppendPairProgram.listgen(intArray37);
        List list47 = AppendPairProgram.listgen(intArray37);
        appendPairProgram0.TestStudentSubmission(list47, (int) (byte) 100);
        int[] intArray51 = new int[] { (byte) 10 };
        List list52 = AppendPairProgram.listgen(intArray51);
        List list53 = AppendPairProgram.listgen(intArray51);
        List list54 = AppendPairProgram.listgen(intArray51);
        List list55 = AppendPairProgram.listgen(intArray51);
        appendPairProgram0.TestStudentSubmission(list55, (int) (byte) 10);
        int[] intArray58 = new int[] {};
        List list59 = AppendPairProgram.listgen(intArray58);
        List list60 = AppendPairProgram.listgen(intArray58);
        List list61 = AppendPairProgram.listgen(intArray58);
        List list62 = AppendPairProgram.listgen(intArray58);
        List list63 = AppendPairProgram.listgen(intArray58);
        List list64 = AppendPairProgram.listgen(intArray58);
        List list65 = AppendPairProgram.listgen(intArray58);
        List list66 = AppendPairProgram.listgen(intArray58);
        List list67 = AppendPairProgram.listgen(intArray58);
        List list68 = AppendPairProgram.listgen(intArray58);
        List list69 = AppendPairProgram.listgen(intArray58);
        List list70 = AppendPairProgram.listgen(intArray58);
        List list71 = AppendPairProgram.listgen(intArray58);
        List list72 = AppendPairProgram.listgen(intArray58);
        List list73 = AppendPairProgram.listgen(intArray58);
        List list74 = AppendPairProgram.listgen(intArray58);
        appendPairProgram0.TestStudentSubmission(list74, 1);
        java.lang.Class<?> wildcardClass77 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10]");
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[10]");
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[10]");
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[]");
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(list61);
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(list63);
        org.junit.Assert.assertNotNull(list64);
        org.junit.Assert.assertNotNull(list65);
        org.junit.Assert.assertNotNull(list66);
        org.junit.Assert.assertNotNull(list67);
        org.junit.Assert.assertNotNull(list68);
        org.junit.Assert.assertNotNull(list69);
        org.junit.Assert.assertNotNull(list70);
        org.junit.Assert.assertNotNull(list71);
        org.junit.Assert.assertNotNull(list72);
        org.junit.Assert.assertNotNull(list73);
        org.junit.Assert.assertNotNull(list74);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0774");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) -1);
        int[] intArray14 = new int[] {};
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 10);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        List list24 = AppendPairProgram.listgen(intArray19);
        List list25 = AppendPairProgram.listgen(intArray19);
        List list26 = AppendPairProgram.listgen(intArray19);
        List list27 = AppendPairProgram.listgen(intArray19);
        List list28 = AppendPairProgram.listgen(intArray19);
        List list29 = AppendPairProgram.listgen(intArray19);
        List list30 = AppendPairProgram.listgen(intArray19);
        List list31 = AppendPairProgram.listgen(intArray19);
        List list32 = AppendPairProgram.listgen(intArray19);
        List list33 = AppendPairProgram.listgen(intArray19);
        List list34 = AppendPairProgram.listgen(intArray19);
        List list35 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list35, 0);
        List list38 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list38, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
    }

    @Test
    public void test0775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0775");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        List list12 = AppendPairProgram.listgen(intArray9);
        List list13 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        List list27 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list27, 100);
        java.lang.Class<?> wildcardClass30 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0776");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 10);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        List list14 = AppendPairProgram.listgen(intArray11);
        List list15 = AppendPairProgram.listgen(intArray11);
        List list16 = AppendPairProgram.listgen(intArray11);
        List list17 = AppendPairProgram.listgen(intArray11);
        List list18 = AppendPairProgram.listgen(intArray11);
        List list19 = AppendPairProgram.listgen(intArray11);
        List list20 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list20, 1);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
    }

    @Test
    public void test0777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0777");
        int[] intArray1 = new int[] { (byte) 10 };
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        List list7 = AppendPairProgram.listgen(intArray1);
        List list8 = AppendPairProgram.listgen(intArray1);
        List list9 = AppendPairProgram.listgen(intArray1);
        List list10 = AppendPairProgram.listgen(intArray1);
        List list11 = AppendPairProgram.listgen(intArray1);
        List list12 = AppendPairProgram.listgen(intArray1);
        List list13 = AppendPairProgram.listgen(intArray1);
        List list14 = AppendPairProgram.listgen(intArray1);
        List list15 = AppendPairProgram.listgen(intArray1);
        List list16 = AppendPairProgram.listgen(intArray1);
        List list17 = AppendPairProgram.listgen(intArray1);
        List list18 = AppendPairProgram.listgen(intArray1);
        java.lang.Class<?> wildcardClass19 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[10]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0778");
        int[] intArray3 = new int[] { 0, '#', (short) -1 };
        List list4 = AppendPairProgram.listgen(intArray3);
        List list5 = AppendPairProgram.listgen(intArray3);
        List list6 = AppendPairProgram.listgen(intArray3);
        List list7 = AppendPairProgram.listgen(intArray3);
        List list8 = AppendPairProgram.listgen(intArray3);
        List list9 = AppendPairProgram.listgen(intArray3);
        List list10 = AppendPairProgram.listgen(intArray3);
        List list11 = AppendPairProgram.listgen(intArray3);
        List list12 = AppendPairProgram.listgen(intArray3);
        List list13 = AppendPairProgram.listgen(intArray3);
        List list14 = AppendPairProgram.listgen(intArray3);
        List list15 = AppendPairProgram.listgen(intArray3);
        List list16 = AppendPairProgram.listgen(intArray3);
        List list17 = AppendPairProgram.listgen(intArray3);
        List list18 = AppendPairProgram.listgen(intArray3);
        List list19 = AppendPairProgram.listgen(intArray3);
        List list20 = AppendPairProgram.listgen(intArray3);
        List list21 = AppendPairProgram.listgen(intArray3);
        List list22 = AppendPairProgram.listgen(intArray3);
        List list23 = AppendPairProgram.listgen(intArray3);
        List list24 = AppendPairProgram.listgen(intArray3);
        List list25 = AppendPairProgram.listgen(intArray3);
        java.lang.Class<?> wildcardClass26 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[0, 35, -1]");
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0779");
        int[] intArray6 = new int[] { (short) 0, (byte) 0, (byte) 1, 0, (-1), (byte) 100 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        List list25 = AppendPairProgram.listgen(intArray6);
        List list26 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass27 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0, 1, 0, -1, 100]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0780");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, 1);
        int[] intArray17 = new int[] { (byte) 10 };
        List list18 = AppendPairProgram.listgen(intArray17);
        List list19 = AppendPairProgram.listgen(intArray17);
        List list20 = AppendPairProgram.listgen(intArray17);
        List list21 = AppendPairProgram.listgen(intArray17);
        List list22 = AppendPairProgram.listgen(intArray17);
        List list23 = AppendPairProgram.listgen(intArray17);
        List list24 = AppendPairProgram.listgen(intArray17);
        List list25 = AppendPairProgram.listgen(intArray17);
        appendPairProgram0.TestStudentSubmission(list25, (int) (short) 0);
        int[] intArray29 = new int[] { (byte) 10 };
        List list30 = AppendPairProgram.listgen(intArray29);
        List list31 = AppendPairProgram.listgen(intArray29);
        appendPairProgram0.TestStudentSubmission(list31, (-1));
        int[] intArray35 = new int[] { (byte) 10 };
        List list36 = AppendPairProgram.listgen(intArray35);
        List list37 = AppendPairProgram.listgen(intArray35);
        List list38 = AppendPairProgram.listgen(intArray35);
        List list39 = AppendPairProgram.listgen(intArray35);
        List list40 = AppendPairProgram.listgen(intArray35);
        List list41 = AppendPairProgram.listgen(intArray35);
        List list42 = AppendPairProgram.listgen(intArray35);
        List list43 = AppendPairProgram.listgen(intArray35);
        appendPairProgram0.TestStudentSubmission(list43, (int) (short) -1);
        int[] intArray46 = new int[] {};
        List list47 = AppendPairProgram.listgen(intArray46);
        List list48 = AppendPairProgram.listgen(intArray46);
        List list49 = AppendPairProgram.listgen(intArray46);
        List list50 = AppendPairProgram.listgen(intArray46);
        List list51 = AppendPairProgram.listgen(intArray46);
        List list52 = AppendPairProgram.listgen(intArray46);
        List list53 = AppendPairProgram.listgen(intArray46);
        List list54 = AppendPairProgram.listgen(intArray46);
        List list55 = AppendPairProgram.listgen(intArray46);
        List list56 = AppendPairProgram.listgen(intArray46);
        List list57 = AppendPairProgram.listgen(intArray46);
        List list58 = AppendPairProgram.listgen(intArray46);
        List list59 = AppendPairProgram.listgen(intArray46);
        List list60 = AppendPairProgram.listgen(intArray46);
        List list61 = AppendPairProgram.listgen(intArray46);
        List list62 = AppendPairProgram.listgen(intArray46);
        appendPairProgram0.TestStudentSubmission(list62, (-1));
        int[] intArray66 = new int[] { 0 };
        List list67 = AppendPairProgram.listgen(intArray66);
        List list68 = AppendPairProgram.listgen(intArray66);
        List list69 = AppendPairProgram.listgen(intArray66);
        List list70 = AppendPairProgram.listgen(intArray66);
        List list71 = AppendPairProgram.listgen(intArray66);
        appendPairProgram0.TestStudentSubmission(list71, (int) (byte) 1);
        java.lang.Class<?> wildcardClass74 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10]");
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10]");
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[10]");
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(list61);
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0]");
        org.junit.Assert.assertNotNull(list67);
        org.junit.Assert.assertNotNull(list68);
        org.junit.Assert.assertNotNull(list69);
        org.junit.Assert.assertNotNull(list70);
        org.junit.Assert.assertNotNull(list71);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0781");
        int[] intArray2 = new int[] { 10, (byte) 0 };
        List list3 = AppendPairProgram.listgen(intArray2);
        List list4 = AppendPairProgram.listgen(intArray2);
        List list5 = AppendPairProgram.listgen(intArray2);
        List list6 = AppendPairProgram.listgen(intArray2);
        List list7 = AppendPairProgram.listgen(intArray2);
        List list8 = AppendPairProgram.listgen(intArray2);
        java.lang.Class<?> wildcardClass9 = list8.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[10, 0]");
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0782");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        List list9 = AppendPairProgram.listgen(intArray5);
        List list10 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list10, 100);
        int[] intArray14 = new int[] { (byte) 10 };
        List list15 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list15, (int) '#');
        int[] intArray19 = new int[] { (byte) 10 };
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        List list24 = AppendPairProgram.listgen(intArray19);
        List list25 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list25, (int) (short) 1);
        java.lang.Class<?> wildcardClass28 = list25.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0783");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, (int) '4');
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list26, (int) (byte) 1);
        int[] intArray30 = new int[] { 0 };
        List list31 = AppendPairProgram.listgen(intArray30);
        List list32 = AppendPairProgram.listgen(intArray30);
        appendPairProgram0.TestStudentSubmission(list32, (int) 'a');
        int[] intArray35 = new int[] {};
        List list36 = AppendPairProgram.listgen(intArray35);
        List list37 = AppendPairProgram.listgen(intArray35);
        List list38 = AppendPairProgram.listgen(intArray35);
        List list39 = AppendPairProgram.listgen(intArray35);
        List list40 = AppendPairProgram.listgen(intArray35);
        List list41 = AppendPairProgram.listgen(intArray35);
        List list42 = AppendPairProgram.listgen(intArray35);
        List list43 = AppendPairProgram.listgen(intArray35);
        List list44 = AppendPairProgram.listgen(intArray35);
        appendPairProgram0.TestStudentSubmission(list44, (int) '#');
        List list47 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list47, 10);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0]");
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[]");
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
    }

    @Test
    public void test0784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0784");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list24, (int) (short) 0);
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list29, 100);
        int[] intArray32 = new int[] {};
        List list33 = AppendPairProgram.listgen(intArray32);
        List list34 = AppendPairProgram.listgen(intArray32);
        List list35 = AppendPairProgram.listgen(intArray32);
        List list36 = AppendPairProgram.listgen(intArray32);
        List list37 = AppendPairProgram.listgen(intArray32);
        List list38 = AppendPairProgram.listgen(intArray32);
        List list39 = AppendPairProgram.listgen(intArray32);
        List list40 = AppendPairProgram.listgen(intArray32);
        appendPairProgram0.TestStudentSubmission(list40, (int) (byte) 100);
        List list43 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list43, 0);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[]");
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
    }

    @Test
    public void test0785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0785");
        int[] intArray6 = new int[] { (byte) 0, (short) -1, ' ', 'a', (byte) 100, (byte) 10 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass22 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, -1, 32, 97, 100, 10]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0786");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, (int) '4');
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list26, (int) (byte) 1);
        int[] intArray30 = new int[] { 0 };
        List list31 = AppendPairProgram.listgen(intArray30);
        List list32 = AppendPairProgram.listgen(intArray30);
        appendPairProgram0.TestStudentSubmission(list32, (int) 'a');
        List list35 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list35, (int) '#');
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0]");
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
    }

    @Test
    public void test0787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0787");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, (int) (byte) 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list10, (-1));
        int[] intArray13 = new int[] {};
        List list14 = AppendPairProgram.listgen(intArray13);
        List list15 = AppendPairProgram.listgen(intArray13);
        List list16 = AppendPairProgram.listgen(intArray13);
        List list17 = AppendPairProgram.listgen(intArray13);
        appendPairProgram0.TestStudentSubmission(list17, 0);
        int[] intArray21 = new int[] { 0 };
        List list22 = AppendPairProgram.listgen(intArray21);
        List list23 = AppendPairProgram.listgen(intArray21);
        List list24 = AppendPairProgram.listgen(intArray21);
        List list25 = AppendPairProgram.listgen(intArray21);
        List list26 = AppendPairProgram.listgen(intArray21);
        appendPairProgram0.TestStudentSubmission(list26, (int) (short) 10);
        java.lang.Class<?> wildcardClass29 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0]");
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0788");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) 0);
        int[] intArray15 = new int[] { 0 };
        List list16 = AppendPairProgram.listgen(intArray15);
        List list17 = AppendPairProgram.listgen(intArray15);
        List list18 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list18, (int) (byte) 10);
        List list21 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list21, (int) '#');
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
    }

    @Test
    public void test0789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0789");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) -1);
        int[] intArray14 = new int[] {};
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 10);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list23, (int) (byte) 0);
        int[] intArray26 = new int[] {};
        List list27 = AppendPairProgram.listgen(intArray26);
        List list28 = AppendPairProgram.listgen(intArray26);
        List list29 = AppendPairProgram.listgen(intArray26);
        List list30 = AppendPairProgram.listgen(intArray26);
        List list31 = AppendPairProgram.listgen(intArray26);
        List list32 = AppendPairProgram.listgen(intArray26);
        appendPairProgram0.TestStudentSubmission(list32, 100);
        int[] intArray36 = new int[] { (byte) 10 };
        List list37 = AppendPairProgram.listgen(intArray36);
        List list38 = AppendPairProgram.listgen(intArray36);
        List list39 = AppendPairProgram.listgen(intArray36);
        List list40 = AppendPairProgram.listgen(intArray36);
        List list41 = AppendPairProgram.listgen(intArray36);
        List list42 = AppendPairProgram.listgen(intArray36);
        List list43 = AppendPairProgram.listgen(intArray36);
        appendPairProgram0.TestStudentSubmission(list43, 100);
        int[] intArray46 = new int[] {};
        List list47 = AppendPairProgram.listgen(intArray46);
        List list48 = AppendPairProgram.listgen(intArray46);
        List list49 = AppendPairProgram.listgen(intArray46);
        List list50 = AppendPairProgram.listgen(intArray46);
        List list51 = AppendPairProgram.listgen(intArray46);
        appendPairProgram0.TestStudentSubmission(list51, 100);
        int[] intArray54 = new int[] {};
        List list55 = AppendPairProgram.listgen(intArray54);
        List list56 = AppendPairProgram.listgen(intArray54);
        List list57 = AppendPairProgram.listgen(intArray54);
        appendPairProgram0.TestStudentSubmission(list57, 100);
        int[] intArray61 = new int[] { (byte) 10 };
        List list62 = AppendPairProgram.listgen(intArray61);
        List list63 = AppendPairProgram.listgen(intArray61);
        List list64 = AppendPairProgram.listgen(intArray61);
        List list65 = AppendPairProgram.listgen(intArray61);
        List list66 = AppendPairProgram.listgen(intArray61);
        List list67 = AppendPairProgram.listgen(intArray61);
        List list68 = AppendPairProgram.listgen(intArray61);
        List list69 = AppendPairProgram.listgen(intArray61);
        List list70 = AppendPairProgram.listgen(intArray61);
        List list71 = AppendPairProgram.listgen(intArray61);
        List list72 = AppendPairProgram.listgen(intArray61);
        List list73 = AppendPairProgram.listgen(intArray61);
        List list74 = AppendPairProgram.listgen(intArray61);
        List list75 = AppendPairProgram.listgen(intArray61);
        appendPairProgram0.TestStudentSubmission(list75, (int) (byte) 100);
        int[] intArray78 = new int[] {};
        List list79 = AppendPairProgram.listgen(intArray78);
        List list80 = AppendPairProgram.listgen(intArray78);
        List list81 = AppendPairProgram.listgen(intArray78);
        List list82 = AppendPairProgram.listgen(intArray78);
        List list83 = AppendPairProgram.listgen(intArray78);
        appendPairProgram0.TestStudentSubmission(list83, (int) (byte) 1);
        List list86 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list86, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[10]");
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[]");
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[10]");
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(list63);
        org.junit.Assert.assertNotNull(list64);
        org.junit.Assert.assertNotNull(list65);
        org.junit.Assert.assertNotNull(list66);
        org.junit.Assert.assertNotNull(list67);
        org.junit.Assert.assertNotNull(list68);
        org.junit.Assert.assertNotNull(list69);
        org.junit.Assert.assertNotNull(list70);
        org.junit.Assert.assertNotNull(list71);
        org.junit.Assert.assertNotNull(list72);
        org.junit.Assert.assertNotNull(list73);
        org.junit.Assert.assertNotNull(list74);
        org.junit.Assert.assertNotNull(list75);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[]");
        org.junit.Assert.assertNotNull(list79);
        org.junit.Assert.assertNotNull(list80);
        org.junit.Assert.assertNotNull(list81);
        org.junit.Assert.assertNotNull(list82);
        org.junit.Assert.assertNotNull(list83);
    }

    @Test
    public void test0790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0790");
        int[] intArray4 = new int[] { 'a', (byte) -1, 100, (byte) 10 };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        List list7 = AppendPairProgram.listgen(intArray4);
        List list8 = AppendPairProgram.listgen(intArray4);
        List list9 = AppendPairProgram.listgen(intArray4);
        List list10 = AppendPairProgram.listgen(intArray4);
        List list11 = AppendPairProgram.listgen(intArray4);
        java.lang.Class<?> wildcardClass12 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[97, -1, 100, 10]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0791");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) -1);
        int[] intArray14 = new int[] {};
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 10);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list23, (int) (byte) 0);
        int[] intArray26 = new int[] {};
        List list27 = AppendPairProgram.listgen(intArray26);
        List list28 = AppendPairProgram.listgen(intArray26);
        List list29 = AppendPairProgram.listgen(intArray26);
        List list30 = AppendPairProgram.listgen(intArray26);
        List list31 = AppendPairProgram.listgen(intArray26);
        List list32 = AppendPairProgram.listgen(intArray26);
        appendPairProgram0.TestStudentSubmission(list32, 100);
        int[] intArray36 = new int[] { (byte) 10 };
        List list37 = AppendPairProgram.listgen(intArray36);
        List list38 = AppendPairProgram.listgen(intArray36);
        List list39 = AppendPairProgram.listgen(intArray36);
        List list40 = AppendPairProgram.listgen(intArray36);
        List list41 = AppendPairProgram.listgen(intArray36);
        List list42 = AppendPairProgram.listgen(intArray36);
        List list43 = AppendPairProgram.listgen(intArray36);
        appendPairProgram0.TestStudentSubmission(list43, 100);
        int[] intArray46 = new int[] {};
        List list47 = AppendPairProgram.listgen(intArray46);
        List list48 = AppendPairProgram.listgen(intArray46);
        List list49 = AppendPairProgram.listgen(intArray46);
        List list50 = AppendPairProgram.listgen(intArray46);
        List list51 = AppendPairProgram.listgen(intArray46);
        appendPairProgram0.TestStudentSubmission(list51, 100);
        int[] intArray54 = new int[] {};
        List list55 = AppendPairProgram.listgen(intArray54);
        List list56 = AppendPairProgram.listgen(intArray54);
        List list57 = AppendPairProgram.listgen(intArray54);
        appendPairProgram0.TestStudentSubmission(list57, 100);
        int[] intArray61 = new int[] { (byte) 10 };
        List list62 = AppendPairProgram.listgen(intArray61);
        List list63 = AppendPairProgram.listgen(intArray61);
        List list64 = AppendPairProgram.listgen(intArray61);
        List list65 = AppendPairProgram.listgen(intArray61);
        List list66 = AppendPairProgram.listgen(intArray61);
        List list67 = AppendPairProgram.listgen(intArray61);
        List list68 = AppendPairProgram.listgen(intArray61);
        List list69 = AppendPairProgram.listgen(intArray61);
        List list70 = AppendPairProgram.listgen(intArray61);
        List list71 = AppendPairProgram.listgen(intArray61);
        List list72 = AppendPairProgram.listgen(intArray61);
        List list73 = AppendPairProgram.listgen(intArray61);
        List list74 = AppendPairProgram.listgen(intArray61);
        List list75 = AppendPairProgram.listgen(intArray61);
        appendPairProgram0.TestStudentSubmission(list75, (int) (byte) 100);
        List list78 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list78, (int) '4');
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[10]");
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[]");
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[10]");
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(list63);
        org.junit.Assert.assertNotNull(list64);
        org.junit.Assert.assertNotNull(list65);
        org.junit.Assert.assertNotNull(list66);
        org.junit.Assert.assertNotNull(list67);
        org.junit.Assert.assertNotNull(list68);
        org.junit.Assert.assertNotNull(list69);
        org.junit.Assert.assertNotNull(list70);
        org.junit.Assert.assertNotNull(list71);
        org.junit.Assert.assertNotNull(list72);
        org.junit.Assert.assertNotNull(list73);
        org.junit.Assert.assertNotNull(list74);
        org.junit.Assert.assertNotNull(list75);
    }

    @Test
    public void test0792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0792");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, (int) (byte) 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list10, (-1));
        int[] intArray13 = new int[] {};
        List list14 = AppendPairProgram.listgen(intArray13);
        List list15 = AppendPairProgram.listgen(intArray13);
        List list16 = AppendPairProgram.listgen(intArray13);
        List list17 = AppendPairProgram.listgen(intArray13);
        List list18 = AppendPairProgram.listgen(intArray13);
        List list19 = AppendPairProgram.listgen(intArray13);
        List list20 = AppendPairProgram.listgen(intArray13);
        List list21 = AppendPairProgram.listgen(intArray13);
        List list22 = AppendPairProgram.listgen(intArray13);
        List list23 = AppendPairProgram.listgen(intArray13);
        List list24 = AppendPairProgram.listgen(intArray13);
        List list25 = AppendPairProgram.listgen(intArray13);
        List list26 = AppendPairProgram.listgen(intArray13);
        List list27 = AppendPairProgram.listgen(intArray13);
        appendPairProgram0.TestStudentSubmission(list27, (int) (short) -1);
        int[] intArray31 = new int[] { (byte) 10 };
        List list32 = AppendPairProgram.listgen(intArray31);
        List list33 = AppendPairProgram.listgen(intArray31);
        List list34 = AppendPairProgram.listgen(intArray31);
        List list35 = AppendPairProgram.listgen(intArray31);
        List list36 = AppendPairProgram.listgen(intArray31);
        List list37 = AppendPairProgram.listgen(intArray31);
        List list38 = AppendPairProgram.listgen(intArray31);
        List list39 = AppendPairProgram.listgen(intArray31);
        List list40 = AppendPairProgram.listgen(intArray31);
        List list41 = AppendPairProgram.listgen(intArray31);
        List list42 = AppendPairProgram.listgen(intArray31);
        List list43 = AppendPairProgram.listgen(intArray31);
        List list44 = AppendPairProgram.listgen(intArray31);
        List list45 = AppendPairProgram.listgen(intArray31);
        List list46 = AppendPairProgram.listgen(intArray31);
        appendPairProgram0.TestStudentSubmission(list46, 0);
        java.lang.Class<?> wildcardClass49 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10]");
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0793");
        int[] intArray6 = new int[] { (short) 0, (byte) 0, (byte) 1, 0, (-1), (byte) 100 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass23 = list22.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0, 1, 0, -1, 100]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0794");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 10);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        List list14 = AppendPairProgram.listgen(intArray11);
        List list15 = AppendPairProgram.listgen(intArray11);
        List list16 = AppendPairProgram.listgen(intArray11);
        List list17 = AppendPairProgram.listgen(intArray11);
        List list18 = AppendPairProgram.listgen(intArray11);
        List list19 = AppendPairProgram.listgen(intArray11);
        List list20 = AppendPairProgram.listgen(intArray11);
        List list21 = AppendPairProgram.listgen(intArray11);
        List list22 = AppendPairProgram.listgen(intArray11);
        List list23 = AppendPairProgram.listgen(intArray11);
        List list24 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list24, (int) (byte) 0);
        int[] intArray27 = new int[] {};
        List list28 = AppendPairProgram.listgen(intArray27);
        List list29 = AppendPairProgram.listgen(intArray27);
        appendPairProgram0.TestStudentSubmission(list29, (int) 'a');
        java.lang.Class<?> wildcardClass32 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[]");
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0795");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 10);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        List list14 = AppendPairProgram.listgen(intArray11);
        List list15 = AppendPairProgram.listgen(intArray11);
        List list16 = AppendPairProgram.listgen(intArray11);
        List list17 = AppendPairProgram.listgen(intArray11);
        List list18 = AppendPairProgram.listgen(intArray11);
        List list19 = AppendPairProgram.listgen(intArray11);
        List list20 = AppendPairProgram.listgen(intArray11);
        List list21 = AppendPairProgram.listgen(intArray11);
        List list22 = AppendPairProgram.listgen(intArray11);
        List list23 = AppendPairProgram.listgen(intArray11);
        List list24 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list24, (int) (byte) 0);
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        List list30 = AppendPairProgram.listgen(intArray28);
        List list31 = AppendPairProgram.listgen(intArray28);
        List list32 = AppendPairProgram.listgen(intArray28);
        List list33 = AppendPairProgram.listgen(intArray28);
        List list34 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list34, 1);
        int[] intArray38 = new int[] { (byte) 10 };
        List list39 = AppendPairProgram.listgen(intArray38);
        List list40 = AppendPairProgram.listgen(intArray38);
        List list41 = AppendPairProgram.listgen(intArray38);
        List list42 = AppendPairProgram.listgen(intArray38);
        List list43 = AppendPairProgram.listgen(intArray38);
        List list44 = AppendPairProgram.listgen(intArray38);
        List list45 = AppendPairProgram.listgen(intArray38);
        List list46 = AppendPairProgram.listgen(intArray38);
        List list47 = AppendPairProgram.listgen(intArray38);
        appendPairProgram0.TestStudentSubmission(list47, (int) (byte) 100);
        int[] intArray50 = new int[] {};
        List list51 = AppendPairProgram.listgen(intArray50);
        List list52 = AppendPairProgram.listgen(intArray50);
        List list53 = AppendPairProgram.listgen(intArray50);
        List list54 = AppendPairProgram.listgen(intArray50);
        List list55 = AppendPairProgram.listgen(intArray50);
        List list56 = AppendPairProgram.listgen(intArray50);
        List list57 = AppendPairProgram.listgen(intArray50);
        List list58 = AppendPairProgram.listgen(intArray50);
        List list59 = AppendPairProgram.listgen(intArray50);
        appendPairProgram0.TestStudentSubmission(list59, (int) '4');
        java.lang.Class<?> wildcardClass62 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[10]");
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[]");
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0796");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray17 = new int[] { 0 };
        List list18 = AppendPairProgram.listgen(intArray17);
        List list19 = AppendPairProgram.listgen(intArray17);
        List list20 = AppendPairProgram.listgen(intArray17);
        appendPairProgram0.TestStudentSubmission(list20, (int) (short) -1);
        int[] intArray24 = new int[] { (byte) 10 };
        List list25 = AppendPairProgram.listgen(intArray24);
        List list26 = AppendPairProgram.listgen(intArray24);
        List list27 = AppendPairProgram.listgen(intArray24);
        List list28 = AppendPairProgram.listgen(intArray24);
        List list29 = AppendPairProgram.listgen(intArray24);
        List list30 = AppendPairProgram.listgen(intArray24);
        List list31 = AppendPairProgram.listgen(intArray24);
        List list32 = AppendPairProgram.listgen(intArray24);
        List list33 = AppendPairProgram.listgen(intArray24);
        List list34 = AppendPairProgram.listgen(intArray24);
        List list35 = AppendPairProgram.listgen(intArray24);
        List list36 = AppendPairProgram.listgen(intArray24);
        List list37 = AppendPairProgram.listgen(intArray24);
        List list38 = AppendPairProgram.listgen(intArray24);
        List list39 = AppendPairProgram.listgen(intArray24);
        List list40 = AppendPairProgram.listgen(intArray24);
        appendPairProgram0.TestStudentSubmission(list40, 100);
        java.lang.Class<?> wildcardClass43 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0]");
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[10]");
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0797");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) -1);
        int[] intArray14 = new int[] {};
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 10);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list23, (int) (byte) 0);
        int[] intArray26 = new int[] {};
        List list27 = AppendPairProgram.listgen(intArray26);
        List list28 = AppendPairProgram.listgen(intArray26);
        List list29 = AppendPairProgram.listgen(intArray26);
        List list30 = AppendPairProgram.listgen(intArray26);
        List list31 = AppendPairProgram.listgen(intArray26);
        List list32 = AppendPairProgram.listgen(intArray26);
        appendPairProgram0.TestStudentSubmission(list32, 100);
        int[] intArray36 = new int[] { (byte) 10 };
        List list37 = AppendPairProgram.listgen(intArray36);
        List list38 = AppendPairProgram.listgen(intArray36);
        List list39 = AppendPairProgram.listgen(intArray36);
        List list40 = AppendPairProgram.listgen(intArray36);
        List list41 = AppendPairProgram.listgen(intArray36);
        List list42 = AppendPairProgram.listgen(intArray36);
        List list43 = AppendPairProgram.listgen(intArray36);
        appendPairProgram0.TestStudentSubmission(list43, 100);
        int[] intArray46 = new int[] {};
        List list47 = AppendPairProgram.listgen(intArray46);
        List list48 = AppendPairProgram.listgen(intArray46);
        List list49 = AppendPairProgram.listgen(intArray46);
        List list50 = AppendPairProgram.listgen(intArray46);
        List list51 = AppendPairProgram.listgen(intArray46);
        appendPairProgram0.TestStudentSubmission(list51, 100);
        int[] intArray54 = new int[] {};
        List list55 = AppendPairProgram.listgen(intArray54);
        List list56 = AppendPairProgram.listgen(intArray54);
        List list57 = AppendPairProgram.listgen(intArray54);
        appendPairProgram0.TestStudentSubmission(list57, 100);
        int[] intArray61 = new int[] { (byte) 10 };
        List list62 = AppendPairProgram.listgen(intArray61);
        List list63 = AppendPairProgram.listgen(intArray61);
        List list64 = AppendPairProgram.listgen(intArray61);
        List list65 = AppendPairProgram.listgen(intArray61);
        List list66 = AppendPairProgram.listgen(intArray61);
        List list67 = AppendPairProgram.listgen(intArray61);
        List list68 = AppendPairProgram.listgen(intArray61);
        List list69 = AppendPairProgram.listgen(intArray61);
        List list70 = AppendPairProgram.listgen(intArray61);
        List list71 = AppendPairProgram.listgen(intArray61);
        List list72 = AppendPairProgram.listgen(intArray61);
        List list73 = AppendPairProgram.listgen(intArray61);
        List list74 = AppendPairProgram.listgen(intArray61);
        List list75 = AppendPairProgram.listgen(intArray61);
        appendPairProgram0.TestStudentSubmission(list75, (int) (byte) 100);
        int[] intArray78 = new int[] {};
        List list79 = AppendPairProgram.listgen(intArray78);
        List list80 = AppendPairProgram.listgen(intArray78);
        List list81 = AppendPairProgram.listgen(intArray78);
        List list82 = AppendPairProgram.listgen(intArray78);
        List list83 = AppendPairProgram.listgen(intArray78);
        appendPairProgram0.TestStudentSubmission(list83, (int) (byte) 1);
        List list86 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list86, (int) '#');
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[10]");
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[]");
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[10]");
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(list63);
        org.junit.Assert.assertNotNull(list64);
        org.junit.Assert.assertNotNull(list65);
        org.junit.Assert.assertNotNull(list66);
        org.junit.Assert.assertNotNull(list67);
        org.junit.Assert.assertNotNull(list68);
        org.junit.Assert.assertNotNull(list69);
        org.junit.Assert.assertNotNull(list70);
        org.junit.Assert.assertNotNull(list71);
        org.junit.Assert.assertNotNull(list72);
        org.junit.Assert.assertNotNull(list73);
        org.junit.Assert.assertNotNull(list74);
        org.junit.Assert.assertNotNull(list75);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[]");
        org.junit.Assert.assertNotNull(list79);
        org.junit.Assert.assertNotNull(list80);
        org.junit.Assert.assertNotNull(list81);
        org.junit.Assert.assertNotNull(list82);
        org.junit.Assert.assertNotNull(list83);
    }

    @Test
    public void test0798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0798");
        int[] intArray4 = new int[] { (byte) 100, 'a', (byte) 0, 'a' };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        List list7 = AppendPairProgram.listgen(intArray4);
        List list8 = AppendPairProgram.listgen(intArray4);
        java.lang.Class<?> wildcardClass9 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, 97, 0, 97]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0799");
        int[] intArray4 = new int[] { 'a', (short) 10, (short) 100, (byte) 0 };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        List list7 = AppendPairProgram.listgen(intArray4);
        List list8 = AppendPairProgram.listgen(intArray4);
        List list9 = AppendPairProgram.listgen(intArray4);
        List list10 = AppendPairProgram.listgen(intArray4);
        List list11 = AppendPairProgram.listgen(intArray4);
        List list12 = AppendPairProgram.listgen(intArray4);
        java.lang.Class<?> wildcardClass13 = list12.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[97, 10, 100, 0]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0800");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list24, (int) (short) 0);
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list29, 100);
        int[] intArray33 = new int[] { (byte) 10 };
        List list34 = AppendPairProgram.listgen(intArray33);
        appendPairProgram0.TestStudentSubmission(list34, (-1));
        int[] intArray38 = new int[] { (byte) 10 };
        List list39 = AppendPairProgram.listgen(intArray38);
        List list40 = AppendPairProgram.listgen(intArray38);
        List list41 = AppendPairProgram.listgen(intArray38);
        List list42 = AppendPairProgram.listgen(intArray38);
        List list43 = AppendPairProgram.listgen(intArray38);
        List list44 = AppendPairProgram.listgen(intArray38);
        List list45 = AppendPairProgram.listgen(intArray38);
        List list46 = AppendPairProgram.listgen(intArray38);
        List list47 = AppendPairProgram.listgen(intArray38);
        List list48 = AppendPairProgram.listgen(intArray38);
        appendPairProgram0.TestStudentSubmission(list48, (int) (short) 10);
        int[] intArray51 = new int[] {};
        List list52 = AppendPairProgram.listgen(intArray51);
        List list53 = AppendPairProgram.listgen(intArray51);
        List list54 = AppendPairProgram.listgen(intArray51);
        appendPairProgram0.TestStudentSubmission(list54, (int) (byte) 1);
        int[] intArray58 = new int[] { (byte) 10 };
        List list59 = AppendPairProgram.listgen(intArray58);
        List list60 = AppendPairProgram.listgen(intArray58);
        List list61 = AppendPairProgram.listgen(intArray58);
        List list62 = AppendPairProgram.listgen(intArray58);
        List list63 = AppendPairProgram.listgen(intArray58);
        List list64 = AppendPairProgram.listgen(intArray58);
        List list65 = AppendPairProgram.listgen(intArray58);
        List list66 = AppendPairProgram.listgen(intArray58);
        List list67 = AppendPairProgram.listgen(intArray58);
        List list68 = AppendPairProgram.listgen(intArray58);
        List list69 = AppendPairProgram.listgen(intArray58);
        List list70 = AppendPairProgram.listgen(intArray58);
        List list71 = AppendPairProgram.listgen(intArray58);
        List list72 = AppendPairProgram.listgen(intArray58);
        List list73 = AppendPairProgram.listgen(intArray58);
        List list74 = AppendPairProgram.listgen(intArray58);
        appendPairProgram0.TestStudentSubmission(list74, (int) (short) 100);
        java.lang.Class<?> wildcardClass77 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10]");
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[10]");
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[]");
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[10]");
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(list61);
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(list63);
        org.junit.Assert.assertNotNull(list64);
        org.junit.Assert.assertNotNull(list65);
        org.junit.Assert.assertNotNull(list66);
        org.junit.Assert.assertNotNull(list67);
        org.junit.Assert.assertNotNull(list68);
        org.junit.Assert.assertNotNull(list69);
        org.junit.Assert.assertNotNull(list70);
        org.junit.Assert.assertNotNull(list71);
        org.junit.Assert.assertNotNull(list72);
        org.junit.Assert.assertNotNull(list73);
        org.junit.Assert.assertNotNull(list74);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0801");
        int[] intArray5 = new int[] { (-1), 100, (short) 0, (byte) 100, (short) 100 };
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        java.lang.Class<?> wildcardClass9 = list8.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 0, 100, 100]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0802");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) -1);
        int[] intArray14 = new int[] {};
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 10);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list23, (int) (byte) 0);
        int[] intArray26 = new int[] {};
        List list27 = AppendPairProgram.listgen(intArray26);
        List list28 = AppendPairProgram.listgen(intArray26);
        List list29 = AppendPairProgram.listgen(intArray26);
        List list30 = AppendPairProgram.listgen(intArray26);
        List list31 = AppendPairProgram.listgen(intArray26);
        appendPairProgram0.TestStudentSubmission(list31, (-1));
        List list34 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list34, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
    }

    @Test
    public void test0803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0803");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 10);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        List list14 = AppendPairProgram.listgen(intArray11);
        List list15 = AppendPairProgram.listgen(intArray11);
        List list16 = AppendPairProgram.listgen(intArray11);
        List list17 = AppendPairProgram.listgen(intArray11);
        List list18 = AppendPairProgram.listgen(intArray11);
        List list19 = AppendPairProgram.listgen(intArray11);
        List list20 = AppendPairProgram.listgen(intArray11);
        List list21 = AppendPairProgram.listgen(intArray11);
        List list22 = AppendPairProgram.listgen(intArray11);
        List list23 = AppendPairProgram.listgen(intArray11);
        List list24 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list24, (int) (byte) 0);
        int[] intArray27 = new int[] {};
        List list28 = AppendPairProgram.listgen(intArray27);
        appendPairProgram0.TestStudentSubmission(list28, 0);
        int[] intArray31 = new int[] {};
        List list32 = AppendPairProgram.listgen(intArray31);
        List list33 = AppendPairProgram.listgen(intArray31);
        List list34 = AppendPairProgram.listgen(intArray31);
        List list35 = AppendPairProgram.listgen(intArray31);
        List list36 = AppendPairProgram.listgen(intArray31);
        List list37 = AppendPairProgram.listgen(intArray31);
        List list38 = AppendPairProgram.listgen(intArray31);
        List list39 = AppendPairProgram.listgen(intArray31);
        List list40 = AppendPairProgram.listgen(intArray31);
        List list41 = AppendPairProgram.listgen(intArray31);
        List list42 = AppendPairProgram.listgen(intArray31);
        List list43 = AppendPairProgram.listgen(intArray31);
        List list44 = AppendPairProgram.listgen(intArray31);
        List list45 = AppendPairProgram.listgen(intArray31);
        List list46 = AppendPairProgram.listgen(intArray31);
        appendPairProgram0.TestStudentSubmission(list46, (int) (byte) -1);
        java.lang.Class<?> wildcardClass49 = list46.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[]");
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]");
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0804");
        int[] intArray4 = new int[] { (-1), (byte) 100, (byte) 1, (byte) 1 };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        List list7 = AppendPairProgram.listgen(intArray4);
        List list8 = AppendPairProgram.listgen(intArray4);
        List list9 = AppendPairProgram.listgen(intArray4);
        List list10 = AppendPairProgram.listgen(intArray4);
        List list11 = AppendPairProgram.listgen(intArray4);
        List list12 = AppendPairProgram.listgen(intArray4);
        List list13 = AppendPairProgram.listgen(intArray4);
        List list14 = AppendPairProgram.listgen(intArray4);
        List list15 = AppendPairProgram.listgen(intArray4);
        java.lang.Class<?> wildcardClass16 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 100, 1, 1]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0805");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) -1);
        int[] intArray14 = new int[] {};
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 10);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list23, (int) (byte) 0);
        List list26 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list26, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
    }

    @Test
    public void test0806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0806");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 10);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        List list14 = AppendPairProgram.listgen(intArray11);
        List list15 = AppendPairProgram.listgen(intArray11);
        List list16 = AppendPairProgram.listgen(intArray11);
        List list17 = AppendPairProgram.listgen(intArray11);
        List list18 = AppendPairProgram.listgen(intArray11);
        List list19 = AppendPairProgram.listgen(intArray11);
        List list20 = AppendPairProgram.listgen(intArray11);
        List list21 = AppendPairProgram.listgen(intArray11);
        List list22 = AppendPairProgram.listgen(intArray11);
        List list23 = AppendPairProgram.listgen(intArray11);
        List list24 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list24, (int) (byte) 0);
        int[] intArray27 = new int[] {};
        List list28 = AppendPairProgram.listgen(intArray27);
        appendPairProgram0.TestStudentSubmission(list28, 0);
        int[] intArray31 = new int[] {};
        List list32 = AppendPairProgram.listgen(intArray31);
        List list33 = AppendPairProgram.listgen(intArray31);
        List list34 = AppendPairProgram.listgen(intArray31);
        List list35 = AppendPairProgram.listgen(intArray31);
        List list36 = AppendPairProgram.listgen(intArray31);
        List list37 = AppendPairProgram.listgen(intArray31);
        List list38 = AppendPairProgram.listgen(intArray31);
        List list39 = AppendPairProgram.listgen(intArray31);
        List list40 = AppendPairProgram.listgen(intArray31);
        List list41 = AppendPairProgram.listgen(intArray31);
        List list42 = AppendPairProgram.listgen(intArray31);
        List list43 = AppendPairProgram.listgen(intArray31);
        List list44 = AppendPairProgram.listgen(intArray31);
        List list45 = AppendPairProgram.listgen(intArray31);
        List list46 = AppendPairProgram.listgen(intArray31);
        appendPairProgram0.TestStudentSubmission(list46, (int) (byte) -1);
        java.lang.Class<?> wildcardClass49 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[]");
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]");
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0807");
        int[] intArray6 = new int[] { 0, (short) 10, (short) -1, '#', (byte) 100, 1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        List list25 = AppendPairProgram.listgen(intArray6);
        List list26 = AppendPairProgram.listgen(intArray6);
        List list27 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass28 = list27.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 10, -1, 35, 100, 1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0808");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, 1);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list22, (int) (short) 1);
        int[] intArray25 = new int[] {};
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        List list31 = AppendPairProgram.listgen(intArray25);
        List list32 = AppendPairProgram.listgen(intArray25);
        List list33 = AppendPairProgram.listgen(intArray25);
        List list34 = AppendPairProgram.listgen(intArray25);
        List list35 = AppendPairProgram.listgen(intArray25);
        List list36 = AppendPairProgram.listgen(intArray25);
        List list37 = AppendPairProgram.listgen(intArray25);
        List list38 = AppendPairProgram.listgen(intArray25);
        List list39 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list39, (int) '#');
        int[] intArray42 = new int[] {};
        List list43 = AppendPairProgram.listgen(intArray42);
        List list44 = AppendPairProgram.listgen(intArray42);
        List list45 = AppendPairProgram.listgen(intArray42);
        appendPairProgram0.TestStudentSubmission(list45, 10);
        int[] intArray48 = new int[] {};
        List list49 = AppendPairProgram.listgen(intArray48);
        List list50 = AppendPairProgram.listgen(intArray48);
        List list51 = AppendPairProgram.listgen(intArray48);
        List list52 = AppendPairProgram.listgen(intArray48);
        List list53 = AppendPairProgram.listgen(intArray48);
        List list54 = AppendPairProgram.listgen(intArray48);
        appendPairProgram0.TestStudentSubmission(list54, (int) (short) 1);
        java.lang.Class<?> wildcardClass57 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]");
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[]");
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0809");
        int[] intArray6 = new int[] { (byte) 0, (short) -1, ' ', 'a', (byte) 100, (byte) 10 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass24 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, -1, 32, 97, 100, 10]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0810");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, 1);
        int[] intArray17 = new int[] { (byte) 10 };
        List list18 = AppendPairProgram.listgen(intArray17);
        List list19 = AppendPairProgram.listgen(intArray17);
        List list20 = AppendPairProgram.listgen(intArray17);
        List list21 = AppendPairProgram.listgen(intArray17);
        List list22 = AppendPairProgram.listgen(intArray17);
        List list23 = AppendPairProgram.listgen(intArray17);
        List list24 = AppendPairProgram.listgen(intArray17);
        List list25 = AppendPairProgram.listgen(intArray17);
        appendPairProgram0.TestStudentSubmission(list25, (int) (short) 0);
        int[] intArray29 = new int[] { (byte) 10 };
        List list30 = AppendPairProgram.listgen(intArray29);
        List list31 = AppendPairProgram.listgen(intArray29);
        appendPairProgram0.TestStudentSubmission(list31, (-1));
        int[] intArray35 = new int[] { (byte) 10 };
        List list36 = AppendPairProgram.listgen(intArray35);
        List list37 = AppendPairProgram.listgen(intArray35);
        List list38 = AppendPairProgram.listgen(intArray35);
        List list39 = AppendPairProgram.listgen(intArray35);
        List list40 = AppendPairProgram.listgen(intArray35);
        List list41 = AppendPairProgram.listgen(intArray35);
        List list42 = AppendPairProgram.listgen(intArray35);
        List list43 = AppendPairProgram.listgen(intArray35);
        appendPairProgram0.TestStudentSubmission(list43, (int) (short) -1);
        int[] intArray46 = new int[] {};
        List list47 = AppendPairProgram.listgen(intArray46);
        List list48 = AppendPairProgram.listgen(intArray46);
        List list49 = AppendPairProgram.listgen(intArray46);
        List list50 = AppendPairProgram.listgen(intArray46);
        List list51 = AppendPairProgram.listgen(intArray46);
        List list52 = AppendPairProgram.listgen(intArray46);
        List list53 = AppendPairProgram.listgen(intArray46);
        List list54 = AppendPairProgram.listgen(intArray46);
        List list55 = AppendPairProgram.listgen(intArray46);
        List list56 = AppendPairProgram.listgen(intArray46);
        List list57 = AppendPairProgram.listgen(intArray46);
        List list58 = AppendPairProgram.listgen(intArray46);
        List list59 = AppendPairProgram.listgen(intArray46);
        List list60 = AppendPairProgram.listgen(intArray46);
        List list61 = AppendPairProgram.listgen(intArray46);
        List list62 = AppendPairProgram.listgen(intArray46);
        appendPairProgram0.TestStudentSubmission(list62, (-1));
        int[] intArray66 = new int[] { 0 };
        List list67 = AppendPairProgram.listgen(intArray66);
        List list68 = AppendPairProgram.listgen(intArray66);
        List list69 = AppendPairProgram.listgen(intArray66);
        List list70 = AppendPairProgram.listgen(intArray66);
        List list71 = AppendPairProgram.listgen(intArray66);
        appendPairProgram0.TestStudentSubmission(list71, (int) (byte) 1);
        java.lang.Class<?> wildcardClass74 = list71.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10]");
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10]");
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[10]");
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(list61);
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0]");
        org.junit.Assert.assertNotNull(list67);
        org.junit.Assert.assertNotNull(list68);
        org.junit.Assert.assertNotNull(list69);
        org.junit.Assert.assertNotNull(list70);
        org.junit.Assert.assertNotNull(list71);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0811");
        int[] intArray2 = new int[] { 10, (byte) 0 };
        List list3 = AppendPairProgram.listgen(intArray2);
        List list4 = AppendPairProgram.listgen(intArray2);
        List list5 = AppendPairProgram.listgen(intArray2);
        List list6 = AppendPairProgram.listgen(intArray2);
        List list7 = AppendPairProgram.listgen(intArray2);
        List list8 = AppendPairProgram.listgen(intArray2);
        List list9 = AppendPairProgram.listgen(intArray2);
        List list10 = AppendPairProgram.listgen(intArray2);
        List list11 = AppendPairProgram.listgen(intArray2);
        List list12 = AppendPairProgram.listgen(intArray2);
        List list13 = AppendPairProgram.listgen(intArray2);
        java.lang.Class<?> wildcardClass14 = list13.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[10, 0]");
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0812");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, 1);
        int[] intArray17 = new int[] { (byte) 10 };
        List list18 = AppendPairProgram.listgen(intArray17);
        List list19 = AppendPairProgram.listgen(intArray17);
        List list20 = AppendPairProgram.listgen(intArray17);
        List list21 = AppendPairProgram.listgen(intArray17);
        List list22 = AppendPairProgram.listgen(intArray17);
        List list23 = AppendPairProgram.listgen(intArray17);
        List list24 = AppendPairProgram.listgen(intArray17);
        List list25 = AppendPairProgram.listgen(intArray17);
        appendPairProgram0.TestStudentSubmission(list25, (int) (short) 0);
        int[] intArray29 = new int[] { (byte) 10 };
        List list30 = AppendPairProgram.listgen(intArray29);
        List list31 = AppendPairProgram.listgen(intArray29);
        List list32 = AppendPairProgram.listgen(intArray29);
        List list33 = AppendPairProgram.listgen(intArray29);
        List list34 = AppendPairProgram.listgen(intArray29);
        List list35 = AppendPairProgram.listgen(intArray29);
        List list36 = AppendPairProgram.listgen(intArray29);
        List list37 = AppendPairProgram.listgen(intArray29);
        List list38 = AppendPairProgram.listgen(intArray29);
        List list39 = AppendPairProgram.listgen(intArray29);
        List list40 = AppendPairProgram.listgen(intArray29);
        List list41 = AppendPairProgram.listgen(intArray29);
        List list42 = AppendPairProgram.listgen(intArray29);
        appendPairProgram0.TestStudentSubmission(list42, (int) ' ');
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10]");
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10]");
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
    }

    @Test
    public void test0813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0813");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, 1);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list22, (int) (short) 1);
        int[] intArray25 = new int[] {};
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        List list31 = AppendPairProgram.listgen(intArray25);
        List list32 = AppendPairProgram.listgen(intArray25);
        List list33 = AppendPairProgram.listgen(intArray25);
        List list34 = AppendPairProgram.listgen(intArray25);
        List list35 = AppendPairProgram.listgen(intArray25);
        List list36 = AppendPairProgram.listgen(intArray25);
        List list37 = AppendPairProgram.listgen(intArray25);
        List list38 = AppendPairProgram.listgen(intArray25);
        List list39 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list39, (int) '#');
        int[] intArray42 = new int[] {};
        List list43 = AppendPairProgram.listgen(intArray42);
        List list44 = AppendPairProgram.listgen(intArray42);
        List list45 = AppendPairProgram.listgen(intArray42);
        List list46 = AppendPairProgram.listgen(intArray42);
        List list47 = AppendPairProgram.listgen(intArray42);
        List list48 = AppendPairProgram.listgen(intArray42);
        List list49 = AppendPairProgram.listgen(intArray42);
        List list50 = AppendPairProgram.listgen(intArray42);
        List list51 = AppendPairProgram.listgen(intArray42);
        appendPairProgram0.TestStudentSubmission(list51, (int) 'a');
        int[] intArray55 = new int[] { (byte) 10 };
        List list56 = AppendPairProgram.listgen(intArray55);
        List list57 = AppendPairProgram.listgen(intArray55);
        List list58 = AppendPairProgram.listgen(intArray55);
        appendPairProgram0.TestStudentSubmission(list58, (int) '4');
        int[] intArray61 = new int[] {};
        List list62 = AppendPairProgram.listgen(intArray61);
        List list63 = AppendPairProgram.listgen(intArray61);
        List list64 = AppendPairProgram.listgen(intArray61);
        List list65 = AppendPairProgram.listgen(intArray61);
        List list66 = AppendPairProgram.listgen(intArray61);
        List list67 = AppendPairProgram.listgen(intArray61);
        List list68 = AppendPairProgram.listgen(intArray61);
        List list69 = AppendPairProgram.listgen(intArray61);
        List list70 = AppendPairProgram.listgen(intArray61);
        List list71 = AppendPairProgram.listgen(intArray61);
        List list72 = AppendPairProgram.listgen(intArray61);
        List list73 = AppendPairProgram.listgen(intArray61);
        List list74 = AppendPairProgram.listgen(intArray61);
        List list75 = AppendPairProgram.listgen(intArray61);
        List list76 = AppendPairProgram.listgen(intArray61);
        List list77 = AppendPairProgram.listgen(intArray61);
        appendPairProgram0.TestStudentSubmission(list77, (int) (short) 10);
        java.lang.Class<?> wildcardClass80 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]");
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[10]");
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[]");
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(list63);
        org.junit.Assert.assertNotNull(list64);
        org.junit.Assert.assertNotNull(list65);
        org.junit.Assert.assertNotNull(list66);
        org.junit.Assert.assertNotNull(list67);
        org.junit.Assert.assertNotNull(list68);
        org.junit.Assert.assertNotNull(list69);
        org.junit.Assert.assertNotNull(list70);
        org.junit.Assert.assertNotNull(list71);
        org.junit.Assert.assertNotNull(list72);
        org.junit.Assert.assertNotNull(list73);
        org.junit.Assert.assertNotNull(list74);
        org.junit.Assert.assertNotNull(list75);
        org.junit.Assert.assertNotNull(list76);
        org.junit.Assert.assertNotNull(list77);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0814");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        List list14 = AppendPairProgram.listgen(intArray11);
        List list15 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list15, (int) (byte) -1);
        int[] intArray18 = new int[] {};
        List list19 = AppendPairProgram.listgen(intArray18);
        List list20 = AppendPairProgram.listgen(intArray18);
        List list21 = AppendPairProgram.listgen(intArray18);
        appendPairProgram0.TestStudentSubmission(list21, (int) (short) 10);
        int[] intArray25 = new int[] { (byte) 10 };
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list29, 100);
        int[] intArray32 = new int[] {};
        List list33 = AppendPairProgram.listgen(intArray32);
        List list34 = AppendPairProgram.listgen(intArray32);
        List list35 = AppendPairProgram.listgen(intArray32);
        List list36 = AppendPairProgram.listgen(intArray32);
        List list37 = AppendPairProgram.listgen(intArray32);
        List list38 = AppendPairProgram.listgen(intArray32);
        List list39 = AppendPairProgram.listgen(intArray32);
        List list40 = AppendPairProgram.listgen(intArray32);
        appendPairProgram0.TestStudentSubmission(list40, (int) '#');
        java.lang.Class<?> wildcardClass43 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[10]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[]");
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0815");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray10 = new int[] { (byte) 10 };
        List list11 = AppendPairProgram.listgen(intArray10);
        List list12 = AppendPairProgram.listgen(intArray10);
        List list13 = AppendPairProgram.listgen(intArray10);
        List list14 = AppendPairProgram.listgen(intArray10);
        List list15 = AppendPairProgram.listgen(intArray10);
        List list16 = AppendPairProgram.listgen(intArray10);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 1);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        List list24 = AppendPairProgram.listgen(intArray19);
        List list25 = AppendPairProgram.listgen(intArray19);
        List list26 = AppendPairProgram.listgen(intArray19);
        List list27 = AppendPairProgram.listgen(intArray19);
        List list28 = AppendPairProgram.listgen(intArray19);
        List list29 = AppendPairProgram.listgen(intArray19);
        List list30 = AppendPairProgram.listgen(intArray19);
        List list31 = AppendPairProgram.listgen(intArray19);
        List list32 = AppendPairProgram.listgen(intArray19);
        List list33 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list33, (int) (byte) 1);
        int[] intArray37 = new int[] { (byte) 10 };
        List list38 = AppendPairProgram.listgen(intArray37);
        List list39 = AppendPairProgram.listgen(intArray37);
        List list40 = AppendPairProgram.listgen(intArray37);
        List list41 = AppendPairProgram.listgen(intArray37);
        List list42 = AppendPairProgram.listgen(intArray37);
        List list43 = AppendPairProgram.listgen(intArray37);
        List list44 = AppendPairProgram.listgen(intArray37);
        List list45 = AppendPairProgram.listgen(intArray37);
        List list46 = AppendPairProgram.listgen(intArray37);
        List list47 = AppendPairProgram.listgen(intArray37);
        appendPairProgram0.TestStudentSubmission(list47, (int) (byte) 100);
        java.lang.Class<?> wildcardClass50 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10]");
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[10]");
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0816");
        int[] intArray6 = new int[] { (short) -1, '#', '4', (short) -1, (short) 100, (byte) -1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass24 = list23.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 35, 52, -1, 100, -1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0817");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, 1);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list22, (int) (short) 1);
        int[] intArray25 = new int[] {};
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        List list31 = AppendPairProgram.listgen(intArray25);
        List list32 = AppendPairProgram.listgen(intArray25);
        List list33 = AppendPairProgram.listgen(intArray25);
        List list34 = AppendPairProgram.listgen(intArray25);
        List list35 = AppendPairProgram.listgen(intArray25);
        List list36 = AppendPairProgram.listgen(intArray25);
        List list37 = AppendPairProgram.listgen(intArray25);
        List list38 = AppendPairProgram.listgen(intArray25);
        List list39 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list39, (int) '#');
        int[] intArray42 = new int[] {};
        List list43 = AppendPairProgram.listgen(intArray42);
        List list44 = AppendPairProgram.listgen(intArray42);
        List list45 = AppendPairProgram.listgen(intArray42);
        appendPairProgram0.TestStudentSubmission(list45, 10);
        int[] intArray48 = new int[] {};
        List list49 = AppendPairProgram.listgen(intArray48);
        List list50 = AppendPairProgram.listgen(intArray48);
        List list51 = AppendPairProgram.listgen(intArray48);
        List list52 = AppendPairProgram.listgen(intArray48);
        List list53 = AppendPairProgram.listgen(intArray48);
        List list54 = AppendPairProgram.listgen(intArray48);
        appendPairProgram0.TestStudentSubmission(list54, (int) (short) 1);
        int[] intArray58 = new int[] { (byte) 10 };
        List list59 = AppendPairProgram.listgen(intArray58);
        List list60 = AppendPairProgram.listgen(intArray58);
        List list61 = AppendPairProgram.listgen(intArray58);
        List list62 = AppendPairProgram.listgen(intArray58);
        appendPairProgram0.TestStudentSubmission(list62, 1);
        int[] intArray65 = new int[] {};
        List list66 = AppendPairProgram.listgen(intArray65);
        List list67 = AppendPairProgram.listgen(intArray65);
        List list68 = AppendPairProgram.listgen(intArray65);
        List list69 = AppendPairProgram.listgen(intArray65);
        List list70 = AppendPairProgram.listgen(intArray65);
        List list71 = AppendPairProgram.listgen(intArray65);
        List list72 = AppendPairProgram.listgen(intArray65);
        List list73 = AppendPairProgram.listgen(intArray65);
        List list74 = AppendPairProgram.listgen(intArray65);
        appendPairProgram0.TestStudentSubmission(list74, (int) (short) 0);
        java.lang.Class<?> wildcardClass77 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]");
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[]");
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[10]");
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(list61);
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[]");
        org.junit.Assert.assertNotNull(list66);
        org.junit.Assert.assertNotNull(list67);
        org.junit.Assert.assertNotNull(list68);
        org.junit.Assert.assertNotNull(list69);
        org.junit.Assert.assertNotNull(list70);
        org.junit.Assert.assertNotNull(list71);
        org.junit.Assert.assertNotNull(list72);
        org.junit.Assert.assertNotNull(list73);
        org.junit.Assert.assertNotNull(list74);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0818");
        int[] intArray6 = new int[] { 0, (short) 10, (short) -1, '#', (byte) 100, 1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        List list25 = AppendPairProgram.listgen(intArray6);
        List list26 = AppendPairProgram.listgen(intArray6);
        List list27 = AppendPairProgram.listgen(intArray6);
        List list28 = AppendPairProgram.listgen(intArray6);
        List list29 = AppendPairProgram.listgen(intArray6);
        List list30 = AppendPairProgram.listgen(intArray6);
        List list31 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass32 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 10, -1, 35, 100, 1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0819");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, (int) (short) -1);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list19, (int) '4');
        int[] intArray22 = new int[] {};
        List list23 = AppendPairProgram.listgen(intArray22);
        List list24 = AppendPairProgram.listgen(intArray22);
        appendPairProgram0.TestStudentSubmission(list24, 0);
        java.lang.Class<?> wildcardClass27 = list24.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]");
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0820");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        List list12 = AppendPairProgram.listgen(intArray9);
        List list13 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        java.lang.Class<?> wildcardClass16 = list13.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0821");
        int[] intArray1 = new int[] { (byte) 10 };
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        List list7 = AppendPairProgram.listgen(intArray1);
        List list8 = AppendPairProgram.listgen(intArray1);
        List list9 = AppendPairProgram.listgen(intArray1);
        List list10 = AppendPairProgram.listgen(intArray1);
        List list11 = AppendPairProgram.listgen(intArray1);
        List list12 = AppendPairProgram.listgen(intArray1);
        List list13 = AppendPairProgram.listgen(intArray1);
        List list14 = AppendPairProgram.listgen(intArray1);
        List list15 = AppendPairProgram.listgen(intArray1);
        List list16 = AppendPairProgram.listgen(intArray1);
        List list17 = AppendPairProgram.listgen(intArray1);
        List list18 = AppendPairProgram.listgen(intArray1);
        List list19 = AppendPairProgram.listgen(intArray1);
        List list20 = AppendPairProgram.listgen(intArray1);
        List list21 = AppendPairProgram.listgen(intArray1);
        java.lang.Class<?> wildcardClass22 = list21.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[10]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0822");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        List list14 = AppendPairProgram.listgen(intArray7);
        List list15 = AppendPairProgram.listgen(intArray7);
        List list16 = AppendPairProgram.listgen(intArray7);
        List list17 = AppendPairProgram.listgen(intArray7);
        List list18 = AppendPairProgram.listgen(intArray7);
        List list19 = AppendPairProgram.listgen(intArray7);
        List list20 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list20, (int) '#');
        int[] intArray23 = new int[] {};
        List list24 = AppendPairProgram.listgen(intArray23);
        List list25 = AppendPairProgram.listgen(intArray23);
        List list26 = AppendPairProgram.listgen(intArray23);
        List list27 = AppendPairProgram.listgen(intArray23);
        List list28 = AppendPairProgram.listgen(intArray23);
        List list29 = AppendPairProgram.listgen(intArray23);
        List list30 = AppendPairProgram.listgen(intArray23);
        List list31 = AppendPairProgram.listgen(intArray23);
        List list32 = AppendPairProgram.listgen(intArray23);
        appendPairProgram0.TestStudentSubmission(list32, (int) (short) -1);
        java.lang.Class<?> wildcardClass35 = list32.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[]");
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0823");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list24, (int) (short) 0);
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list29, 100);
        int[] intArray33 = new int[] { (byte) 10 };
        List list34 = AppendPairProgram.listgen(intArray33);
        appendPairProgram0.TestStudentSubmission(list34, (-1));
        int[] intArray37 = new int[] {};
        List list38 = AppendPairProgram.listgen(intArray37);
        List list39 = AppendPairProgram.listgen(intArray37);
        List list40 = AppendPairProgram.listgen(intArray37);
        List list41 = AppendPairProgram.listgen(intArray37);
        List list42 = AppendPairProgram.listgen(intArray37);
        List list43 = AppendPairProgram.listgen(intArray37);
        List list44 = AppendPairProgram.listgen(intArray37);
        List list45 = AppendPairProgram.listgen(intArray37);
        List list46 = AppendPairProgram.listgen(intArray37);
        List list47 = AppendPairProgram.listgen(intArray37);
        List list48 = AppendPairProgram.listgen(intArray37);
        List list49 = AppendPairProgram.listgen(intArray37);
        List list50 = AppendPairProgram.listgen(intArray37);
        List list51 = AppendPairProgram.listgen(intArray37);
        appendPairProgram0.TestStudentSubmission(list51, (int) (short) 100);
        int[] intArray55 = new int[] { (byte) 10 };
        List list56 = AppendPairProgram.listgen(intArray55);
        List list57 = AppendPairProgram.listgen(intArray55);
        List list58 = AppendPairProgram.listgen(intArray55);
        List list59 = AppendPairProgram.listgen(intArray55);
        appendPairProgram0.TestStudentSubmission(list59, (int) (byte) 0);
        java.lang.Class<?> wildcardClass62 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10]");
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[]");
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[10]");
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0824");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        List list9 = AppendPairProgram.listgen(intArray5);
        List list10 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list10, 100);
        int[] intArray14 = new int[] { (byte) 10 };
        List list15 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list15, (int) '#');
        int[] intArray19 = new int[] { (byte) 10 };
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        List list24 = AppendPairProgram.listgen(intArray19);
        List list25 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list25, (int) (short) 1);
        java.lang.Class<?> wildcardClass28 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0825");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, (int) '4');
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list26, (int) (byte) 1);
        int[] intArray29 = new int[] {};
        List list30 = AppendPairProgram.listgen(intArray29);
        List list31 = AppendPairProgram.listgen(intArray29);
        List list32 = AppendPairProgram.listgen(intArray29);
        List list33 = AppendPairProgram.listgen(intArray29);
        List list34 = AppendPairProgram.listgen(intArray29);
        List list35 = AppendPairProgram.listgen(intArray29);
        List list36 = AppendPairProgram.listgen(intArray29);
        List list37 = AppendPairProgram.listgen(intArray29);
        List list38 = AppendPairProgram.listgen(intArray29);
        List list39 = AppendPairProgram.listgen(intArray29);
        appendPairProgram0.TestStudentSubmission(list39, (-1));
        java.lang.Class<?> wildcardClass42 = list39.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[]");
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0826");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        List list7 = AppendPairProgram.listgen(intArray1);
        List list8 = AppendPairProgram.listgen(intArray1);
        List list9 = AppendPairProgram.listgen(intArray1);
        List list10 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list10, (int) (byte) 10);
        int[] intArray14 = new int[] { 0 };
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (short) 0);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list23, 0);
        int[] intArray26 = new int[] {};
        List list27 = AppendPairProgram.listgen(intArray26);
        List list28 = AppendPairProgram.listgen(intArray26);
        List list29 = AppendPairProgram.listgen(intArray26);
        List list30 = AppendPairProgram.listgen(intArray26);
        List list31 = AppendPairProgram.listgen(intArray26);
        List list32 = AppendPairProgram.listgen(intArray26);
        List list33 = AppendPairProgram.listgen(intArray26);
        List list34 = AppendPairProgram.listgen(intArray26);
        List list35 = AppendPairProgram.listgen(intArray26);
        List list36 = AppendPairProgram.listgen(intArray26);
        List list37 = AppendPairProgram.listgen(intArray26);
        List list38 = AppendPairProgram.listgen(intArray26);
        List list39 = AppendPairProgram.listgen(intArray26);
        List list40 = AppendPairProgram.listgen(intArray26);
        List list41 = AppendPairProgram.listgen(intArray26);
        List list42 = AppendPairProgram.listgen(intArray26);
        appendPairProgram0.TestStudentSubmission(list42, (int) (byte) 100);
        java.lang.Class<?> wildcardClass45 = list42.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0827");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        List list14 = AppendPairProgram.listgen(intArray11);
        List list15 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list15, (int) (byte) -1);
        int[] intArray18 = new int[] {};
        List list19 = AppendPairProgram.listgen(intArray18);
        List list20 = AppendPairProgram.listgen(intArray18);
        List list21 = AppendPairProgram.listgen(intArray18);
        List list22 = AppendPairProgram.listgen(intArray18);
        List list23 = AppendPairProgram.listgen(intArray18);
        List list24 = AppendPairProgram.listgen(intArray18);
        List list25 = AppendPairProgram.listgen(intArray18);
        appendPairProgram0.TestStudentSubmission(list25, (-1));
        int[] intArray28 = new int[] {};
        List list29 = AppendPairProgram.listgen(intArray28);
        List list30 = AppendPairProgram.listgen(intArray28);
        List list31 = AppendPairProgram.listgen(intArray28);
        List list32 = AppendPairProgram.listgen(intArray28);
        List list33 = AppendPairProgram.listgen(intArray28);
        List list34 = AppendPairProgram.listgen(intArray28);
        List list35 = AppendPairProgram.listgen(intArray28);
        List list36 = AppendPairProgram.listgen(intArray28);
        List list37 = AppendPairProgram.listgen(intArray28);
        List list38 = AppendPairProgram.listgen(intArray28);
        List list39 = AppendPairProgram.listgen(intArray28);
        List list40 = AppendPairProgram.listgen(intArray28);
        List list41 = AppendPairProgram.listgen(intArray28);
        List list42 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list42, (int) (short) 0);
        int[] intArray46 = new int[] { (byte) 10 };
        List list47 = AppendPairProgram.listgen(intArray46);
        List list48 = AppendPairProgram.listgen(intArray46);
        List list49 = AppendPairProgram.listgen(intArray46);
        List list50 = AppendPairProgram.listgen(intArray46);
        List list51 = AppendPairProgram.listgen(intArray46);
        List list52 = AppendPairProgram.listgen(intArray46);
        List list53 = AppendPairProgram.listgen(intArray46);
        List list54 = AppendPairProgram.listgen(intArray46);
        List list55 = AppendPairProgram.listgen(intArray46);
        List list56 = AppendPairProgram.listgen(intArray46);
        List list57 = AppendPairProgram.listgen(intArray46);
        List list58 = AppendPairProgram.listgen(intArray46);
        List list59 = AppendPairProgram.listgen(intArray46);
        List list60 = AppendPairProgram.listgen(intArray46);
        List list61 = AppendPairProgram.listgen(intArray46);
        List list62 = AppendPairProgram.listgen(intArray46);
        appendPairProgram0.TestStudentSubmission(list62, (-1));
        java.lang.Class<?> wildcardClass65 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[10]");
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(list61);
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0828");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        List list9 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list9, (int) (short) -1);
        int[] intArray13 = new int[] { (byte) 10 };
        List list14 = AppendPairProgram.listgen(intArray13);
        List list15 = AppendPairProgram.listgen(intArray13);
        List list16 = AppendPairProgram.listgen(intArray13);
        List list17 = AppendPairProgram.listgen(intArray13);
        List list18 = AppendPairProgram.listgen(intArray13);
        List list19 = AppendPairProgram.listgen(intArray13);
        List list20 = AppendPairProgram.listgen(intArray13);
        List list21 = AppendPairProgram.listgen(intArray13);
        List list22 = AppendPairProgram.listgen(intArray13);
        appendPairProgram0.TestStudentSubmission(list22, (int) '#');
        int[] intArray25 = new int[] {};
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        List list31 = AppendPairProgram.listgen(intArray25);
        List list32 = AppendPairProgram.listgen(intArray25);
        List list33 = AppendPairProgram.listgen(intArray25);
        List list34 = AppendPairProgram.listgen(intArray25);
        List list35 = AppendPairProgram.listgen(intArray25);
        List list36 = AppendPairProgram.listgen(intArray25);
        List list37 = AppendPairProgram.listgen(intArray25);
        List list38 = AppendPairProgram.listgen(intArray25);
        List list39 = AppendPairProgram.listgen(intArray25);
        List list40 = AppendPairProgram.listgen(intArray25);
        List list41 = AppendPairProgram.listgen(intArray25);
        List list42 = AppendPairProgram.listgen(intArray25);
        List list43 = AppendPairProgram.listgen(intArray25);
        List list44 = AppendPairProgram.listgen(intArray25);
        List list45 = AppendPairProgram.listgen(intArray25);
        List list46 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list46, (int) (short) -1);
        java.lang.Class<?> wildcardClass49 = list46.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10]");
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0829");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray17 = new int[] { 0 };
        List list18 = AppendPairProgram.listgen(intArray17);
        List list19 = AppendPairProgram.listgen(intArray17);
        List list20 = AppendPairProgram.listgen(intArray17);
        appendPairProgram0.TestStudentSubmission(list20, (int) (short) -1);
        int[] intArray24 = new int[] { (byte) 10 };
        List list25 = AppendPairProgram.listgen(intArray24);
        List list26 = AppendPairProgram.listgen(intArray24);
        List list27 = AppendPairProgram.listgen(intArray24);
        List list28 = AppendPairProgram.listgen(intArray24);
        List list29 = AppendPairProgram.listgen(intArray24);
        List list30 = AppendPairProgram.listgen(intArray24);
        List list31 = AppendPairProgram.listgen(intArray24);
        List list32 = AppendPairProgram.listgen(intArray24);
        List list33 = AppendPairProgram.listgen(intArray24);
        List list34 = AppendPairProgram.listgen(intArray24);
        List list35 = AppendPairProgram.listgen(intArray24);
        List list36 = AppendPairProgram.listgen(intArray24);
        List list37 = AppendPairProgram.listgen(intArray24);
        List list38 = AppendPairProgram.listgen(intArray24);
        List list39 = AppendPairProgram.listgen(intArray24);
        List list40 = AppendPairProgram.listgen(intArray24);
        appendPairProgram0.TestStudentSubmission(list40, 100);
        java.lang.Class<?> wildcardClass43 = list40.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0]");
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[10]");
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0830");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) 0);
        int[] intArray15 = new int[] { 0 };
        List list16 = AppendPairProgram.listgen(intArray15);
        List list17 = AppendPairProgram.listgen(intArray15);
        List list18 = AppendPairProgram.listgen(intArray15);
        List list19 = AppendPairProgram.listgen(intArray15);
        List list20 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list20, (int) (byte) 10);
        java.lang.Class<?> wildcardClass23 = list20.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0831");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) 0);
        int[] intArray15 = new int[] { (byte) 10 };
        List list16 = AppendPairProgram.listgen(intArray15);
        List list17 = AppendPairProgram.listgen(intArray15);
        List list18 = AppendPairProgram.listgen(intArray15);
        List list19 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list19, (int) (byte) 100);
        int[] intArray22 = new int[] {};
        List list23 = AppendPairProgram.listgen(intArray22);
        List list24 = AppendPairProgram.listgen(intArray22);
        List list25 = AppendPairProgram.listgen(intArray22);
        List list26 = AppendPairProgram.listgen(intArray22);
        List list27 = AppendPairProgram.listgen(intArray22);
        List list28 = AppendPairProgram.listgen(intArray22);
        List list29 = AppendPairProgram.listgen(intArray22);
        List list30 = AppendPairProgram.listgen(intArray22);
        List list31 = AppendPairProgram.listgen(intArray22);
        List list32 = AppendPairProgram.listgen(intArray22);
        List list33 = AppendPairProgram.listgen(intArray22);
        List list34 = AppendPairProgram.listgen(intArray22);
        List list35 = AppendPairProgram.listgen(intArray22);
        List list36 = AppendPairProgram.listgen(intArray22);
        List list37 = AppendPairProgram.listgen(intArray22);
        List list38 = AppendPairProgram.listgen(intArray22);
        List list39 = AppendPairProgram.listgen(intArray22);
        appendPairProgram0.TestStudentSubmission(list39, 0);
        java.lang.Class<?> wildcardClass42 = list39.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]");
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0832");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        List list9 = AppendPairProgram.listgen(intArray5);
        List list10 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list10, 100);
        int[] intArray14 = new int[] { (byte) 10 };
        List list15 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list15, (int) '#');
        int[] intArray19 = new int[] { (byte) 10 };
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        List list24 = AppendPairProgram.listgen(intArray19);
        List list25 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list25, (int) (short) 1);
        List list28 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list28, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
    }

    @Test
    public void test0833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0833");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, (int) (byte) 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list10, (-1));
        int[] intArray13 = new int[] {};
        List list14 = AppendPairProgram.listgen(intArray13);
        List list15 = AppendPairProgram.listgen(intArray13);
        List list16 = AppendPairProgram.listgen(intArray13);
        List list17 = AppendPairProgram.listgen(intArray13);
        List list18 = AppendPairProgram.listgen(intArray13);
        List list19 = AppendPairProgram.listgen(intArray13);
        List list20 = AppendPairProgram.listgen(intArray13);
        List list21 = AppendPairProgram.listgen(intArray13);
        List list22 = AppendPairProgram.listgen(intArray13);
        List list23 = AppendPairProgram.listgen(intArray13);
        List list24 = AppendPairProgram.listgen(intArray13);
        List list25 = AppendPairProgram.listgen(intArray13);
        List list26 = AppendPairProgram.listgen(intArray13);
        List list27 = AppendPairProgram.listgen(intArray13);
        appendPairProgram0.TestStudentSubmission(list27, (int) (short) -1);
        int[] intArray31 = new int[] { (byte) 10 };
        List list32 = AppendPairProgram.listgen(intArray31);
        List list33 = AppendPairProgram.listgen(intArray31);
        List list34 = AppendPairProgram.listgen(intArray31);
        List list35 = AppendPairProgram.listgen(intArray31);
        List list36 = AppendPairProgram.listgen(intArray31);
        List list37 = AppendPairProgram.listgen(intArray31);
        List list38 = AppendPairProgram.listgen(intArray31);
        List list39 = AppendPairProgram.listgen(intArray31);
        List list40 = AppendPairProgram.listgen(intArray31);
        List list41 = AppendPairProgram.listgen(intArray31);
        List list42 = AppendPairProgram.listgen(intArray31);
        List list43 = AppendPairProgram.listgen(intArray31);
        List list44 = AppendPairProgram.listgen(intArray31);
        List list45 = AppendPairProgram.listgen(intArray31);
        List list46 = AppendPairProgram.listgen(intArray31);
        appendPairProgram0.TestStudentSubmission(list46, 0);
        List list49 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list49, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10]");
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
    }

    @Test
    public void test0834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0834");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray15 = new int[] {};
        List list16 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 100);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        List list24 = AppendPairProgram.listgen(intArray19);
        List list25 = AppendPairProgram.listgen(intArray19);
        List list26 = AppendPairProgram.listgen(intArray19);
        List list27 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list27, (int) (short) -1);
        int[] intArray31 = new int[] { (byte) 10 };
        List list32 = AppendPairProgram.listgen(intArray31);
        List list33 = AppendPairProgram.listgen(intArray31);
        List list34 = AppendPairProgram.listgen(intArray31);
        List list35 = AppendPairProgram.listgen(intArray31);
        List list36 = AppendPairProgram.listgen(intArray31);
        List list37 = AppendPairProgram.listgen(intArray31);
        List list38 = AppendPairProgram.listgen(intArray31);
        List list39 = AppendPairProgram.listgen(intArray31);
        appendPairProgram0.TestStudentSubmission(list39, (int) (byte) 10);
        java.lang.Class<?> wildcardClass42 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10]");
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0835");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, (int) (short) -1);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list19, (int) '4');
        int[] intArray22 = new int[] {};
        List list23 = AppendPairProgram.listgen(intArray22);
        List list24 = AppendPairProgram.listgen(intArray22);
        appendPairProgram0.TestStudentSubmission(list24, 0);
        int[] intArray28 = new int[] { 0 };
        List list29 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list29, (int) 'a');
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]");
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0]");
        org.junit.Assert.assertNotNull(list29);
    }

    @Test
    public void test0836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0836");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        List list14 = AppendPairProgram.listgen(intArray11);
        List list15 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list15, (int) (byte) -1);
        int[] intArray18 = new int[] {};
        List list19 = AppendPairProgram.listgen(intArray18);
        List list20 = AppendPairProgram.listgen(intArray18);
        List list21 = AppendPairProgram.listgen(intArray18);
        appendPairProgram0.TestStudentSubmission(list21, (int) (short) 10);
        int[] intArray25 = new int[] { (byte) 10 };
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list29, 100);
        int[] intArray33 = new int[] { (byte) 10 };
        List list34 = AppendPairProgram.listgen(intArray33);
        List list35 = AppendPairProgram.listgen(intArray33);
        List list36 = AppendPairProgram.listgen(intArray33);
        List list37 = AppendPairProgram.listgen(intArray33);
        List list38 = AppendPairProgram.listgen(intArray33);
        List list39 = AppendPairProgram.listgen(intArray33);
        List list40 = AppendPairProgram.listgen(intArray33);
        List list41 = AppendPairProgram.listgen(intArray33);
        List list42 = AppendPairProgram.listgen(intArray33);
        appendPairProgram0.TestStudentSubmission(list42, 100);
        java.lang.Class<?> wildcardClass45 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[10]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10]");
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0837");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        List list12 = AppendPairProgram.listgen(intArray9);
        List list13 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        List list27 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list27, 100);
        int[] intArray31 = new int[] { (byte) 10 };
        List list32 = AppendPairProgram.listgen(intArray31);
        List list33 = AppendPairProgram.listgen(intArray31);
        List list34 = AppendPairProgram.listgen(intArray31);
        List list35 = AppendPairProgram.listgen(intArray31);
        List list36 = AppendPairProgram.listgen(intArray31);
        appendPairProgram0.TestStudentSubmission(list36, (int) (byte) 100);
        java.lang.Class<?> wildcardClass39 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10]");
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0838");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray17 = new int[] { (byte) 10 };
        List list18 = AppendPairProgram.listgen(intArray17);
        List list19 = AppendPairProgram.listgen(intArray17);
        List list20 = AppendPairProgram.listgen(intArray17);
        List list21 = AppendPairProgram.listgen(intArray17);
        List list22 = AppendPairProgram.listgen(intArray17);
        List list23 = AppendPairProgram.listgen(intArray17);
        List list24 = AppendPairProgram.listgen(intArray17);
        List list25 = AppendPairProgram.listgen(intArray17);
        appendPairProgram0.TestStudentSubmission(list25, (int) (byte) 100);
        int[] intArray28 = new int[] {};
        List list29 = AppendPairProgram.listgen(intArray28);
        List list30 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list30, 0);
        int[] intArray34 = new int[] { (byte) 10 };
        List list35 = AppendPairProgram.listgen(intArray34);
        List list36 = AppendPairProgram.listgen(intArray34);
        List list37 = AppendPairProgram.listgen(intArray34);
        List list38 = AppendPairProgram.listgen(intArray34);
        List list39 = AppendPairProgram.listgen(intArray34);
        List list40 = AppendPairProgram.listgen(intArray34);
        List list41 = AppendPairProgram.listgen(intArray34);
        appendPairProgram0.TestStudentSubmission(list41, (int) (byte) 100);
        int[] intArray44 = new int[] {};
        List list45 = AppendPairProgram.listgen(intArray44);
        List list46 = AppendPairProgram.listgen(intArray44);
        List list47 = AppendPairProgram.listgen(intArray44);
        appendPairProgram0.TestStudentSubmission(list47, (int) (byte) 1);
        java.lang.Class<?> wildcardClass50 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10]");
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[10]");
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[]");
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0839");
        int[] intArray2 = new int[] { 10, (byte) 0 };
        List list3 = AppendPairProgram.listgen(intArray2);
        List list4 = AppendPairProgram.listgen(intArray2);
        List list5 = AppendPairProgram.listgen(intArray2);
        List list6 = AppendPairProgram.listgen(intArray2);
        List list7 = AppendPairProgram.listgen(intArray2);
        List list8 = AppendPairProgram.listgen(intArray2);
        List list9 = AppendPairProgram.listgen(intArray2);
        List list10 = AppendPairProgram.listgen(intArray2);
        List list11 = AppendPairProgram.listgen(intArray2);
        List list12 = AppendPairProgram.listgen(intArray2);
        List list13 = AppendPairProgram.listgen(intArray2);
        List list14 = AppendPairProgram.listgen(intArray2);
        List list15 = AppendPairProgram.listgen(intArray2);
        java.lang.Class<?> wildcardClass16 = list15.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[10, 0]");
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0840");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray6 = new int[] { 0 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list11, (int) (short) -1);
        int[] intArray14 = new int[] {};
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        List list17 = AppendPairProgram.listgen(intArray14);
        List list18 = AppendPairProgram.listgen(intArray14);
        List list19 = AppendPairProgram.listgen(intArray14);
        List list20 = AppendPairProgram.listgen(intArray14);
        List list21 = AppendPairProgram.listgen(intArray14);
        List list22 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list22, (-1));
        List list25 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list25, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
    }

    @Test
    public void test0841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0841");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        List list12 = AppendPairProgram.listgen(intArray9);
        List list13 = AppendPairProgram.listgen(intArray9);
        List list14 = AppendPairProgram.listgen(intArray9);
        List list15 = AppendPairProgram.listgen(intArray9);
        List list16 = AppendPairProgram.listgen(intArray9);
        List list17 = AppendPairProgram.listgen(intArray9);
        List list18 = AppendPairProgram.listgen(intArray9);
        List list19 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list19, (int) (byte) 1);
        int[] intArray22 = new int[] {};
        List list23 = AppendPairProgram.listgen(intArray22);
        List list24 = AppendPairProgram.listgen(intArray22);
        List list25 = AppendPairProgram.listgen(intArray22);
        appendPairProgram0.TestStudentSubmission(list25, (int) 'a');
        int[] intArray29 = new int[] { 0 };
        List list30 = AppendPairProgram.listgen(intArray29);
        List list31 = AppendPairProgram.listgen(intArray29);
        appendPairProgram0.TestStudentSubmission(list31, (int) (byte) 1);
        int[] intArray34 = new int[] {};
        List list35 = AppendPairProgram.listgen(intArray34);
        List list36 = AppendPairProgram.listgen(intArray34);
        appendPairProgram0.TestStudentSubmission(list36, (int) (byte) -1);
        java.lang.Class<?> wildcardClass39 = list36.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]");
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0]");
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[]");
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0842");
        int[] intArray1 = new int[] { (byte) 10 };
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        List list7 = AppendPairProgram.listgen(intArray1);
        List list8 = AppendPairProgram.listgen(intArray1);
        List list9 = AppendPairProgram.listgen(intArray1);
        List list10 = AppendPairProgram.listgen(intArray1);
        List list11 = AppendPairProgram.listgen(intArray1);
        List list12 = AppendPairProgram.listgen(intArray1);
        java.lang.Class<?> wildcardClass13 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[10]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0843");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, 1);
        int[] intArray17 = new int[] { (byte) 10 };
        List list18 = AppendPairProgram.listgen(intArray17);
        List list19 = AppendPairProgram.listgen(intArray17);
        List list20 = AppendPairProgram.listgen(intArray17);
        List list21 = AppendPairProgram.listgen(intArray17);
        List list22 = AppendPairProgram.listgen(intArray17);
        List list23 = AppendPairProgram.listgen(intArray17);
        List list24 = AppendPairProgram.listgen(intArray17);
        List list25 = AppendPairProgram.listgen(intArray17);
        appendPairProgram0.TestStudentSubmission(list25, (int) (short) 0);
        int[] intArray29 = new int[] { (byte) 10 };
        List list30 = AppendPairProgram.listgen(intArray29);
        List list31 = AppendPairProgram.listgen(intArray29);
        appendPairProgram0.TestStudentSubmission(list31, (-1));
        List list34 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list34, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10]");
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10]");
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
    }

    @Test
    public void test0844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0844");
        int[] intArray5 = new int[] { '4', 10, (byte) 1, (byte) 100, (byte) 10 };
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        List list9 = AppendPairProgram.listgen(intArray5);
        List list10 = AppendPairProgram.listgen(intArray5);
        List list11 = AppendPairProgram.listgen(intArray5);
        java.lang.Class<?> wildcardClass12 = list11.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[52, 10, 1, 100, 10]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0845");
        int[] intArray0 = new int[] {};
        List list1 = AppendPairProgram.listgen(intArray0);
        List list2 = AppendPairProgram.listgen(intArray0);
        List list3 = AppendPairProgram.listgen(intArray0);
        List list4 = AppendPairProgram.listgen(intArray0);
        List list5 = AppendPairProgram.listgen(intArray0);
        List list6 = AppendPairProgram.listgen(intArray0);
        List list7 = AppendPairProgram.listgen(intArray0);
        List list8 = AppendPairProgram.listgen(intArray0);
        List list9 = AppendPairProgram.listgen(intArray0);
        List list10 = AppendPairProgram.listgen(intArray0);
        List list11 = AppendPairProgram.listgen(intArray0);
        List list12 = AppendPairProgram.listgen(intArray0);
        List list13 = AppendPairProgram.listgen(intArray0);
        List list14 = AppendPairProgram.listgen(intArray0);
        List list15 = AppendPairProgram.listgen(intArray0);
        List list16 = AppendPairProgram.listgen(intArray0);
        List list17 = AppendPairProgram.listgen(intArray0);
        List list18 = AppendPairProgram.listgen(intArray0);
        List list19 = AppendPairProgram.listgen(intArray0);
        List list20 = AppendPairProgram.listgen(intArray0);
        List list21 = AppendPairProgram.listgen(intArray0);
        java.lang.Class<?> wildcardClass22 = list21.getClass();
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(list1);
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0846");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) -1);
        int[] intArray14 = new int[] {};
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 10);
        int[] intArray20 = new int[] { 0 };
        List list21 = AppendPairProgram.listgen(intArray20);
        List list22 = AppendPairProgram.listgen(intArray20);
        List list23 = AppendPairProgram.listgen(intArray20);
        List list24 = AppendPairProgram.listgen(intArray20);
        appendPairProgram0.TestStudentSubmission(list24, (int) (short) 10);
        java.lang.Class<?> wildcardClass27 = list24.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0]");
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0847");
        int[] intArray4 = new int[] { 'a', (short) 10, (short) 100, (byte) 0 };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        List list7 = AppendPairProgram.listgen(intArray4);
        List list8 = AppendPairProgram.listgen(intArray4);
        List list9 = AppendPairProgram.listgen(intArray4);
        List list10 = AppendPairProgram.listgen(intArray4);
        List list11 = AppendPairProgram.listgen(intArray4);
        List list12 = AppendPairProgram.listgen(intArray4);
        java.lang.Class<?> wildcardClass13 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[97, 10, 100, 0]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0848");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) -1);
        int[] intArray14 = new int[] {};
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 10);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list23, (int) (byte) 0);
        int[] intArray26 = new int[] {};
        List list27 = AppendPairProgram.listgen(intArray26);
        List list28 = AppendPairProgram.listgen(intArray26);
        List list29 = AppendPairProgram.listgen(intArray26);
        List list30 = AppendPairProgram.listgen(intArray26);
        List list31 = AppendPairProgram.listgen(intArray26);
        List list32 = AppendPairProgram.listgen(intArray26);
        appendPairProgram0.TestStudentSubmission(list32, 100);
        int[] intArray36 = new int[] { (byte) 10 };
        List list37 = AppendPairProgram.listgen(intArray36);
        List list38 = AppendPairProgram.listgen(intArray36);
        List list39 = AppendPairProgram.listgen(intArray36);
        List list40 = AppendPairProgram.listgen(intArray36);
        List list41 = AppendPairProgram.listgen(intArray36);
        List list42 = AppendPairProgram.listgen(intArray36);
        List list43 = AppendPairProgram.listgen(intArray36);
        appendPairProgram0.TestStudentSubmission(list43, 100);
        int[] intArray47 = new int[] { (byte) 10 };
        List list48 = AppendPairProgram.listgen(intArray47);
        appendPairProgram0.TestStudentSubmission(list48, (int) (byte) 0);
        List list51 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list51, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[10]");
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10]");
        org.junit.Assert.assertNotNull(list48);
    }

    @Test
    public void test0849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0849");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray15 = new int[] {};
        List list16 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 100);
        int[] intArray20 = new int[] { (byte) 10 };
        List list21 = AppendPairProgram.listgen(intArray20);
        appendPairProgram0.TestStudentSubmission(list21, (-1));
        int[] intArray25 = new int[] { (byte) 10 };
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        List list31 = AppendPairProgram.listgen(intArray25);
        List list32 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list32, (int) (short) -1);
        int[] intArray35 = new int[] {};
        List list36 = AppendPairProgram.listgen(intArray35);
        List list37 = AppendPairProgram.listgen(intArray35);
        List list38 = AppendPairProgram.listgen(intArray35);
        List list39 = AppendPairProgram.listgen(intArray35);
        List list40 = AppendPairProgram.listgen(intArray35);
        List list41 = AppendPairProgram.listgen(intArray35);
        List list42 = AppendPairProgram.listgen(intArray35);
        List list43 = AppendPairProgram.listgen(intArray35);
        List list44 = AppendPairProgram.listgen(intArray35);
        List list45 = AppendPairProgram.listgen(intArray35);
        List list46 = AppendPairProgram.listgen(intArray35);
        List list47 = AppendPairProgram.listgen(intArray35);
        List list48 = AppendPairProgram.listgen(intArray35);
        List list49 = AppendPairProgram.listgen(intArray35);
        List list50 = AppendPairProgram.listgen(intArray35);
        List list51 = AppendPairProgram.listgen(intArray35);
        appendPairProgram0.TestStudentSubmission(list51, (int) '#');
        int[] intArray54 = new int[] {};
        List list55 = AppendPairProgram.listgen(intArray54);
        List list56 = AppendPairProgram.listgen(intArray54);
        List list57 = AppendPairProgram.listgen(intArray54);
        List list58 = AppendPairProgram.listgen(intArray54);
        appendPairProgram0.TestStudentSubmission(list58, (int) '#');
        java.lang.Class<?> wildcardClass61 = list58.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10]");
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[10]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[]");
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[]");
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0850");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) -1);
        int[] intArray14 = new int[] {};
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 10);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list23, (int) (byte) 0);
        int[] intArray26 = new int[] {};
        List list27 = AppendPairProgram.listgen(intArray26);
        List list28 = AppendPairProgram.listgen(intArray26);
        List list29 = AppendPairProgram.listgen(intArray26);
        List list30 = AppendPairProgram.listgen(intArray26);
        List list31 = AppendPairProgram.listgen(intArray26);
        List list32 = AppendPairProgram.listgen(intArray26);
        appendPairProgram0.TestStudentSubmission(list32, 100);
        int[] intArray36 = new int[] { (byte) 10 };
        List list37 = AppendPairProgram.listgen(intArray36);
        List list38 = AppendPairProgram.listgen(intArray36);
        List list39 = AppendPairProgram.listgen(intArray36);
        List list40 = AppendPairProgram.listgen(intArray36);
        List list41 = AppendPairProgram.listgen(intArray36);
        List list42 = AppendPairProgram.listgen(intArray36);
        List list43 = AppendPairProgram.listgen(intArray36);
        appendPairProgram0.TestStudentSubmission(list43, 100);
        int[] intArray47 = new int[] { 0 };
        List list48 = AppendPairProgram.listgen(intArray47);
        List list49 = AppendPairProgram.listgen(intArray47);
        List list50 = AppendPairProgram.listgen(intArray47);
        List list51 = AppendPairProgram.listgen(intArray47);
        appendPairProgram0.TestStudentSubmission(list51, 0);
        java.lang.Class<?> wildcardClass54 = list51.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[10]");
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0]");
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0851");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) 0);
        int[] intArray15 = new int[] { 0 };
        List list16 = AppendPairProgram.listgen(intArray15);
        List list17 = AppendPairProgram.listgen(intArray15);
        List list18 = AppendPairProgram.listgen(intArray15);
        List list19 = AppendPairProgram.listgen(intArray15);
        List list20 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list20, (int) (byte) 10);
        List list23 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list23, 0);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
    }

    @Test
    public void test0852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0852");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        List list14 = AppendPairProgram.listgen(intArray11);
        List list15 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list15, (int) (byte) -1);
        int[] intArray18 = new int[] {};
        List list19 = AppendPairProgram.listgen(intArray18);
        List list20 = AppendPairProgram.listgen(intArray18);
        List list21 = AppendPairProgram.listgen(intArray18);
        List list22 = AppendPairProgram.listgen(intArray18);
        List list23 = AppendPairProgram.listgen(intArray18);
        List list24 = AppendPairProgram.listgen(intArray18);
        List list25 = AppendPairProgram.listgen(intArray18);
        List list26 = AppendPairProgram.listgen(intArray18);
        List list27 = AppendPairProgram.listgen(intArray18);
        List list28 = AppendPairProgram.listgen(intArray18);
        List list29 = AppendPairProgram.listgen(intArray18);
        List list30 = AppendPairProgram.listgen(intArray18);
        List list31 = AppendPairProgram.listgen(intArray18);
        List list32 = AppendPairProgram.listgen(intArray18);
        appendPairProgram0.TestStudentSubmission(list32, (int) '4');
        java.lang.Class<?> wildcardClass35 = list32.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0853");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        List list14 = AppendPairProgram.listgen(intArray7);
        List list15 = AppendPairProgram.listgen(intArray7);
        List list16 = AppendPairProgram.listgen(intArray7);
        List list17 = AppendPairProgram.listgen(intArray7);
        List list18 = AppendPairProgram.listgen(intArray7);
        List list19 = AppendPairProgram.listgen(intArray7);
        List list20 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list20, (int) '#');
        int[] intArray24 = new int[] { 0 };
        List list25 = AppendPairProgram.listgen(intArray24);
        appendPairProgram0.TestStudentSubmission(list25, (int) (byte) 0);
        List list28 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list28, 10);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0]");
        org.junit.Assert.assertNotNull(list25);
    }

    @Test
    public void test0854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0854");
        int[] intArray6 = new int[] { (byte) 0, (short) -1, ' ', 'a', (byte) 100, (byte) 10 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        List list25 = AppendPairProgram.listgen(intArray6);
        List list26 = AppendPairProgram.listgen(intArray6);
        List list27 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass28 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, -1, 32, 97, 100, 10]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0855");
        int[] intArray6 = new int[] { 0, (short) 10, (short) -1, '#', (byte) 100, 1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        List list25 = AppendPairProgram.listgen(intArray6);
        List list26 = AppendPairProgram.listgen(intArray6);
        List list27 = AppendPairProgram.listgen(intArray6);
        List list28 = AppendPairProgram.listgen(intArray6);
        List list29 = AppendPairProgram.listgen(intArray6);
        List list30 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass31 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 10, -1, 35, 100, 1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0856");
        int[] intArray6 = new int[] { (short) -1, '#', '4', (short) -1, (short) 100, (byte) -1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass19 = list18.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 35, 52, -1, 100, -1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0857");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, (int) (byte) 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list10, (-1));
        int[] intArray13 = new int[] {};
        List list14 = AppendPairProgram.listgen(intArray13);
        List list15 = AppendPairProgram.listgen(intArray13);
        appendPairProgram0.TestStudentSubmission(list15, (int) (byte) 1);
        List list18 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list18, (int) ' ');
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
    }

    @Test
    public void test0858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0858");
        int[] intArray6 = new int[] { (byte) 0, (short) -1, ' ', 'a', (byte) 100, (byte) 10 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass18 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, -1, 32, 97, 100, 10]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0859");
        int[] intArray6 = new int[] { (byte) 0, (short) -1, ' ', 'a', (byte) 100, (byte) 10 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        List list25 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass26 = list25.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, -1, 32, 97, 100, 10]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0860");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, 1);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list22, (int) (short) 1);
        int[] intArray25 = new int[] {};
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        List list31 = AppendPairProgram.listgen(intArray25);
        List list32 = AppendPairProgram.listgen(intArray25);
        List list33 = AppendPairProgram.listgen(intArray25);
        List list34 = AppendPairProgram.listgen(intArray25);
        List list35 = AppendPairProgram.listgen(intArray25);
        List list36 = AppendPairProgram.listgen(intArray25);
        List list37 = AppendPairProgram.listgen(intArray25);
        List list38 = AppendPairProgram.listgen(intArray25);
        List list39 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list39, (int) '#');
        int[] intArray42 = new int[] {};
        List list43 = AppendPairProgram.listgen(intArray42);
        List list44 = AppendPairProgram.listgen(intArray42);
        List list45 = AppendPairProgram.listgen(intArray42);
        List list46 = AppendPairProgram.listgen(intArray42);
        List list47 = AppendPairProgram.listgen(intArray42);
        List list48 = AppendPairProgram.listgen(intArray42);
        List list49 = AppendPairProgram.listgen(intArray42);
        List list50 = AppendPairProgram.listgen(intArray42);
        List list51 = AppendPairProgram.listgen(intArray42);
        appendPairProgram0.TestStudentSubmission(list51, (int) 'a');
        int[] intArray55 = new int[] { (byte) 10 };
        List list56 = AppendPairProgram.listgen(intArray55);
        List list57 = AppendPairProgram.listgen(intArray55);
        List list58 = AppendPairProgram.listgen(intArray55);
        appendPairProgram0.TestStudentSubmission(list58, (int) '4');
        int[] intArray61 = new int[] {};
        List list62 = AppendPairProgram.listgen(intArray61);
        List list63 = AppendPairProgram.listgen(intArray61);
        List list64 = AppendPairProgram.listgen(intArray61);
        List list65 = AppendPairProgram.listgen(intArray61);
        List list66 = AppendPairProgram.listgen(intArray61);
        List list67 = AppendPairProgram.listgen(intArray61);
        List list68 = AppendPairProgram.listgen(intArray61);
        List list69 = AppendPairProgram.listgen(intArray61);
        List list70 = AppendPairProgram.listgen(intArray61);
        List list71 = AppendPairProgram.listgen(intArray61);
        List list72 = AppendPairProgram.listgen(intArray61);
        List list73 = AppendPairProgram.listgen(intArray61);
        List list74 = AppendPairProgram.listgen(intArray61);
        List list75 = AppendPairProgram.listgen(intArray61);
        List list76 = AppendPairProgram.listgen(intArray61);
        List list77 = AppendPairProgram.listgen(intArray61);
        appendPairProgram0.TestStudentSubmission(list77, (int) (short) 10);
        java.lang.Class<?> wildcardClass80 = list77.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]");
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[10]");
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[]");
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(list63);
        org.junit.Assert.assertNotNull(list64);
        org.junit.Assert.assertNotNull(list65);
        org.junit.Assert.assertNotNull(list66);
        org.junit.Assert.assertNotNull(list67);
        org.junit.Assert.assertNotNull(list68);
        org.junit.Assert.assertNotNull(list69);
        org.junit.Assert.assertNotNull(list70);
        org.junit.Assert.assertNotNull(list71);
        org.junit.Assert.assertNotNull(list72);
        org.junit.Assert.assertNotNull(list73);
        org.junit.Assert.assertNotNull(list74);
        org.junit.Assert.assertNotNull(list75);
        org.junit.Assert.assertNotNull(list76);
        org.junit.Assert.assertNotNull(list77);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0861");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray10 = new int[] { (byte) 10 };
        List list11 = AppendPairProgram.listgen(intArray10);
        List list12 = AppendPairProgram.listgen(intArray10);
        List list13 = AppendPairProgram.listgen(intArray10);
        List list14 = AppendPairProgram.listgen(intArray10);
        List list15 = AppendPairProgram.listgen(intArray10);
        List list16 = AppendPairProgram.listgen(intArray10);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 1);
        int[] intArray20 = new int[] { 0 };
        List list21 = AppendPairProgram.listgen(intArray20);
        appendPairProgram0.TestStudentSubmission(list21, (int) (short) -1);
        java.lang.Class<?> wildcardClass24 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10]");
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0]");
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0862");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list24, (int) (short) 0);
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list29, 100);
        int[] intArray33 = new int[] { (byte) 10 };
        List list34 = AppendPairProgram.listgen(intArray33);
        List list35 = AppendPairProgram.listgen(intArray33);
        appendPairProgram0.TestStudentSubmission(list35, 100);
        List list38 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list38, 10);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10]");
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
    }

    @Test
    public void test0863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0863");
        int[] intArray6 = new int[] { (short) -1, '#', '4', (short) -1, (short) 100, (byte) -1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        List list25 = AppendPairProgram.listgen(intArray6);
        List list26 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass27 = list26.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 35, 52, -1, 100, -1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0864");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        List list12 = AppendPairProgram.listgen(intArray9);
        List list13 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        List list27 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list27, 100);
        int[] intArray31 = new int[] { (byte) 10 };
        List list32 = AppendPairProgram.listgen(intArray31);
        List list33 = AppendPairProgram.listgen(intArray31);
        List list34 = AppendPairProgram.listgen(intArray31);
        List list35 = AppendPairProgram.listgen(intArray31);
        List list36 = AppendPairProgram.listgen(intArray31);
        appendPairProgram0.TestStudentSubmission(list36, (int) (byte) 100);
        int[] intArray40 = new int[] { (byte) 10 };
        List list41 = AppendPairProgram.listgen(intArray40);
        List list42 = AppendPairProgram.listgen(intArray40);
        List list43 = AppendPairProgram.listgen(intArray40);
        List list44 = AppendPairProgram.listgen(intArray40);
        List list45 = AppendPairProgram.listgen(intArray40);
        List list46 = AppendPairProgram.listgen(intArray40);
        List list47 = AppendPairProgram.listgen(intArray40);
        List list48 = AppendPairProgram.listgen(intArray40);
        List list49 = AppendPairProgram.listgen(intArray40);
        List list50 = AppendPairProgram.listgen(intArray40);
        List list51 = AppendPairProgram.listgen(intArray40);
        List list52 = AppendPairProgram.listgen(intArray40);
        appendPairProgram0.TestStudentSubmission(list52, (int) (short) 100);
        int[] intArray56 = new int[] { (byte) 10 };
        List list57 = AppendPairProgram.listgen(intArray56);
        List list58 = AppendPairProgram.listgen(intArray56);
        List list59 = AppendPairProgram.listgen(intArray56);
        List list60 = AppendPairProgram.listgen(intArray56);
        List list61 = AppendPairProgram.listgen(intArray56);
        List list62 = AppendPairProgram.listgen(intArray56);
        List list63 = AppendPairProgram.listgen(intArray56);
        List list64 = AppendPairProgram.listgen(intArray56);
        List list65 = AppendPairProgram.listgen(intArray56);
        List list66 = AppendPairProgram.listgen(intArray56);
        List list67 = AppendPairProgram.listgen(intArray56);
        List list68 = AppendPairProgram.listgen(intArray56);
        List list69 = AppendPairProgram.listgen(intArray56);
        List list70 = AppendPairProgram.listgen(intArray56);
        List list71 = AppendPairProgram.listgen(intArray56);
        List list72 = AppendPairProgram.listgen(intArray56);
        List list73 = AppendPairProgram.listgen(intArray56);
        List list74 = AppendPairProgram.listgen(intArray56);
        List list75 = AppendPairProgram.listgen(intArray56);
        List list76 = AppendPairProgram.listgen(intArray56);
        appendPairProgram0.TestStudentSubmission(list76, (int) (byte) 10);
        java.lang.Class<?> wildcardClass79 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10]");
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[10]");
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[10]");
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(list61);
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(list63);
        org.junit.Assert.assertNotNull(list64);
        org.junit.Assert.assertNotNull(list65);
        org.junit.Assert.assertNotNull(list66);
        org.junit.Assert.assertNotNull(list67);
        org.junit.Assert.assertNotNull(list68);
        org.junit.Assert.assertNotNull(list69);
        org.junit.Assert.assertNotNull(list70);
        org.junit.Assert.assertNotNull(list71);
        org.junit.Assert.assertNotNull(list72);
        org.junit.Assert.assertNotNull(list73);
        org.junit.Assert.assertNotNull(list74);
        org.junit.Assert.assertNotNull(list75);
        org.junit.Assert.assertNotNull(list76);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0865");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, (int) '4');
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list26, (int) (byte) 1);
        int[] intArray30 = new int[] { 0 };
        List list31 = AppendPairProgram.listgen(intArray30);
        List list32 = AppendPairProgram.listgen(intArray30);
        appendPairProgram0.TestStudentSubmission(list32, (int) 'a');
        int[] intArray36 = new int[] { 0 };
        List list37 = AppendPairProgram.listgen(intArray36);
        List list38 = AppendPairProgram.listgen(intArray36);
        List list39 = AppendPairProgram.listgen(intArray36);
        appendPairProgram0.TestStudentSubmission(list39, (int) (short) 1);
        int[] intArray42 = new int[] {};
        List list43 = AppendPairProgram.listgen(intArray42);
        List list44 = AppendPairProgram.listgen(intArray42);
        List list45 = AppendPairProgram.listgen(intArray42);
        List list46 = AppendPairProgram.listgen(intArray42);
        List list47 = AppendPairProgram.listgen(intArray42);
        List list48 = AppendPairProgram.listgen(intArray42);
        List list49 = AppendPairProgram.listgen(intArray42);
        List list50 = AppendPairProgram.listgen(intArray42);
        List list51 = AppendPairProgram.listgen(intArray42);
        List list52 = AppendPairProgram.listgen(intArray42);
        List list53 = AppendPairProgram.listgen(intArray42);
        List list54 = AppendPairProgram.listgen(intArray42);
        List list55 = AppendPairProgram.listgen(intArray42);
        List list56 = AppendPairProgram.listgen(intArray42);
        List list57 = AppendPairProgram.listgen(intArray42);
        appendPairProgram0.TestStudentSubmission(list57, (int) (byte) -1);
        java.lang.Class<?> wildcardClass60 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0]");
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0]");
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]");
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0866");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray16 = new int[] { (byte) 10 };
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list18, (int) (byte) -1);
        int[] intArray21 = new int[] {};
        List list22 = AppendPairProgram.listgen(intArray21);
        List list23 = AppendPairProgram.listgen(intArray21);
        List list24 = AppendPairProgram.listgen(intArray21);
        List list25 = AppendPairProgram.listgen(intArray21);
        List list26 = AppendPairProgram.listgen(intArray21);
        List list27 = AppendPairProgram.listgen(intArray21);
        List list28 = AppendPairProgram.listgen(intArray21);
        List list29 = AppendPairProgram.listgen(intArray21);
        List list30 = AppendPairProgram.listgen(intArray21);
        appendPairProgram0.TestStudentSubmission(list30, (int) (short) -1);
        int[] intArray33 = new int[] {};
        List list34 = AppendPairProgram.listgen(intArray33);
        List list35 = AppendPairProgram.listgen(intArray33);
        List list36 = AppendPairProgram.listgen(intArray33);
        List list37 = AppendPairProgram.listgen(intArray33);
        List list38 = AppendPairProgram.listgen(intArray33);
        List list39 = AppendPairProgram.listgen(intArray33);
        List list40 = AppendPairProgram.listgen(intArray33);
        List list41 = AppendPairProgram.listgen(intArray33);
        List list42 = AppendPairProgram.listgen(intArray33);
        List list43 = AppendPairProgram.listgen(intArray33);
        List list44 = AppendPairProgram.listgen(intArray33);
        List list45 = AppendPairProgram.listgen(intArray33);
        List list46 = AppendPairProgram.listgen(intArray33);
        List list47 = AppendPairProgram.listgen(intArray33);
        List list48 = AppendPairProgram.listgen(intArray33);
        List list49 = AppendPairProgram.listgen(intArray33);
        appendPairProgram0.TestStudentSubmission(list49, 0);
        java.lang.Class<?> wildcardClass52 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]");
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0867");
        int[] intArray3 = new int[] { 0, '#', (short) -1 };
        List list4 = AppendPairProgram.listgen(intArray3);
        List list5 = AppendPairProgram.listgen(intArray3);
        List list6 = AppendPairProgram.listgen(intArray3);
        List list7 = AppendPairProgram.listgen(intArray3);
        List list8 = AppendPairProgram.listgen(intArray3);
        List list9 = AppendPairProgram.listgen(intArray3);
        List list10 = AppendPairProgram.listgen(intArray3);
        List list11 = AppendPairProgram.listgen(intArray3);
        List list12 = AppendPairProgram.listgen(intArray3);
        List list13 = AppendPairProgram.listgen(intArray3);
        List list14 = AppendPairProgram.listgen(intArray3);
        List list15 = AppendPairProgram.listgen(intArray3);
        List list16 = AppendPairProgram.listgen(intArray3);
        List list17 = AppendPairProgram.listgen(intArray3);
        List list18 = AppendPairProgram.listgen(intArray3);
        List list19 = AppendPairProgram.listgen(intArray3);
        List list20 = AppendPairProgram.listgen(intArray3);
        List list21 = AppendPairProgram.listgen(intArray3);
        List list22 = AppendPairProgram.listgen(intArray3);
        List list23 = AppendPairProgram.listgen(intArray3);
        java.lang.Class<?> wildcardClass24 = list23.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[0, 35, -1]");
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0868");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        List list14 = AppendPairProgram.listgen(intArray7);
        List list15 = AppendPairProgram.listgen(intArray7);
        List list16 = AppendPairProgram.listgen(intArray7);
        List list17 = AppendPairProgram.listgen(intArray7);
        List list18 = AppendPairProgram.listgen(intArray7);
        List list19 = AppendPairProgram.listgen(intArray7);
        List list20 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list20, (int) '#');
        int[] intArray24 = new int[] { (byte) 10 };
        List list25 = AppendPairProgram.listgen(intArray24);
        List list26 = AppendPairProgram.listgen(intArray24);
        List list27 = AppendPairProgram.listgen(intArray24);
        List list28 = AppendPairProgram.listgen(intArray24);
        List list29 = AppendPairProgram.listgen(intArray24);
        List list30 = AppendPairProgram.listgen(intArray24);
        List list31 = AppendPairProgram.listgen(intArray24);
        List list32 = AppendPairProgram.listgen(intArray24);
        List list33 = AppendPairProgram.listgen(intArray24);
        List list34 = AppendPairProgram.listgen(intArray24);
        List list35 = AppendPairProgram.listgen(intArray24);
        List list36 = AppendPairProgram.listgen(intArray24);
        List list37 = AppendPairProgram.listgen(intArray24);
        appendPairProgram0.TestStudentSubmission(list37, (int) (byte) 100);
        java.lang.Class<?> wildcardClass40 = list37.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[10]");
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0869");
        int[] intArray4 = new int[] { 'a', (byte) -1, 100, (byte) 10 };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        List list7 = AppendPairProgram.listgen(intArray4);
        List list8 = AppendPairProgram.listgen(intArray4);
        List list9 = AppendPairProgram.listgen(intArray4);
        List list10 = AppendPairProgram.listgen(intArray4);
        List list11 = AppendPairProgram.listgen(intArray4);
        List list12 = AppendPairProgram.listgen(intArray4);
        List list13 = AppendPairProgram.listgen(intArray4);
        List list14 = AppendPairProgram.listgen(intArray4);
        List list15 = AppendPairProgram.listgen(intArray4);
        List list16 = AppendPairProgram.listgen(intArray4);
        java.lang.Class<?> wildcardClass17 = list16.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[97, -1, 100, 10]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0870");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        List list7 = AppendPairProgram.listgen(intArray1);
        List list8 = AppendPairProgram.listgen(intArray1);
        List list9 = AppendPairProgram.listgen(intArray1);
        List list10 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list10, (int) (byte) 10);
        int[] intArray14 = new int[] { 0 };
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) ' ');
        int[] intArray20 = new int[] { 0 };
        List list21 = AppendPairProgram.listgen(intArray20);
        List list22 = AppendPairProgram.listgen(intArray20);
        List list23 = AppendPairProgram.listgen(intArray20);
        List list24 = AppendPairProgram.listgen(intArray20);
        appendPairProgram0.TestStudentSubmission(list24, (int) (short) -1);
        java.lang.Class<?> wildcardClass27 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0]");
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0871");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        List list7 = AppendPairProgram.listgen(intArray1);
        List list8 = AppendPairProgram.listgen(intArray1);
        List list9 = AppendPairProgram.listgen(intArray1);
        List list10 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list10, (int) (byte) 10);
        int[] intArray14 = new int[] { 0 };
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (short) 0);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list23, 0);
        int[] intArray26 = new int[] {};
        List list27 = AppendPairProgram.listgen(intArray26);
        List list28 = AppendPairProgram.listgen(intArray26);
        List list29 = AppendPairProgram.listgen(intArray26);
        List list30 = AppendPairProgram.listgen(intArray26);
        List list31 = AppendPairProgram.listgen(intArray26);
        List list32 = AppendPairProgram.listgen(intArray26);
        List list33 = AppendPairProgram.listgen(intArray26);
        List list34 = AppendPairProgram.listgen(intArray26);
        List list35 = AppendPairProgram.listgen(intArray26);
        appendPairProgram0.TestStudentSubmission(list35, (int) (short) -1);
        java.lang.Class<?> wildcardClass38 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0872");
        int[] intArray6 = new int[] { (short) 0, (byte) 0, (byte) 1, 0, (-1), (byte) 100 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        List list25 = AppendPairProgram.listgen(intArray6);
        List list26 = AppendPairProgram.listgen(intArray6);
        List list27 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass28 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0, 1, 0, -1, 100]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0873");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 10);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        List list14 = AppendPairProgram.listgen(intArray11);
        List list15 = AppendPairProgram.listgen(intArray11);
        List list16 = AppendPairProgram.listgen(intArray11);
        List list17 = AppendPairProgram.listgen(intArray11);
        List list18 = AppendPairProgram.listgen(intArray11);
        List list19 = AppendPairProgram.listgen(intArray11);
        List list20 = AppendPairProgram.listgen(intArray11);
        List list21 = AppendPairProgram.listgen(intArray11);
        List list22 = AppendPairProgram.listgen(intArray11);
        List list23 = AppendPairProgram.listgen(intArray11);
        List list24 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list24, (int) (byte) 0);
        int[] intArray27 = new int[] {};
        List list28 = AppendPairProgram.listgen(intArray27);
        appendPairProgram0.TestStudentSubmission(list28, 0);
        int[] intArray31 = new int[] {};
        List list32 = AppendPairProgram.listgen(intArray31);
        List list33 = AppendPairProgram.listgen(intArray31);
        List list34 = AppendPairProgram.listgen(intArray31);
        List list35 = AppendPairProgram.listgen(intArray31);
        List list36 = AppendPairProgram.listgen(intArray31);
        List list37 = AppendPairProgram.listgen(intArray31);
        List list38 = AppendPairProgram.listgen(intArray31);
        List list39 = AppendPairProgram.listgen(intArray31);
        List list40 = AppendPairProgram.listgen(intArray31);
        List list41 = AppendPairProgram.listgen(intArray31);
        List list42 = AppendPairProgram.listgen(intArray31);
        List list43 = AppendPairProgram.listgen(intArray31);
        appendPairProgram0.TestStudentSubmission(list43, (-1));
        java.lang.Class<?> wildcardClass46 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[]");
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]");
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0874");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) 0);
        int[] intArray15 = new int[] { 0 };
        List list16 = AppendPairProgram.listgen(intArray15);
        List list17 = AppendPairProgram.listgen(intArray15);
        List list18 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list18, (int) (byte) 10);
        java.lang.Class<?> wildcardClass21 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0875");
        int[] intArray6 = new int[] { (short) 0, (byte) 0, (byte) 1, 0, (-1), (byte) 100 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass24 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0, 1, 0, -1, 100]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0876");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray17 = new int[] { (byte) 10 };
        List list18 = AppendPairProgram.listgen(intArray17);
        List list19 = AppendPairProgram.listgen(intArray17);
        List list20 = AppendPairProgram.listgen(intArray17);
        List list21 = AppendPairProgram.listgen(intArray17);
        List list22 = AppendPairProgram.listgen(intArray17);
        List list23 = AppendPairProgram.listgen(intArray17);
        List list24 = AppendPairProgram.listgen(intArray17);
        List list25 = AppendPairProgram.listgen(intArray17);
        appendPairProgram0.TestStudentSubmission(list25, (int) (byte) 100);
        int[] intArray28 = new int[] {};
        List list29 = AppendPairProgram.listgen(intArray28);
        List list30 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list30, 0);
        int[] intArray34 = new int[] { (byte) 10 };
        List list35 = AppendPairProgram.listgen(intArray34);
        List list36 = AppendPairProgram.listgen(intArray34);
        List list37 = AppendPairProgram.listgen(intArray34);
        List list38 = AppendPairProgram.listgen(intArray34);
        List list39 = AppendPairProgram.listgen(intArray34);
        List list40 = AppendPairProgram.listgen(intArray34);
        List list41 = AppendPairProgram.listgen(intArray34);
        appendPairProgram0.TestStudentSubmission(list41, (int) (byte) 100);
        int[] intArray44 = new int[] {};
        List list45 = AppendPairProgram.listgen(intArray44);
        List list46 = AppendPairProgram.listgen(intArray44);
        List list47 = AppendPairProgram.listgen(intArray44);
        appendPairProgram0.TestStudentSubmission(list47, (int) (byte) 1);
        java.lang.Class<?> wildcardClass50 = list47.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10]");
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[10]");
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[]");
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0877");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) -1);
        int[] intArray14 = new int[] {};
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 10);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list23, (int) (byte) 0);
        int[] intArray26 = new int[] {};
        List list27 = AppendPairProgram.listgen(intArray26);
        List list28 = AppendPairProgram.listgen(intArray26);
        List list29 = AppendPairProgram.listgen(intArray26);
        List list30 = AppendPairProgram.listgen(intArray26);
        List list31 = AppendPairProgram.listgen(intArray26);
        List list32 = AppendPairProgram.listgen(intArray26);
        appendPairProgram0.TestStudentSubmission(list32, 100);
        int[] intArray36 = new int[] { (byte) 10 };
        List list37 = AppendPairProgram.listgen(intArray36);
        List list38 = AppendPairProgram.listgen(intArray36);
        List list39 = AppendPairProgram.listgen(intArray36);
        List list40 = AppendPairProgram.listgen(intArray36);
        List list41 = AppendPairProgram.listgen(intArray36);
        List list42 = AppendPairProgram.listgen(intArray36);
        List list43 = AppendPairProgram.listgen(intArray36);
        appendPairProgram0.TestStudentSubmission(list43, 100);
        int[] intArray46 = new int[] {};
        List list47 = AppendPairProgram.listgen(intArray46);
        List list48 = AppendPairProgram.listgen(intArray46);
        List list49 = AppendPairProgram.listgen(intArray46);
        List list50 = AppendPairProgram.listgen(intArray46);
        List list51 = AppendPairProgram.listgen(intArray46);
        List list52 = AppendPairProgram.listgen(intArray46);
        List list53 = AppendPairProgram.listgen(intArray46);
        appendPairProgram0.TestStudentSubmission(list53, (int) (short) 1);
        int[] intArray57 = new int[] { (byte) 10 };
        List list58 = AppendPairProgram.listgen(intArray57);
        List list59 = AppendPairProgram.listgen(intArray57);
        List list60 = AppendPairProgram.listgen(intArray57);
        List list61 = AppendPairProgram.listgen(intArray57);
        List list62 = AppendPairProgram.listgen(intArray57);
        List list63 = AppendPairProgram.listgen(intArray57);
        List list64 = AppendPairProgram.listgen(intArray57);
        List list65 = AppendPairProgram.listgen(intArray57);
        List list66 = AppendPairProgram.listgen(intArray57);
        List list67 = AppendPairProgram.listgen(intArray57);
        List list68 = AppendPairProgram.listgen(intArray57);
        List list69 = AppendPairProgram.listgen(intArray57);
        List list70 = AppendPairProgram.listgen(intArray57);
        List list71 = AppendPairProgram.listgen(intArray57);
        List list72 = AppendPairProgram.listgen(intArray57);
        List list73 = AppendPairProgram.listgen(intArray57);
        List list74 = AppendPairProgram.listgen(intArray57);
        appendPairProgram0.TestStudentSubmission(list74, 100);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[10]");
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[10]");
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(list61);
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(list63);
        org.junit.Assert.assertNotNull(list64);
        org.junit.Assert.assertNotNull(list65);
        org.junit.Assert.assertNotNull(list66);
        org.junit.Assert.assertNotNull(list67);
        org.junit.Assert.assertNotNull(list68);
        org.junit.Assert.assertNotNull(list69);
        org.junit.Assert.assertNotNull(list70);
        org.junit.Assert.assertNotNull(list71);
        org.junit.Assert.assertNotNull(list72);
        org.junit.Assert.assertNotNull(list73);
        org.junit.Assert.assertNotNull(list74);
    }

    @Test
    public void test0878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0878");
        int[] intArray6 = new int[] { 0, (short) 10, (short) -1, '#', (byte) 100, 1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass23 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 10, -1, 35, 100, 1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0879");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 10);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        List list14 = AppendPairProgram.listgen(intArray11);
        List list15 = AppendPairProgram.listgen(intArray11);
        List list16 = AppendPairProgram.listgen(intArray11);
        List list17 = AppendPairProgram.listgen(intArray11);
        List list18 = AppendPairProgram.listgen(intArray11);
        List list19 = AppendPairProgram.listgen(intArray11);
        List list20 = AppendPairProgram.listgen(intArray11);
        List list21 = AppendPairProgram.listgen(intArray11);
        List list22 = AppendPairProgram.listgen(intArray11);
        List list23 = AppendPairProgram.listgen(intArray11);
        List list24 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list24, (int) (byte) 0);
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        List list30 = AppendPairProgram.listgen(intArray28);
        List list31 = AppendPairProgram.listgen(intArray28);
        List list32 = AppendPairProgram.listgen(intArray28);
        List list33 = AppendPairProgram.listgen(intArray28);
        List list34 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list34, 1);
        int[] intArray38 = new int[] { (byte) 10 };
        List list39 = AppendPairProgram.listgen(intArray38);
        List list40 = AppendPairProgram.listgen(intArray38);
        List list41 = AppendPairProgram.listgen(intArray38);
        List list42 = AppendPairProgram.listgen(intArray38);
        List list43 = AppendPairProgram.listgen(intArray38);
        List list44 = AppendPairProgram.listgen(intArray38);
        List list45 = AppendPairProgram.listgen(intArray38);
        List list46 = AppendPairProgram.listgen(intArray38);
        List list47 = AppendPairProgram.listgen(intArray38);
        appendPairProgram0.TestStudentSubmission(list47, (int) (byte) 100);
        int[] intArray51 = new int[] { (byte) 10 };
        List list52 = AppendPairProgram.listgen(intArray51);
        appendPairProgram0.TestStudentSubmission(list52, (int) (byte) -1);
        java.lang.Class<?> wildcardClass55 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[10]");
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[10]");
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0880");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list24, (int) (short) 0);
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list29, 100);
        int[] intArray33 = new int[] { (byte) 10 };
        List list34 = AppendPairProgram.listgen(intArray33);
        appendPairProgram0.TestStudentSubmission(list34, 1);
        int[] intArray38 = new int[] { (byte) 10 };
        List list39 = AppendPairProgram.listgen(intArray38);
        List list40 = AppendPairProgram.listgen(intArray38);
        List list41 = AppendPairProgram.listgen(intArray38);
        List list42 = AppendPairProgram.listgen(intArray38);
        List list43 = AppendPairProgram.listgen(intArray38);
        List list44 = AppendPairProgram.listgen(intArray38);
        List list45 = AppendPairProgram.listgen(intArray38);
        List list46 = AppendPairProgram.listgen(intArray38);
        List list47 = AppendPairProgram.listgen(intArray38);
        List list48 = AppendPairProgram.listgen(intArray38);
        List list49 = AppendPairProgram.listgen(intArray38);
        List list50 = AppendPairProgram.listgen(intArray38);
        List list51 = AppendPairProgram.listgen(intArray38);
        List list52 = AppendPairProgram.listgen(intArray38);
        appendPairProgram0.TestStudentSubmission(list52, (int) (byte) 100);
        List list55 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list55, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10]");
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[10]");
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
    }

    @Test
    public void test0881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0881");
        int[] intArray5 = new int[] { (-1), 100, (short) 0, (byte) 100, (short) 100 };
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        java.lang.Class<?> wildcardClass8 = list7.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 0, 100, 100]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0882");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray15 = new int[] {};
        List list16 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 100);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        List list24 = AppendPairProgram.listgen(intArray19);
        List list25 = AppendPairProgram.listgen(intArray19);
        List list26 = AppendPairProgram.listgen(intArray19);
        List list27 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list27, (int) (short) -1);
        int[] intArray31 = new int[] { (byte) 10 };
        List list32 = AppendPairProgram.listgen(intArray31);
        List list33 = AppendPairProgram.listgen(intArray31);
        List list34 = AppendPairProgram.listgen(intArray31);
        List list35 = AppendPairProgram.listgen(intArray31);
        List list36 = AppendPairProgram.listgen(intArray31);
        List list37 = AppendPairProgram.listgen(intArray31);
        List list38 = AppendPairProgram.listgen(intArray31);
        List list39 = AppendPairProgram.listgen(intArray31);
        List list40 = AppendPairProgram.listgen(intArray31);
        List list41 = AppendPairProgram.listgen(intArray31);
        List list42 = AppendPairProgram.listgen(intArray31);
        List list43 = AppendPairProgram.listgen(intArray31);
        List list44 = AppendPairProgram.listgen(intArray31);
        List list45 = AppendPairProgram.listgen(intArray31);
        List list46 = AppendPairProgram.listgen(intArray31);
        List list47 = AppendPairProgram.listgen(intArray31);
        List list48 = AppendPairProgram.listgen(intArray31);
        List list49 = AppendPairProgram.listgen(intArray31);
        List list50 = AppendPairProgram.listgen(intArray31);
        appendPairProgram0.TestStudentSubmission(list50, (int) ' ');
        java.lang.Class<?> wildcardClass53 = list50.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10]");
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0883");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        List list14 = AppendPairProgram.listgen(intArray7);
        List list15 = AppendPairProgram.listgen(intArray7);
        List list16 = AppendPairProgram.listgen(intArray7);
        List list17 = AppendPairProgram.listgen(intArray7);
        List list18 = AppendPairProgram.listgen(intArray7);
        List list19 = AppendPairProgram.listgen(intArray7);
        List list20 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list20, (int) '#');
        int[] intArray24 = new int[] { 0 };
        List list25 = AppendPairProgram.listgen(intArray24);
        appendPairProgram0.TestStudentSubmission(list25, (int) (byte) 0);
        int[] intArray29 = new int[] { (byte) 10 };
        List list30 = AppendPairProgram.listgen(intArray29);
        List list31 = AppendPairProgram.listgen(intArray29);
        appendPairProgram0.TestStudentSubmission(list31, 100);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0]");
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10]");
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
    }

    @Test
    public void test0884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0884");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list24, (int) (short) 0);
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list29, 100);
        int[] intArray33 = new int[] { (byte) 10 };
        List list34 = AppendPairProgram.listgen(intArray33);
        appendPairProgram0.TestStudentSubmission(list34, 1);
        int[] intArray38 = new int[] { (byte) 10 };
        List list39 = AppendPairProgram.listgen(intArray38);
        List list40 = AppendPairProgram.listgen(intArray38);
        List list41 = AppendPairProgram.listgen(intArray38);
        List list42 = AppendPairProgram.listgen(intArray38);
        List list43 = AppendPairProgram.listgen(intArray38);
        List list44 = AppendPairProgram.listgen(intArray38);
        List list45 = AppendPairProgram.listgen(intArray38);
        List list46 = AppendPairProgram.listgen(intArray38);
        List list47 = AppendPairProgram.listgen(intArray38);
        List list48 = AppendPairProgram.listgen(intArray38);
        List list49 = AppendPairProgram.listgen(intArray38);
        List list50 = AppendPairProgram.listgen(intArray38);
        List list51 = AppendPairProgram.listgen(intArray38);
        List list52 = AppendPairProgram.listgen(intArray38);
        appendPairProgram0.TestStudentSubmission(list52, (int) (byte) 100);
        List list55 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list55, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10]");
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[10]");
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
    }

    @Test
    public void test0885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0885");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, 1);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list22, (int) (short) 1);
        int[] intArray25 = new int[] {};
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        List list31 = AppendPairProgram.listgen(intArray25);
        List list32 = AppendPairProgram.listgen(intArray25);
        List list33 = AppendPairProgram.listgen(intArray25);
        List list34 = AppendPairProgram.listgen(intArray25);
        List list35 = AppendPairProgram.listgen(intArray25);
        List list36 = AppendPairProgram.listgen(intArray25);
        List list37 = AppendPairProgram.listgen(intArray25);
        List list38 = AppendPairProgram.listgen(intArray25);
        List list39 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list39, (int) '#');
        int[] intArray42 = new int[] {};
        List list43 = AppendPairProgram.listgen(intArray42);
        List list44 = AppendPairProgram.listgen(intArray42);
        List list45 = AppendPairProgram.listgen(intArray42);
        appendPairProgram0.TestStudentSubmission(list45, 10);
        int[] intArray49 = new int[] { (byte) 10 };
        List list50 = AppendPairProgram.listgen(intArray49);
        List list51 = AppendPairProgram.listgen(intArray49);
        List list52 = AppendPairProgram.listgen(intArray49);
        List list53 = AppendPairProgram.listgen(intArray49);
        List list54 = AppendPairProgram.listgen(intArray49);
        List list55 = AppendPairProgram.listgen(intArray49);
        appendPairProgram0.TestStudentSubmission(list55, 1);
        int[] intArray59 = new int[] { (byte) 10 };
        List list60 = AppendPairProgram.listgen(intArray59);
        List list61 = AppendPairProgram.listgen(intArray59);
        List list62 = AppendPairProgram.listgen(intArray59);
        List list63 = AppendPairProgram.listgen(intArray59);
        List list64 = AppendPairProgram.listgen(intArray59);
        List list65 = AppendPairProgram.listgen(intArray59);
        List list66 = AppendPairProgram.listgen(intArray59);
        appendPairProgram0.TestStudentSubmission(list66, (int) (byte) 1);
        java.lang.Class<?> wildcardClass69 = list66.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]");
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[10]");
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[10]");
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(list61);
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(list63);
        org.junit.Assert.assertNotNull(list64);
        org.junit.Assert.assertNotNull(list65);
        org.junit.Assert.assertNotNull(list66);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0886");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 10);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        List list14 = AppendPairProgram.listgen(intArray11);
        List list15 = AppendPairProgram.listgen(intArray11);
        List list16 = AppendPairProgram.listgen(intArray11);
        List list17 = AppendPairProgram.listgen(intArray11);
        List list18 = AppendPairProgram.listgen(intArray11);
        List list19 = AppendPairProgram.listgen(intArray11);
        List list20 = AppendPairProgram.listgen(intArray11);
        List list21 = AppendPairProgram.listgen(intArray11);
        List list22 = AppendPairProgram.listgen(intArray11);
        List list23 = AppendPairProgram.listgen(intArray11);
        List list24 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list24, (int) (byte) 0);
        int[] intArray27 = new int[] {};
        List list28 = AppendPairProgram.listgen(intArray27);
        List list29 = AppendPairProgram.listgen(intArray27);
        appendPairProgram0.TestStudentSubmission(list29, (int) 'a');
        java.lang.Class<?> wildcardClass32 = list29.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[]");
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0887");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) -1);
        int[] intArray14 = new int[] {};
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 10);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list23, (int) (byte) 0);
        int[] intArray26 = new int[] {};
        List list27 = AppendPairProgram.listgen(intArray26);
        List list28 = AppendPairProgram.listgen(intArray26);
        List list29 = AppendPairProgram.listgen(intArray26);
        List list30 = AppendPairProgram.listgen(intArray26);
        List list31 = AppendPairProgram.listgen(intArray26);
        List list32 = AppendPairProgram.listgen(intArray26);
        appendPairProgram0.TestStudentSubmission(list32, 100);
        int[] intArray36 = new int[] { (byte) 10 };
        List list37 = AppendPairProgram.listgen(intArray36);
        List list38 = AppendPairProgram.listgen(intArray36);
        List list39 = AppendPairProgram.listgen(intArray36);
        List list40 = AppendPairProgram.listgen(intArray36);
        List list41 = AppendPairProgram.listgen(intArray36);
        List list42 = AppendPairProgram.listgen(intArray36);
        List list43 = AppendPairProgram.listgen(intArray36);
        appendPairProgram0.TestStudentSubmission(list43, 100);
        int[] intArray46 = new int[] {};
        List list47 = AppendPairProgram.listgen(intArray46);
        List list48 = AppendPairProgram.listgen(intArray46);
        List list49 = AppendPairProgram.listgen(intArray46);
        List list50 = AppendPairProgram.listgen(intArray46);
        List list51 = AppendPairProgram.listgen(intArray46);
        List list52 = AppendPairProgram.listgen(intArray46);
        List list53 = AppendPairProgram.listgen(intArray46);
        appendPairProgram0.TestStudentSubmission(list53, (int) (short) 1);
        int[] intArray57 = new int[] { 0 };
        List list58 = AppendPairProgram.listgen(intArray57);
        List list59 = AppendPairProgram.listgen(intArray57);
        appendPairProgram0.TestStudentSubmission(list59, (int) (byte) 100);
        java.lang.Class<?> wildcardClass62 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[10]");
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0]");
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0888");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) 0);
        int[] intArray15 = new int[] { (byte) 10 };
        List list16 = AppendPairProgram.listgen(intArray15);
        List list17 = AppendPairProgram.listgen(intArray15);
        List list18 = AppendPairProgram.listgen(intArray15);
        List list19 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list19, (int) (byte) 100);
        int[] intArray23 = new int[] { 0 };
        List list24 = AppendPairProgram.listgen(intArray23);
        List list25 = AppendPairProgram.listgen(intArray23);
        List list26 = AppendPairProgram.listgen(intArray23);
        appendPairProgram0.TestStudentSubmission(list26, (int) (short) -1);
        java.lang.Class<?> wildcardClass29 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0]");
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0889");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list11, 0);
        int[] intArray15 = new int[] { (byte) 10 };
        List list16 = AppendPairProgram.listgen(intArray15);
        List list17 = AppendPairProgram.listgen(intArray15);
        List list18 = AppendPairProgram.listgen(intArray15);
        List list19 = AppendPairProgram.listgen(intArray15);
        List list20 = AppendPairProgram.listgen(intArray15);
        List list21 = AppendPairProgram.listgen(intArray15);
        List list22 = AppendPairProgram.listgen(intArray15);
        List list23 = AppendPairProgram.listgen(intArray15);
        List list24 = AppendPairProgram.listgen(intArray15);
        List list25 = AppendPairProgram.listgen(intArray15);
        List list26 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list26, (int) (byte) 100);
        int[] intArray30 = new int[] { (byte) 10 };
        List list31 = AppendPairProgram.listgen(intArray30);
        List list32 = AppendPairProgram.listgen(intArray30);
        List list33 = AppendPairProgram.listgen(intArray30);
        List list34 = AppendPairProgram.listgen(intArray30);
        List list35 = AppendPairProgram.listgen(intArray30);
        List list36 = AppendPairProgram.listgen(intArray30);
        List list37 = AppendPairProgram.listgen(intArray30);
        List list38 = AppendPairProgram.listgen(intArray30);
        List list39 = AppendPairProgram.listgen(intArray30);
        List list40 = AppendPairProgram.listgen(intArray30);
        appendPairProgram0.TestStudentSubmission(list40, 1);
        java.lang.Class<?> wildcardClass43 = list40.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[10]");
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0890");
        int[] intArray4 = new int[] { 'a', (short) 10, (short) 100, (byte) 0 };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        List list7 = AppendPairProgram.listgen(intArray4);
        List list8 = AppendPairProgram.listgen(intArray4);
        List list9 = AppendPairProgram.listgen(intArray4);
        List list10 = AppendPairProgram.listgen(intArray4);
        List list11 = AppendPairProgram.listgen(intArray4);
        java.lang.Class<?> wildcardClass12 = list11.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[97, 10, 100, 0]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0891");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        List list14 = AppendPairProgram.listgen(intArray11);
        List list15 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list15, (int) (byte) -1);
        int[] intArray18 = new int[] {};
        List list19 = AppendPairProgram.listgen(intArray18);
        List list20 = AppendPairProgram.listgen(intArray18);
        List list21 = AppendPairProgram.listgen(intArray18);
        List list22 = AppendPairProgram.listgen(intArray18);
        List list23 = AppendPairProgram.listgen(intArray18);
        List list24 = AppendPairProgram.listgen(intArray18);
        List list25 = AppendPairProgram.listgen(intArray18);
        appendPairProgram0.TestStudentSubmission(list25, (-1));
        int[] intArray28 = new int[] {};
        List list29 = AppendPairProgram.listgen(intArray28);
        List list30 = AppendPairProgram.listgen(intArray28);
        List list31 = AppendPairProgram.listgen(intArray28);
        List list32 = AppendPairProgram.listgen(intArray28);
        List list33 = AppendPairProgram.listgen(intArray28);
        List list34 = AppendPairProgram.listgen(intArray28);
        List list35 = AppendPairProgram.listgen(intArray28);
        List list36 = AppendPairProgram.listgen(intArray28);
        List list37 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list37, 10);
        int[] intArray40 = new int[] {};
        List list41 = AppendPairProgram.listgen(intArray40);
        List list42 = AppendPairProgram.listgen(intArray40);
        List list43 = AppendPairProgram.listgen(intArray40);
        List list44 = AppendPairProgram.listgen(intArray40);
        List list45 = AppendPairProgram.listgen(intArray40);
        List list46 = AppendPairProgram.listgen(intArray40);
        List list47 = AppendPairProgram.listgen(intArray40);
        List list48 = AppendPairProgram.listgen(intArray40);
        List list49 = AppendPairProgram.listgen(intArray40);
        List list50 = AppendPairProgram.listgen(intArray40);
        List list51 = AppendPairProgram.listgen(intArray40);
        List list52 = AppendPairProgram.listgen(intArray40);
        appendPairProgram0.TestStudentSubmission(list52, (int) (short) 100);
        int[] intArray56 = new int[] { 0 };
        List list57 = AppendPairProgram.listgen(intArray56);
        List list58 = AppendPairProgram.listgen(intArray56);
        List list59 = AppendPairProgram.listgen(intArray56);
        appendPairProgram0.TestStudentSubmission(list59, (int) (byte) -1);
        java.lang.Class<?> wildcardClass62 = list59.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[]");
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0]");
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0892");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) -1);
        int[] intArray14 = new int[] {};
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 10);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list23, (int) (byte) 0);
        int[] intArray26 = new int[] {};
        List list27 = AppendPairProgram.listgen(intArray26);
        List list28 = AppendPairProgram.listgen(intArray26);
        List list29 = AppendPairProgram.listgen(intArray26);
        List list30 = AppendPairProgram.listgen(intArray26);
        List list31 = AppendPairProgram.listgen(intArray26);
        List list32 = AppendPairProgram.listgen(intArray26);
        appendPairProgram0.TestStudentSubmission(list32, 100);
        int[] intArray36 = new int[] { (byte) 10 };
        List list37 = AppendPairProgram.listgen(intArray36);
        List list38 = AppendPairProgram.listgen(intArray36);
        List list39 = AppendPairProgram.listgen(intArray36);
        List list40 = AppendPairProgram.listgen(intArray36);
        List list41 = AppendPairProgram.listgen(intArray36);
        List list42 = AppendPairProgram.listgen(intArray36);
        List list43 = AppendPairProgram.listgen(intArray36);
        appendPairProgram0.TestStudentSubmission(list43, 100);
        int[] intArray46 = new int[] {};
        List list47 = AppendPairProgram.listgen(intArray46);
        List list48 = AppendPairProgram.listgen(intArray46);
        List list49 = AppendPairProgram.listgen(intArray46);
        List list50 = AppendPairProgram.listgen(intArray46);
        List list51 = AppendPairProgram.listgen(intArray46);
        appendPairProgram0.TestStudentSubmission(list51, 100);
        int[] intArray54 = new int[] {};
        List list55 = AppendPairProgram.listgen(intArray54);
        List list56 = AppendPairProgram.listgen(intArray54);
        List list57 = AppendPairProgram.listgen(intArray54);
        appendPairProgram0.TestStudentSubmission(list57, 100);
        int[] intArray61 = new int[] { (byte) 10 };
        List list62 = AppendPairProgram.listgen(intArray61);
        List list63 = AppendPairProgram.listgen(intArray61);
        List list64 = AppendPairProgram.listgen(intArray61);
        List list65 = AppendPairProgram.listgen(intArray61);
        List list66 = AppendPairProgram.listgen(intArray61);
        List list67 = AppendPairProgram.listgen(intArray61);
        List list68 = AppendPairProgram.listgen(intArray61);
        List list69 = AppendPairProgram.listgen(intArray61);
        List list70 = AppendPairProgram.listgen(intArray61);
        List list71 = AppendPairProgram.listgen(intArray61);
        List list72 = AppendPairProgram.listgen(intArray61);
        List list73 = AppendPairProgram.listgen(intArray61);
        List list74 = AppendPairProgram.listgen(intArray61);
        List list75 = AppendPairProgram.listgen(intArray61);
        appendPairProgram0.TestStudentSubmission(list75, (int) (byte) 100);
        java.lang.Class<?> wildcardClass78 = list75.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[10]");
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[]");
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[10]");
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(list63);
        org.junit.Assert.assertNotNull(list64);
        org.junit.Assert.assertNotNull(list65);
        org.junit.Assert.assertNotNull(list66);
        org.junit.Assert.assertNotNull(list67);
        org.junit.Assert.assertNotNull(list68);
        org.junit.Assert.assertNotNull(list69);
        org.junit.Assert.assertNotNull(list70);
        org.junit.Assert.assertNotNull(list71);
        org.junit.Assert.assertNotNull(list72);
        org.junit.Assert.assertNotNull(list73);
        org.junit.Assert.assertNotNull(list74);
        org.junit.Assert.assertNotNull(list75);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0893");
        int[] intArray6 = new int[] { (short) 0, (byte) 0, (byte) 1, 0, (-1), (byte) 100 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        List list25 = AppendPairProgram.listgen(intArray6);
        List list26 = AppendPairProgram.listgen(intArray6);
        List list27 = AppendPairProgram.listgen(intArray6);
        List list28 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass29 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0, 1, 0, -1, 100]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0894");
        int[] intArray6 = new int[] { 0, (short) 10, (short) -1, '#', (byte) 100, 1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass24 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 10, -1, 35, 100, 1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0895");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list11, 0);
        int[] intArray15 = new int[] { (byte) 10 };
        List list16 = AppendPairProgram.listgen(intArray15);
        List list17 = AppendPairProgram.listgen(intArray15);
        List list18 = AppendPairProgram.listgen(intArray15);
        List list19 = AppendPairProgram.listgen(intArray15);
        List list20 = AppendPairProgram.listgen(intArray15);
        List list21 = AppendPairProgram.listgen(intArray15);
        List list22 = AppendPairProgram.listgen(intArray15);
        List list23 = AppendPairProgram.listgen(intArray15);
        List list24 = AppendPairProgram.listgen(intArray15);
        List list25 = AppendPairProgram.listgen(intArray15);
        List list26 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list26, (int) (byte) 100);
        int[] intArray30 = new int[] { 0 };
        List list31 = AppendPairProgram.listgen(intArray30);
        List list32 = AppendPairProgram.listgen(intArray30);
        List list33 = AppendPairProgram.listgen(intArray30);
        appendPairProgram0.TestStudentSubmission(list33, (int) (short) 10);
        List list36 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list36, (int) 'a');
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0]");
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
    }

    @Test
    public void test0896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0896");
        int[] intArray4 = new int[] { (byte) 100, 'a', (byte) 0, 'a' };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        List list7 = AppendPairProgram.listgen(intArray4);
        List list8 = AppendPairProgram.listgen(intArray4);
        List list9 = AppendPairProgram.listgen(intArray4);
        List list10 = AppendPairProgram.listgen(intArray4);
        java.lang.Class<?> wildcardClass11 = list10.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, 97, 0, 97]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0897");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 10);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        List list14 = AppendPairProgram.listgen(intArray11);
        List list15 = AppendPairProgram.listgen(intArray11);
        List list16 = AppendPairProgram.listgen(intArray11);
        List list17 = AppendPairProgram.listgen(intArray11);
        List list18 = AppendPairProgram.listgen(intArray11);
        List list19 = AppendPairProgram.listgen(intArray11);
        List list20 = AppendPairProgram.listgen(intArray11);
        List list21 = AppendPairProgram.listgen(intArray11);
        List list22 = AppendPairProgram.listgen(intArray11);
        List list23 = AppendPairProgram.listgen(intArray11);
        List list24 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list24, (int) (byte) 0);
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        List list30 = AppendPairProgram.listgen(intArray28);
        List list31 = AppendPairProgram.listgen(intArray28);
        List list32 = AppendPairProgram.listgen(intArray28);
        List list33 = AppendPairProgram.listgen(intArray28);
        List list34 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list34, 1);
        int[] intArray38 = new int[] { (byte) 10 };
        List list39 = AppendPairProgram.listgen(intArray38);
        List list40 = AppendPairProgram.listgen(intArray38);
        List list41 = AppendPairProgram.listgen(intArray38);
        List list42 = AppendPairProgram.listgen(intArray38);
        List list43 = AppendPairProgram.listgen(intArray38);
        List list44 = AppendPairProgram.listgen(intArray38);
        List list45 = AppendPairProgram.listgen(intArray38);
        List list46 = AppendPairProgram.listgen(intArray38);
        List list47 = AppendPairProgram.listgen(intArray38);
        appendPairProgram0.TestStudentSubmission(list47, (int) (byte) 100);
        int[] intArray51 = new int[] { (byte) 10 };
        List list52 = AppendPairProgram.listgen(intArray51);
        appendPairProgram0.TestStudentSubmission(list52, (int) (byte) -1);
        java.lang.Class<?> wildcardClass55 = list52.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[10]");
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[10]");
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0898");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray16 = new int[] { (byte) 10 };
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list18, (int) (byte) -1);
        int[] intArray21 = new int[] {};
        List list22 = AppendPairProgram.listgen(intArray21);
        List list23 = AppendPairProgram.listgen(intArray21);
        List list24 = AppendPairProgram.listgen(intArray21);
        List list25 = AppendPairProgram.listgen(intArray21);
        List list26 = AppendPairProgram.listgen(intArray21);
        List list27 = AppendPairProgram.listgen(intArray21);
        List list28 = AppendPairProgram.listgen(intArray21);
        List list29 = AppendPairProgram.listgen(intArray21);
        List list30 = AppendPairProgram.listgen(intArray21);
        List list31 = AppendPairProgram.listgen(intArray21);
        List list32 = AppendPairProgram.listgen(intArray21);
        List list33 = AppendPairProgram.listgen(intArray21);
        List list34 = AppendPairProgram.listgen(intArray21);
        List list35 = AppendPairProgram.listgen(intArray21);
        List list36 = AppendPairProgram.listgen(intArray21);
        appendPairProgram0.TestStudentSubmission(list36, (int) (short) 1);
        int[] intArray39 = new int[] {};
        List list40 = AppendPairProgram.listgen(intArray39);
        List list41 = AppendPairProgram.listgen(intArray39);
        List list42 = AppendPairProgram.listgen(intArray39);
        List list43 = AppendPairProgram.listgen(intArray39);
        appendPairProgram0.TestStudentSubmission(list43, (int) (short) 100);
        int[] intArray46 = new int[] {};
        List list47 = AppendPairProgram.listgen(intArray46);
        List list48 = AppendPairProgram.listgen(intArray46);
        List list49 = AppendPairProgram.listgen(intArray46);
        List list50 = AppendPairProgram.listgen(intArray46);
        List list51 = AppendPairProgram.listgen(intArray46);
        List list52 = AppendPairProgram.listgen(intArray46);
        List list53 = AppendPairProgram.listgen(intArray46);
        List list54 = AppendPairProgram.listgen(intArray46);
        List list55 = AppendPairProgram.listgen(intArray46);
        List list56 = AppendPairProgram.listgen(intArray46);
        List list57 = AppendPairProgram.listgen(intArray46);
        List list58 = AppendPairProgram.listgen(intArray46);
        List list59 = AppendPairProgram.listgen(intArray46);
        List list60 = AppendPairProgram.listgen(intArray46);
        List list61 = AppendPairProgram.listgen(intArray46);
        List list62 = AppendPairProgram.listgen(intArray46);
        appendPairProgram0.TestStudentSubmission(list62, (int) (byte) 10);
        java.lang.Class<?> wildcardClass65 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]");
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(list61);
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0899");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        List list14 = AppendPairProgram.listgen(intArray7);
        List list15 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list15, (int) (byte) 0);
        int[] intArray19 = new int[] { 0 };
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list23, 1);
        java.lang.Class<?> wildcardClass26 = list23.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0900");
        int[] intArray6 = new int[] { 0, (short) 10, (short) -1, '#', (byte) 100, 1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass25 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 10, -1, 35, 100, 1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0901");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray16 = new int[] { (byte) 10 };
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list22, (int) (byte) 0);
        java.lang.Class<?> wildcardClass25 = list22.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0902");
        int[] intArray4 = new int[] { '4', (byte) 100, (short) 10, '4' };
        List list5 = AppendPairProgram.listgen(intArray4);
        java.lang.Class<?> wildcardClass6 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[52, 100, 10, 52]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0903");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, (int) (byte) 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list10, (-1));
        int[] intArray13 = new int[] {};
        List list14 = AppendPairProgram.listgen(intArray13);
        List list15 = AppendPairProgram.listgen(intArray13);
        List list16 = AppendPairProgram.listgen(intArray13);
        List list17 = AppendPairProgram.listgen(intArray13);
        List list18 = AppendPairProgram.listgen(intArray13);
        List list19 = AppendPairProgram.listgen(intArray13);
        List list20 = AppendPairProgram.listgen(intArray13);
        appendPairProgram0.TestStudentSubmission(list20, (-1));
        int[] intArray24 = new int[] { 0 };
        List list25 = AppendPairProgram.listgen(intArray24);
        List list26 = AppendPairProgram.listgen(intArray24);
        List list27 = AppendPairProgram.listgen(intArray24);
        List list28 = AppendPairProgram.listgen(intArray24);
        List list29 = AppendPairProgram.listgen(intArray24);
        List list30 = AppendPairProgram.listgen(intArray24);
        appendPairProgram0.TestStudentSubmission(list30, (int) (byte) 0);
        java.lang.Class<?> wildcardClass33 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0]");
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0904");
        int[] intArray6 = new int[] { 0, (short) 10, (short) -1, '#', (byte) 100, 1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        List list25 = AppendPairProgram.listgen(intArray6);
        List list26 = AppendPairProgram.listgen(intArray6);
        List list27 = AppendPairProgram.listgen(intArray6);
        List list28 = AppendPairProgram.listgen(intArray6);
        List list29 = AppendPairProgram.listgen(intArray6);
        List list30 = AppendPairProgram.listgen(intArray6);
        List list31 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass32 = list31.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 10, -1, 35, 100, 1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0905");
        int[] intArray2 = new int[] { 10, (byte) 0 };
        List list3 = AppendPairProgram.listgen(intArray2);
        List list4 = AppendPairProgram.listgen(intArray2);
        List list5 = AppendPairProgram.listgen(intArray2);
        List list6 = AppendPairProgram.listgen(intArray2);
        List list7 = AppendPairProgram.listgen(intArray2);
        List list8 = AppendPairProgram.listgen(intArray2);
        List list9 = AppendPairProgram.listgen(intArray2);
        List list10 = AppendPairProgram.listgen(intArray2);
        List list11 = AppendPairProgram.listgen(intArray2);
        List list12 = AppendPairProgram.listgen(intArray2);
        List list13 = AppendPairProgram.listgen(intArray2);
        List list14 = AppendPairProgram.listgen(intArray2);
        List list15 = AppendPairProgram.listgen(intArray2);
        List list16 = AppendPairProgram.listgen(intArray2);
        java.lang.Class<?> wildcardClass17 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[10, 0]");
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0906");
        int[] intArray1 = new int[] { 0 };
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        List list7 = AppendPairProgram.listgen(intArray1);
        List list8 = AppendPairProgram.listgen(intArray1);
        List list9 = AppendPairProgram.listgen(intArray1);
        java.lang.Class<?> wildcardClass10 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[0]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0907");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list24, (int) (short) 0);
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list29, 100);
        int[] intArray32 = new int[] {};
        List list33 = AppendPairProgram.listgen(intArray32);
        List list34 = AppendPairProgram.listgen(intArray32);
        List list35 = AppendPairProgram.listgen(intArray32);
        List list36 = AppendPairProgram.listgen(intArray32);
        List list37 = AppendPairProgram.listgen(intArray32);
        List list38 = AppendPairProgram.listgen(intArray32);
        List list39 = AppendPairProgram.listgen(intArray32);
        List list40 = AppendPairProgram.listgen(intArray32);
        appendPairProgram0.TestStudentSubmission(list40, (int) (byte) 100);
        int[] intArray43 = new int[] {};
        List list44 = AppendPairProgram.listgen(intArray43);
        List list45 = AppendPairProgram.listgen(intArray43);
        List list46 = AppendPairProgram.listgen(intArray43);
        List list47 = AppendPairProgram.listgen(intArray43);
        List list48 = AppendPairProgram.listgen(intArray43);
        List list49 = AppendPairProgram.listgen(intArray43);
        List list50 = AppendPairProgram.listgen(intArray43);
        List list51 = AppendPairProgram.listgen(intArray43);
        List list52 = AppendPairProgram.listgen(intArray43);
        List list53 = AppendPairProgram.listgen(intArray43);
        List list54 = AppendPairProgram.listgen(intArray43);
        List list55 = AppendPairProgram.listgen(intArray43);
        List list56 = AppendPairProgram.listgen(intArray43);
        List list57 = AppendPairProgram.listgen(intArray43);
        List list58 = AppendPairProgram.listgen(intArray43);
        List list59 = AppendPairProgram.listgen(intArray43);
        appendPairProgram0.TestStudentSubmission(list59, 0);
        List list62 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list62, (int) '#');
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[]");
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
    }

    @Test
    public void test0908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0908");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        List list12 = AppendPairProgram.listgen(intArray9);
        List list13 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        List list27 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list27, 100);
        int[] intArray31 = new int[] { (byte) 10 };
        List list32 = AppendPairProgram.listgen(intArray31);
        List list33 = AppendPairProgram.listgen(intArray31);
        List list34 = AppendPairProgram.listgen(intArray31);
        List list35 = AppendPairProgram.listgen(intArray31);
        List list36 = AppendPairProgram.listgen(intArray31);
        appendPairProgram0.TestStudentSubmission(list36, (int) (byte) 100);
        List list39 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list39, (int) ' ');
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10]");
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
    }

    @Test
    public void test0909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0909");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, (int) (byte) 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list8, (int) (byte) 100);
        int[] intArray12 = new int[] { (byte) 10 };
        List list13 = AppendPairProgram.listgen(intArray12);
        List list14 = AppendPairProgram.listgen(intArray12);
        List list15 = AppendPairProgram.listgen(intArray12);
        List list16 = AppendPairProgram.listgen(intArray12);
        List list17 = AppendPairProgram.listgen(intArray12);
        List list18 = AppendPairProgram.listgen(intArray12);
        List list19 = AppendPairProgram.listgen(intArray12);
        List list20 = AppendPairProgram.listgen(intArray12);
        List list21 = AppendPairProgram.listgen(intArray12);
        List list22 = AppendPairProgram.listgen(intArray12);
        List list23 = AppendPairProgram.listgen(intArray12);
        List list24 = AppendPairProgram.listgen(intArray12);
        List list25 = AppendPairProgram.listgen(intArray12);
        List list26 = AppendPairProgram.listgen(intArray12);
        List list27 = AppendPairProgram.listgen(intArray12);
        List list28 = AppendPairProgram.listgen(intArray12);
        appendPairProgram0.TestStudentSubmission(list28, (-1));
        java.lang.Class<?> wildcardClass31 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10]");
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0910");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, 1);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list22, (int) (short) 1);
        int[] intArray25 = new int[] {};
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        List list31 = AppendPairProgram.listgen(intArray25);
        List list32 = AppendPairProgram.listgen(intArray25);
        List list33 = AppendPairProgram.listgen(intArray25);
        List list34 = AppendPairProgram.listgen(intArray25);
        List list35 = AppendPairProgram.listgen(intArray25);
        List list36 = AppendPairProgram.listgen(intArray25);
        List list37 = AppendPairProgram.listgen(intArray25);
        List list38 = AppendPairProgram.listgen(intArray25);
        List list39 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list39, (int) '#');
        int[] intArray42 = new int[] {};
        List list43 = AppendPairProgram.listgen(intArray42);
        List list44 = AppendPairProgram.listgen(intArray42);
        List list45 = AppendPairProgram.listgen(intArray42);
        appendPairProgram0.TestStudentSubmission(list45, 10);
        int[] intArray48 = new int[] {};
        List list49 = AppendPairProgram.listgen(intArray48);
        List list50 = AppendPairProgram.listgen(intArray48);
        List list51 = AppendPairProgram.listgen(intArray48);
        List list52 = AppendPairProgram.listgen(intArray48);
        List list53 = AppendPairProgram.listgen(intArray48);
        List list54 = AppendPairProgram.listgen(intArray48);
        appendPairProgram0.TestStudentSubmission(list54, (int) (short) 1);
        int[] intArray58 = new int[] { (byte) 10 };
        List list59 = AppendPairProgram.listgen(intArray58);
        List list60 = AppendPairProgram.listgen(intArray58);
        List list61 = AppendPairProgram.listgen(intArray58);
        List list62 = AppendPairProgram.listgen(intArray58);
        appendPairProgram0.TestStudentSubmission(list62, 1);
        java.lang.Class<?> wildcardClass65 = list62.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]");
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[]");
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[10]");
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(list61);
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0911");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 10);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        List list14 = AppendPairProgram.listgen(intArray11);
        List list15 = AppendPairProgram.listgen(intArray11);
        List list16 = AppendPairProgram.listgen(intArray11);
        List list17 = AppendPairProgram.listgen(intArray11);
        List list18 = AppendPairProgram.listgen(intArray11);
        List list19 = AppendPairProgram.listgen(intArray11);
        List list20 = AppendPairProgram.listgen(intArray11);
        List list21 = AppendPairProgram.listgen(intArray11);
        List list22 = AppendPairProgram.listgen(intArray11);
        List list23 = AppendPairProgram.listgen(intArray11);
        List list24 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list24, (int) (byte) 0);
        int[] intArray27 = new int[] {};
        List list28 = AppendPairProgram.listgen(intArray27);
        appendPairProgram0.TestStudentSubmission(list28, 0);
        int[] intArray31 = new int[] {};
        List list32 = AppendPairProgram.listgen(intArray31);
        List list33 = AppendPairProgram.listgen(intArray31);
        List list34 = AppendPairProgram.listgen(intArray31);
        List list35 = AppendPairProgram.listgen(intArray31);
        List list36 = AppendPairProgram.listgen(intArray31);
        List list37 = AppendPairProgram.listgen(intArray31);
        List list38 = AppendPairProgram.listgen(intArray31);
        List list39 = AppendPairProgram.listgen(intArray31);
        List list40 = AppendPairProgram.listgen(intArray31);
        List list41 = AppendPairProgram.listgen(intArray31);
        List list42 = AppendPairProgram.listgen(intArray31);
        List list43 = AppendPairProgram.listgen(intArray31);
        appendPairProgram0.TestStudentSubmission(list43, (-1));
        int[] intArray46 = new int[] {};
        List list47 = AppendPairProgram.listgen(intArray46);
        List list48 = AppendPairProgram.listgen(intArray46);
        List list49 = AppendPairProgram.listgen(intArray46);
        List list50 = AppendPairProgram.listgen(intArray46);
        List list51 = AppendPairProgram.listgen(intArray46);
        appendPairProgram0.TestStudentSubmission(list51, (int) (byte) -1);
        java.lang.Class<?> wildcardClass54 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[]");
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]");
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0912");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, (int) (byte) 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list8, (int) (byte) 100);
        int[] intArray12 = new int[] { (byte) 10 };
        List list13 = AppendPairProgram.listgen(intArray12);
        List list14 = AppendPairProgram.listgen(intArray12);
        List list15 = AppendPairProgram.listgen(intArray12);
        List list16 = AppendPairProgram.listgen(intArray12);
        List list17 = AppendPairProgram.listgen(intArray12);
        List list18 = AppendPairProgram.listgen(intArray12);
        List list19 = AppendPairProgram.listgen(intArray12);
        List list20 = AppendPairProgram.listgen(intArray12);
        List list21 = AppendPairProgram.listgen(intArray12);
        List list22 = AppendPairProgram.listgen(intArray12);
        List list23 = AppendPairProgram.listgen(intArray12);
        List list24 = AppendPairProgram.listgen(intArray12);
        List list25 = AppendPairProgram.listgen(intArray12);
        List list26 = AppendPairProgram.listgen(intArray12);
        List list27 = AppendPairProgram.listgen(intArray12);
        List list28 = AppendPairProgram.listgen(intArray12);
        appendPairProgram0.TestStudentSubmission(list28, (-1));
        java.lang.Class<?> wildcardClass31 = list28.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10]");
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0913");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray16 = new int[] { (byte) 10 };
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list18, (int) (byte) -1);
        int[] intArray21 = new int[] {};
        List list22 = AppendPairProgram.listgen(intArray21);
        List list23 = AppendPairProgram.listgen(intArray21);
        List list24 = AppendPairProgram.listgen(intArray21);
        List list25 = AppendPairProgram.listgen(intArray21);
        List list26 = AppendPairProgram.listgen(intArray21);
        List list27 = AppendPairProgram.listgen(intArray21);
        List list28 = AppendPairProgram.listgen(intArray21);
        List list29 = AppendPairProgram.listgen(intArray21);
        List list30 = AppendPairProgram.listgen(intArray21);
        List list31 = AppendPairProgram.listgen(intArray21);
        List list32 = AppendPairProgram.listgen(intArray21);
        List list33 = AppendPairProgram.listgen(intArray21);
        List list34 = AppendPairProgram.listgen(intArray21);
        List list35 = AppendPairProgram.listgen(intArray21);
        List list36 = AppendPairProgram.listgen(intArray21);
        List list37 = AppendPairProgram.listgen(intArray21);
        appendPairProgram0.TestStudentSubmission(list37, (int) 'a');
        List list40 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list40, (int) ' ');
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
    }

    @Test
    public void test0914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0914");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) -1);
        int[] intArray14 = new int[] {};
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 10);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list23, (int) (byte) 0);
        int[] intArray26 = new int[] {};
        List list27 = AppendPairProgram.listgen(intArray26);
        List list28 = AppendPairProgram.listgen(intArray26);
        List list29 = AppendPairProgram.listgen(intArray26);
        List list30 = AppendPairProgram.listgen(intArray26);
        List list31 = AppendPairProgram.listgen(intArray26);
        List list32 = AppendPairProgram.listgen(intArray26);
        appendPairProgram0.TestStudentSubmission(list32, 100);
        int[] intArray36 = new int[] { (byte) 10 };
        List list37 = AppendPairProgram.listgen(intArray36);
        List list38 = AppendPairProgram.listgen(intArray36);
        List list39 = AppendPairProgram.listgen(intArray36);
        List list40 = AppendPairProgram.listgen(intArray36);
        List list41 = AppendPairProgram.listgen(intArray36);
        List list42 = AppendPairProgram.listgen(intArray36);
        List list43 = AppendPairProgram.listgen(intArray36);
        appendPairProgram0.TestStudentSubmission(list43, 100);
        int[] intArray46 = new int[] {};
        List list47 = AppendPairProgram.listgen(intArray46);
        List list48 = AppendPairProgram.listgen(intArray46);
        List list49 = AppendPairProgram.listgen(intArray46);
        List list50 = AppendPairProgram.listgen(intArray46);
        List list51 = AppendPairProgram.listgen(intArray46);
        appendPairProgram0.TestStudentSubmission(list51, 100);
        int[] intArray54 = new int[] {};
        List list55 = AppendPairProgram.listgen(intArray54);
        List list56 = AppendPairProgram.listgen(intArray54);
        List list57 = AppendPairProgram.listgen(intArray54);
        appendPairProgram0.TestStudentSubmission(list57, 100);
        int[] intArray61 = new int[] { (byte) 10 };
        List list62 = AppendPairProgram.listgen(intArray61);
        List list63 = AppendPairProgram.listgen(intArray61);
        List list64 = AppendPairProgram.listgen(intArray61);
        List list65 = AppendPairProgram.listgen(intArray61);
        List list66 = AppendPairProgram.listgen(intArray61);
        List list67 = AppendPairProgram.listgen(intArray61);
        List list68 = AppendPairProgram.listgen(intArray61);
        List list69 = AppendPairProgram.listgen(intArray61);
        List list70 = AppendPairProgram.listgen(intArray61);
        List list71 = AppendPairProgram.listgen(intArray61);
        List list72 = AppendPairProgram.listgen(intArray61);
        List list73 = AppendPairProgram.listgen(intArray61);
        List list74 = AppendPairProgram.listgen(intArray61);
        List list75 = AppendPairProgram.listgen(intArray61);
        appendPairProgram0.TestStudentSubmission(list75, (int) (byte) 100);
        int[] intArray78 = new int[] {};
        List list79 = AppendPairProgram.listgen(intArray78);
        List list80 = AppendPairProgram.listgen(intArray78);
        List list81 = AppendPairProgram.listgen(intArray78);
        List list82 = AppendPairProgram.listgen(intArray78);
        List list83 = AppendPairProgram.listgen(intArray78);
        appendPairProgram0.TestStudentSubmission(list83, (int) (byte) 1);
        int[] intArray87 = new int[] { 0 };
        List list88 = AppendPairProgram.listgen(intArray87);
        List list89 = AppendPairProgram.listgen(intArray87);
        List list90 = AppendPairProgram.listgen(intArray87);
        List list91 = AppendPairProgram.listgen(intArray87);
        appendPairProgram0.TestStudentSubmission(list91, (int) (byte) 10);
        java.lang.Class<?> wildcardClass94 = list91.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[10]");
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[]");
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[10]");
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(list63);
        org.junit.Assert.assertNotNull(list64);
        org.junit.Assert.assertNotNull(list65);
        org.junit.Assert.assertNotNull(list66);
        org.junit.Assert.assertNotNull(list67);
        org.junit.Assert.assertNotNull(list68);
        org.junit.Assert.assertNotNull(list69);
        org.junit.Assert.assertNotNull(list70);
        org.junit.Assert.assertNotNull(list71);
        org.junit.Assert.assertNotNull(list72);
        org.junit.Assert.assertNotNull(list73);
        org.junit.Assert.assertNotNull(list74);
        org.junit.Assert.assertNotNull(list75);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[]");
        org.junit.Assert.assertNotNull(list79);
        org.junit.Assert.assertNotNull(list80);
        org.junit.Assert.assertNotNull(list81);
        org.junit.Assert.assertNotNull(list82);
        org.junit.Assert.assertNotNull(list83);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0]");
        org.junit.Assert.assertNotNull(list88);
        org.junit.Assert.assertNotNull(list89);
        org.junit.Assert.assertNotNull(list90);
        org.junit.Assert.assertNotNull(list91);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0915");
        int[] intArray6 = new int[] { (short) 0, (byte) 0, (byte) 1, 0, (-1), (byte) 100 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        List list25 = AppendPairProgram.listgen(intArray6);
        List list26 = AppendPairProgram.listgen(intArray6);
        List list27 = AppendPairProgram.listgen(intArray6);
        List list28 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass29 = list28.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0, 1, 0, -1, 100]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0916");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray16 = new int[] { (byte) 10 };
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list22, (int) (byte) 0);
        int[] intArray26 = new int[] { (byte) 10 };
        List list27 = AppendPairProgram.listgen(intArray26);
        List list28 = AppendPairProgram.listgen(intArray26);
        List list29 = AppendPairProgram.listgen(intArray26);
        List list30 = AppendPairProgram.listgen(intArray26);
        List list31 = AppendPairProgram.listgen(intArray26);
        List list32 = AppendPairProgram.listgen(intArray26);
        appendPairProgram0.TestStudentSubmission(list32, 100);
        java.lang.Class<?> wildcardClass35 = list32.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10]");
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0917");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, 1);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list22, (int) (short) 1);
        int[] intArray25 = new int[] {};
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        List list31 = AppendPairProgram.listgen(intArray25);
        List list32 = AppendPairProgram.listgen(intArray25);
        List list33 = AppendPairProgram.listgen(intArray25);
        List list34 = AppendPairProgram.listgen(intArray25);
        List list35 = AppendPairProgram.listgen(intArray25);
        List list36 = AppendPairProgram.listgen(intArray25);
        List list37 = AppendPairProgram.listgen(intArray25);
        List list38 = AppendPairProgram.listgen(intArray25);
        List list39 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list39, (int) '#');
        int[] intArray42 = new int[] {};
        List list43 = AppendPairProgram.listgen(intArray42);
        List list44 = AppendPairProgram.listgen(intArray42);
        List list45 = AppendPairProgram.listgen(intArray42);
        appendPairProgram0.TestStudentSubmission(list45, 10);
        int[] intArray49 = new int[] { (byte) 10 };
        List list50 = AppendPairProgram.listgen(intArray49);
        List list51 = AppendPairProgram.listgen(intArray49);
        List list52 = AppendPairProgram.listgen(intArray49);
        List list53 = AppendPairProgram.listgen(intArray49);
        List list54 = AppendPairProgram.listgen(intArray49);
        List list55 = AppendPairProgram.listgen(intArray49);
        appendPairProgram0.TestStudentSubmission(list55, 1);
        java.lang.Class<?> wildcardClass58 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]");
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[10]");
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0918");
        int[] intArray3 = new int[] { 0, '#', (short) -1 };
        List list4 = AppendPairProgram.listgen(intArray3);
        List list5 = AppendPairProgram.listgen(intArray3);
        List list6 = AppendPairProgram.listgen(intArray3);
        List list7 = AppendPairProgram.listgen(intArray3);
        List list8 = AppendPairProgram.listgen(intArray3);
        List list9 = AppendPairProgram.listgen(intArray3);
        List list10 = AppendPairProgram.listgen(intArray3);
        List list11 = AppendPairProgram.listgen(intArray3);
        List list12 = AppendPairProgram.listgen(intArray3);
        List list13 = AppendPairProgram.listgen(intArray3);
        List list14 = AppendPairProgram.listgen(intArray3);
        List list15 = AppendPairProgram.listgen(intArray3);
        List list16 = AppendPairProgram.listgen(intArray3);
        List list17 = AppendPairProgram.listgen(intArray3);
        List list18 = AppendPairProgram.listgen(intArray3);
        List list19 = AppendPairProgram.listgen(intArray3);
        List list20 = AppendPairProgram.listgen(intArray3);
        List list21 = AppendPairProgram.listgen(intArray3);
        List list22 = AppendPairProgram.listgen(intArray3);
        List list23 = AppendPairProgram.listgen(intArray3);
        java.lang.Class<?> wildcardClass24 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[0, 35, -1]");
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0919");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) -1);
        int[] intArray14 = new int[] {};
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 10);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list22, (int) '#');
        int[] intArray26 = new int[] { 0 };
        List list27 = AppendPairProgram.listgen(intArray26);
        List list28 = AppendPairProgram.listgen(intArray26);
        List list29 = AppendPairProgram.listgen(intArray26);
        appendPairProgram0.TestStudentSubmission(list29, (int) (short) -1);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0]");
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
    }

    @Test
    public void test0920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0920");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) -1);
        int[] intArray14 = new int[] {};
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 10);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list23, (int) (byte) 0);
        int[] intArray26 = new int[] {};
        List list27 = AppendPairProgram.listgen(intArray26);
        List list28 = AppendPairProgram.listgen(intArray26);
        List list29 = AppendPairProgram.listgen(intArray26);
        List list30 = AppendPairProgram.listgen(intArray26);
        List list31 = AppendPairProgram.listgen(intArray26);
        List list32 = AppendPairProgram.listgen(intArray26);
        appendPairProgram0.TestStudentSubmission(list32, 100);
        int[] intArray36 = new int[] { (byte) 10 };
        List list37 = AppendPairProgram.listgen(intArray36);
        List list38 = AppendPairProgram.listgen(intArray36);
        List list39 = AppendPairProgram.listgen(intArray36);
        List list40 = AppendPairProgram.listgen(intArray36);
        List list41 = AppendPairProgram.listgen(intArray36);
        List list42 = AppendPairProgram.listgen(intArray36);
        List list43 = AppendPairProgram.listgen(intArray36);
        appendPairProgram0.TestStudentSubmission(list43, 100);
        int[] intArray46 = new int[] {};
        List list47 = AppendPairProgram.listgen(intArray46);
        List list48 = AppendPairProgram.listgen(intArray46);
        List list49 = AppendPairProgram.listgen(intArray46);
        List list50 = AppendPairProgram.listgen(intArray46);
        List list51 = AppendPairProgram.listgen(intArray46);
        appendPairProgram0.TestStudentSubmission(list51, 100);
        int[] intArray54 = new int[] {};
        List list55 = AppendPairProgram.listgen(intArray54);
        List list56 = AppendPairProgram.listgen(intArray54);
        List list57 = AppendPairProgram.listgen(intArray54);
        appendPairProgram0.TestStudentSubmission(list57, 100);
        java.lang.Class<?> wildcardClass60 = list57.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[10]");
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[]");
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0921");
        int[] intArray1 = new int[] { 0 };
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        List list7 = AppendPairProgram.listgen(intArray1);
        List list8 = AppendPairProgram.listgen(intArray1);
        List list9 = AppendPairProgram.listgen(intArray1);
        List list10 = AppendPairProgram.listgen(intArray1);
        List list11 = AppendPairProgram.listgen(intArray1);
        java.lang.Class<?> wildcardClass12 = list11.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[0]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0922");
        int[] intArray2 = new int[] { (byte) 100, (short) 10 };
        List list3 = AppendPairProgram.listgen(intArray2);
        List list4 = AppendPairProgram.listgen(intArray2);
        java.lang.Class<?> wildcardClass5 = list4.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[100, 10]");
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0923");
        int[] intArray4 = new int[] { '4', (byte) 100, (short) 10, '4' };
        List list5 = AppendPairProgram.listgen(intArray4);
        java.lang.Class<?> wildcardClass6 = list5.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[52, 100, 10, 52]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0924");
        int[] intArray2 = new int[] { (byte) 100, (short) 10 };
        List list3 = AppendPairProgram.listgen(intArray2);
        java.lang.Class<?> wildcardClass4 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[100, 10]");
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0925");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list11, 0);
        int[] intArray15 = new int[] { (byte) 10 };
        List list16 = AppendPairProgram.listgen(intArray15);
        List list17 = AppendPairProgram.listgen(intArray15);
        List list18 = AppendPairProgram.listgen(intArray15);
        List list19 = AppendPairProgram.listgen(intArray15);
        List list20 = AppendPairProgram.listgen(intArray15);
        List list21 = AppendPairProgram.listgen(intArray15);
        List list22 = AppendPairProgram.listgen(intArray15);
        List list23 = AppendPairProgram.listgen(intArray15);
        List list24 = AppendPairProgram.listgen(intArray15);
        List list25 = AppendPairProgram.listgen(intArray15);
        List list26 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list26, (int) (byte) 100);
        int[] intArray30 = new int[] { 0 };
        List list31 = AppendPairProgram.listgen(intArray30);
        List list32 = AppendPairProgram.listgen(intArray30);
        List list33 = AppendPairProgram.listgen(intArray30);
        appendPairProgram0.TestStudentSubmission(list33, (int) (short) 10);
        java.lang.Class<?> wildcardClass36 = list33.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0]");
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0926");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) -1);
        int[] intArray14 = new int[] {};
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 10);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list23, (int) (byte) 0);
        int[] intArray26 = new int[] {};
        List list27 = AppendPairProgram.listgen(intArray26);
        List list28 = AppendPairProgram.listgen(intArray26);
        List list29 = AppendPairProgram.listgen(intArray26);
        List list30 = AppendPairProgram.listgen(intArray26);
        List list31 = AppendPairProgram.listgen(intArray26);
        List list32 = AppendPairProgram.listgen(intArray26);
        appendPairProgram0.TestStudentSubmission(list32, 100);
        int[] intArray36 = new int[] { (byte) 10 };
        List list37 = AppendPairProgram.listgen(intArray36);
        List list38 = AppendPairProgram.listgen(intArray36);
        List list39 = AppendPairProgram.listgen(intArray36);
        List list40 = AppendPairProgram.listgen(intArray36);
        List list41 = AppendPairProgram.listgen(intArray36);
        List list42 = AppendPairProgram.listgen(intArray36);
        List list43 = AppendPairProgram.listgen(intArray36);
        appendPairProgram0.TestStudentSubmission(list43, 100);
        int[] intArray46 = new int[] {};
        List list47 = AppendPairProgram.listgen(intArray46);
        List list48 = AppendPairProgram.listgen(intArray46);
        List list49 = AppendPairProgram.listgen(intArray46);
        List list50 = AppendPairProgram.listgen(intArray46);
        List list51 = AppendPairProgram.listgen(intArray46);
        appendPairProgram0.TestStudentSubmission(list51, 100);
        int[] intArray55 = new int[] { (byte) 10 };
        List list56 = AppendPairProgram.listgen(intArray55);
        List list57 = AppendPairProgram.listgen(intArray55);
        List list58 = AppendPairProgram.listgen(intArray55);
        List list59 = AppendPairProgram.listgen(intArray55);
        List list60 = AppendPairProgram.listgen(intArray55);
        List list61 = AppendPairProgram.listgen(intArray55);
        List list62 = AppendPairProgram.listgen(intArray55);
        List list63 = AppendPairProgram.listgen(intArray55);
        List list64 = AppendPairProgram.listgen(intArray55);
        List list65 = AppendPairProgram.listgen(intArray55);
        List list66 = AppendPairProgram.listgen(intArray55);
        List list67 = AppendPairProgram.listgen(intArray55);
        appendPairProgram0.TestStudentSubmission(list67, (int) (byte) 10);
        java.lang.Class<?> wildcardClass70 = list67.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[10]");
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[10]");
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(list61);
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(list63);
        org.junit.Assert.assertNotNull(list64);
        org.junit.Assert.assertNotNull(list65);
        org.junit.Assert.assertNotNull(list66);
        org.junit.Assert.assertNotNull(list67);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0927");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray12 = new int[] { (byte) 10 };
        List list13 = AppendPairProgram.listgen(intArray12);
        List list14 = AppendPairProgram.listgen(intArray12);
        List list15 = AppendPairProgram.listgen(intArray12);
        appendPairProgram0.TestStudentSubmission(list15, 10);
        int[] intArray19 = new int[] { (byte) 10 };
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        List list24 = AppendPairProgram.listgen(intArray19);
        List list25 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list25, (int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = list25.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10]");
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0928");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, (int) (byte) 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list10, (-1));
        int[] intArray13 = new int[] {};
        List list14 = AppendPairProgram.listgen(intArray13);
        List list15 = AppendPairProgram.listgen(intArray13);
        List list16 = AppendPairProgram.listgen(intArray13);
        List list17 = AppendPairProgram.listgen(intArray13);
        List list18 = AppendPairProgram.listgen(intArray13);
        List list19 = AppendPairProgram.listgen(intArray13);
        List list20 = AppendPairProgram.listgen(intArray13);
        List list21 = AppendPairProgram.listgen(intArray13);
        List list22 = AppendPairProgram.listgen(intArray13);
        List list23 = AppendPairProgram.listgen(intArray13);
        List list24 = AppendPairProgram.listgen(intArray13);
        List list25 = AppendPairProgram.listgen(intArray13);
        List list26 = AppendPairProgram.listgen(intArray13);
        List list27 = AppendPairProgram.listgen(intArray13);
        List list28 = AppendPairProgram.listgen(intArray13);
        List list29 = AppendPairProgram.listgen(intArray13);
        appendPairProgram0.TestStudentSubmission(list29, 0);
        List list32 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list32, 0);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
    }

    @Test
    public void test0929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0929");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) -1);
        int[] intArray14 = new int[] {};
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 10);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        List list24 = AppendPairProgram.listgen(intArray19);
        List list25 = AppendPairProgram.listgen(intArray19);
        List list26 = AppendPairProgram.listgen(intArray19);
        List list27 = AppendPairProgram.listgen(intArray19);
        List list28 = AppendPairProgram.listgen(intArray19);
        List list29 = AppendPairProgram.listgen(intArray19);
        List list30 = AppendPairProgram.listgen(intArray19);
        List list31 = AppendPairProgram.listgen(intArray19);
        List list32 = AppendPairProgram.listgen(intArray19);
        List list33 = AppendPairProgram.listgen(intArray19);
        List list34 = AppendPairProgram.listgen(intArray19);
        List list35 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list35, 0);
        java.lang.Class<?> wildcardClass38 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0930");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, (int) '4');
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list26, (int) (byte) 1);
        int[] intArray30 = new int[] { 0 };
        List list31 = AppendPairProgram.listgen(intArray30);
        List list32 = AppendPairProgram.listgen(intArray30);
        appendPairProgram0.TestStudentSubmission(list32, (int) 'a');
        int[] intArray35 = new int[] {};
        List list36 = AppendPairProgram.listgen(intArray35);
        List list37 = AppendPairProgram.listgen(intArray35);
        List list38 = AppendPairProgram.listgen(intArray35);
        List list39 = AppendPairProgram.listgen(intArray35);
        List list40 = AppendPairProgram.listgen(intArray35);
        List list41 = AppendPairProgram.listgen(intArray35);
        List list42 = AppendPairProgram.listgen(intArray35);
        List list43 = AppendPairProgram.listgen(intArray35);
        List list44 = AppendPairProgram.listgen(intArray35);
        appendPairProgram0.TestStudentSubmission(list44, (int) '#');
        int[] intArray47 = new int[] {};
        List list48 = AppendPairProgram.listgen(intArray47);
        List list49 = AppendPairProgram.listgen(intArray47);
        List list50 = AppendPairProgram.listgen(intArray47);
        List list51 = AppendPairProgram.listgen(intArray47);
        List list52 = AppendPairProgram.listgen(intArray47);
        List list53 = AppendPairProgram.listgen(intArray47);
        List list54 = AppendPairProgram.listgen(intArray47);
        List list55 = AppendPairProgram.listgen(intArray47);
        List list56 = AppendPairProgram.listgen(intArray47);
        List list57 = AppendPairProgram.listgen(intArray47);
        List list58 = AppendPairProgram.listgen(intArray47);
        List list59 = AppendPairProgram.listgen(intArray47);
        List list60 = AppendPairProgram.listgen(intArray47);
        List list61 = AppendPairProgram.listgen(intArray47);
        List list62 = AppendPairProgram.listgen(intArray47);
        List list63 = AppendPairProgram.listgen(intArray47);
        appendPairProgram0.TestStudentSubmission(list63, (int) (byte) 1);
        java.lang.Class<?> wildcardClass66 = list63.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0]");
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[]");
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[]");
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(list61);
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(list63);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test0931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0931");
        int[] intArray1 = new int[] { 0 };
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        List list7 = AppendPairProgram.listgen(intArray1);
        List list8 = AppendPairProgram.listgen(intArray1);
        List list9 = AppendPairProgram.listgen(intArray1);
        List list10 = AppendPairProgram.listgen(intArray1);
        List list11 = AppendPairProgram.listgen(intArray1);
        java.lang.Class<?> wildcardClass12 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[0]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0932");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) -1);
        int[] intArray14 = new int[] {};
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 10);
        int[] intArray20 = new int[] { 0 };
        List list21 = AppendPairProgram.listgen(intArray20);
        List list22 = AppendPairProgram.listgen(intArray20);
        List list23 = AppendPairProgram.listgen(intArray20);
        List list24 = AppendPairProgram.listgen(intArray20);
        appendPairProgram0.TestStudentSubmission(list24, (int) (short) 10);
        int[] intArray28 = new int[] { 0 };
        List list29 = AppendPairProgram.listgen(intArray28);
        List list30 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list30, (int) '4');
        java.lang.Class<?> wildcardClass33 = list30.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0]");
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0933");
        int[] intArray6 = new int[] { (short) -1, '#', '4', (short) -1, (short) 100, (byte) -1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass17 = list16.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 35, 52, -1, 100, -1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0934");
        int[] intArray6 = new int[] { (short) 0, (byte) 0, (byte) 1, 0, (-1), (byte) 100 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass23 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0, 1, 0, -1, 100]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0935");
        int[] intArray6 = new int[] { (short) -1, '#', '4', (short) -1, (short) 100, (byte) -1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass18 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 35, 52, -1, 100, -1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0936");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray2 = new int[] { (byte) 10 };
        List list3 = AppendPairProgram.listgen(intArray2);
        List list4 = AppendPairProgram.listgen(intArray2);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 0);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        List list14 = AppendPairProgram.listgen(intArray7);
        List list15 = AppendPairProgram.listgen(intArray7);
        List list16 = AppendPairProgram.listgen(intArray7);
        List list17 = AppendPairProgram.listgen(intArray7);
        List list18 = AppendPairProgram.listgen(intArray7);
        List list19 = AppendPairProgram.listgen(intArray7);
        List list20 = AppendPairProgram.listgen(intArray7);
        List list21 = AppendPairProgram.listgen(intArray7);
        List list22 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list22, (int) '4');
        int[] intArray25 = new int[] {};
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        List list31 = AppendPairProgram.listgen(intArray25);
        List list32 = AppendPairProgram.listgen(intArray25);
        List list33 = AppendPairProgram.listgen(intArray25);
        List list34 = AppendPairProgram.listgen(intArray25);
        List list35 = AppendPairProgram.listgen(intArray25);
        List list36 = AppendPairProgram.listgen(intArray25);
        List list37 = AppendPairProgram.listgen(intArray25);
        List list38 = AppendPairProgram.listgen(intArray25);
        List list39 = AppendPairProgram.listgen(intArray25);
        List list40 = AppendPairProgram.listgen(intArray25);
        List list41 = AppendPairProgram.listgen(intArray25);
        List list42 = AppendPairProgram.listgen(intArray25);
        List list43 = AppendPairProgram.listgen(intArray25);
        List list44 = AppendPairProgram.listgen(intArray25);
        List list45 = AppendPairProgram.listgen(intArray25);
        List list46 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list46, (int) (short) 0);
        java.lang.Class<?> wildcardClass49 = list46.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[10]");
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0937");
        int[] intArray4 = new int[] { 'a', (byte) -1, 100, (byte) 10 };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        List list7 = AppendPairProgram.listgen(intArray4);
        List list8 = AppendPairProgram.listgen(intArray4);
        List list9 = AppendPairProgram.listgen(intArray4);
        List list10 = AppendPairProgram.listgen(intArray4);
        List list11 = AppendPairProgram.listgen(intArray4);
        List list12 = AppendPairProgram.listgen(intArray4);
        List list13 = AppendPairProgram.listgen(intArray4);
        List list14 = AppendPairProgram.listgen(intArray4);
        List list15 = AppendPairProgram.listgen(intArray4);
        List list16 = AppendPairProgram.listgen(intArray4);
        List list17 = AppendPairProgram.listgen(intArray4);
        List list18 = AppendPairProgram.listgen(intArray4);
        java.lang.Class<?> wildcardClass19 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[97, -1, 100, 10]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0938");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray10 = new int[] { (byte) 10 };
        List list11 = AppendPairProgram.listgen(intArray10);
        List list12 = AppendPairProgram.listgen(intArray10);
        List list13 = AppendPairProgram.listgen(intArray10);
        List list14 = AppendPairProgram.listgen(intArray10);
        List list15 = AppendPairProgram.listgen(intArray10);
        List list16 = AppendPairProgram.listgen(intArray10);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 1);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        List list24 = AppendPairProgram.listgen(intArray19);
        List list25 = AppendPairProgram.listgen(intArray19);
        List list26 = AppendPairProgram.listgen(intArray19);
        List list27 = AppendPairProgram.listgen(intArray19);
        List list28 = AppendPairProgram.listgen(intArray19);
        List list29 = AppendPairProgram.listgen(intArray19);
        List list30 = AppendPairProgram.listgen(intArray19);
        List list31 = AppendPairProgram.listgen(intArray19);
        List list32 = AppendPairProgram.listgen(intArray19);
        List list33 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list33, (int) (byte) 1);
        int[] intArray37 = new int[] { (byte) 10 };
        List list38 = AppendPairProgram.listgen(intArray37);
        List list39 = AppendPairProgram.listgen(intArray37);
        List list40 = AppendPairProgram.listgen(intArray37);
        List list41 = AppendPairProgram.listgen(intArray37);
        List list42 = AppendPairProgram.listgen(intArray37);
        List list43 = AppendPairProgram.listgen(intArray37);
        List list44 = AppendPairProgram.listgen(intArray37);
        List list45 = AppendPairProgram.listgen(intArray37);
        List list46 = AppendPairProgram.listgen(intArray37);
        List list47 = AppendPairProgram.listgen(intArray37);
        appendPairProgram0.TestStudentSubmission(list47, (int) (byte) 100);
        int[] intArray51 = new int[] { (byte) 10 };
        List list52 = AppendPairProgram.listgen(intArray51);
        List list53 = AppendPairProgram.listgen(intArray51);
        List list54 = AppendPairProgram.listgen(intArray51);
        List list55 = AppendPairProgram.listgen(intArray51);
        appendPairProgram0.TestStudentSubmission(list55, (int) (byte) 10);
        java.lang.Class<?> wildcardClass58 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10]");
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[10]");
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[10]");
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0939");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list9, (int) (short) 0);
        int[] intArray12 = new int[] {};
        List list13 = AppendPairProgram.listgen(intArray12);
        List list14 = AppendPairProgram.listgen(intArray12);
        List list15 = AppendPairProgram.listgen(intArray12);
        List list16 = AppendPairProgram.listgen(intArray12);
        List list17 = AppendPairProgram.listgen(intArray12);
        List list18 = AppendPairProgram.listgen(intArray12);
        List list19 = AppendPairProgram.listgen(intArray12);
        List list20 = AppendPairProgram.listgen(intArray12);
        List list21 = AppendPairProgram.listgen(intArray12);
        List list22 = AppendPairProgram.listgen(intArray12);
        List list23 = AppendPairProgram.listgen(intArray12);
        List list24 = AppendPairProgram.listgen(intArray12);
        appendPairProgram0.TestStudentSubmission(list24, (int) '#');
        java.lang.Class<?> wildcardClass27 = list24.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0940");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) -1);
        int[] intArray14 = new int[] {};
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 10);
        java.lang.Class<?> wildcardClass19 = list16.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0941");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        List list14 = AppendPairProgram.listgen(intArray7);
        List list15 = AppendPairProgram.listgen(intArray7);
        List list16 = AppendPairProgram.listgen(intArray7);
        List list17 = AppendPairProgram.listgen(intArray7);
        List list18 = AppendPairProgram.listgen(intArray7);
        List list19 = AppendPairProgram.listgen(intArray7);
        List list20 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list20, (int) '#');
        int[] intArray23 = new int[] {};
        List list24 = AppendPairProgram.listgen(intArray23);
        List list25 = AppendPairProgram.listgen(intArray23);
        List list26 = AppendPairProgram.listgen(intArray23);
        List list27 = AppendPairProgram.listgen(intArray23);
        List list28 = AppendPairProgram.listgen(intArray23);
        List list29 = AppendPairProgram.listgen(intArray23);
        appendPairProgram0.TestStudentSubmission(list29, (int) (short) -1);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[]");
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
    }

    @Test
    public void test0942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0942");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, (int) (short) -1);
        List list16 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list16, (-1));
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
    }

    @Test
    public void test0943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0943");
        int[] intArray1 = new int[] { (byte) 10 };
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        List list7 = AppendPairProgram.listgen(intArray1);
        List list8 = AppendPairProgram.listgen(intArray1);
        List list9 = AppendPairProgram.listgen(intArray1);
        List list10 = AppendPairProgram.listgen(intArray1);
        java.lang.Class<?> wildcardClass11 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[10]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0944");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) -1);
        int[] intArray14 = new int[] {};
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 10);
        int[] intArray20 = new int[] { 0 };
        List list21 = AppendPairProgram.listgen(intArray20);
        List list22 = AppendPairProgram.listgen(intArray20);
        List list23 = AppendPairProgram.listgen(intArray20);
        List list24 = AppendPairProgram.listgen(intArray20);
        appendPairProgram0.TestStudentSubmission(list24, (int) (short) 10);
        int[] intArray28 = new int[] { 0 };
        List list29 = AppendPairProgram.listgen(intArray28);
        List list30 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list30, (int) '4');
        List list33 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list33, (int) 'a');
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0]");
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
    }

    @Test
    public void test0945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0945");
        int[] intArray4 = new int[] { '4', (byte) 100, (short) 10, '4' };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        java.lang.Class<?> wildcardClass7 = list6.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[52, 100, 10, 52]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0946");
        int[] intArray3 = new int[] { 1, '#', (byte) 0 };
        List list4 = AppendPairProgram.listgen(intArray3);
        java.lang.Class<?> wildcardClass5 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 35, 0]");
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0947");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list24, (int) (short) 0);
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list29, 100);
        int[] intArray33 = new int[] { (byte) 10 };
        List list34 = AppendPairProgram.listgen(intArray33);
        appendPairProgram0.TestStudentSubmission(list34, (-1));
        int[] intArray37 = new int[] {};
        List list38 = AppendPairProgram.listgen(intArray37);
        List list39 = AppendPairProgram.listgen(intArray37);
        List list40 = AppendPairProgram.listgen(intArray37);
        List list41 = AppendPairProgram.listgen(intArray37);
        List list42 = AppendPairProgram.listgen(intArray37);
        List list43 = AppendPairProgram.listgen(intArray37);
        List list44 = AppendPairProgram.listgen(intArray37);
        List list45 = AppendPairProgram.listgen(intArray37);
        List list46 = AppendPairProgram.listgen(intArray37);
        List list47 = AppendPairProgram.listgen(intArray37);
        List list48 = AppendPairProgram.listgen(intArray37);
        List list49 = AppendPairProgram.listgen(intArray37);
        List list50 = AppendPairProgram.listgen(intArray37);
        List list51 = AppendPairProgram.listgen(intArray37);
        appendPairProgram0.TestStudentSubmission(list51, (int) (short) 100);
        int[] intArray55 = new int[] { (byte) 10 };
        List list56 = AppendPairProgram.listgen(intArray55);
        List list57 = AppendPairProgram.listgen(intArray55);
        List list58 = AppendPairProgram.listgen(intArray55);
        List list59 = AppendPairProgram.listgen(intArray55);
        appendPairProgram0.TestStudentSubmission(list59, (int) (byte) 0);
        java.lang.Class<?> wildcardClass62 = list59.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10]");
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[]");
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[10]");
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0948");
        int[] intArray6 = new int[] { 0, (short) 10, (short) -1, '#', (byte) 100, 1 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        List list25 = AppendPairProgram.listgen(intArray6);
        List list26 = AppendPairProgram.listgen(intArray6);
        List list27 = AppendPairProgram.listgen(intArray6);
        List list28 = AppendPairProgram.listgen(intArray6);
        List list29 = AppendPairProgram.listgen(intArray6);
        List list30 = AppendPairProgram.listgen(intArray6);
        List list31 = AppendPairProgram.listgen(intArray6);
        List list32 = AppendPairProgram.listgen(intArray6);
        List list33 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass34 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 10, -1, 35, 100, 1]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0949");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        List list14 = AppendPairProgram.listgen(intArray7);
        List list15 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list15, (int) (byte) 0);
        int[] intArray19 = new int[] { 0 };
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list23, 1);
        int[] intArray26 = new int[] {};
        List list27 = AppendPairProgram.listgen(intArray26);
        List list28 = AppendPairProgram.listgen(intArray26);
        appendPairProgram0.TestStudentSubmission(list28, (int) (short) 100);
        List list31 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list31, 1);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
    }

    @Test
    public void test0950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0950");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray15 = new int[] {};
        List list16 = AppendPairProgram.listgen(intArray15);
        List list17 = AppendPairProgram.listgen(intArray15);
        List list18 = AppendPairProgram.listgen(intArray15);
        List list19 = AppendPairProgram.listgen(intArray15);
        List list20 = AppendPairProgram.listgen(intArray15);
        List list21 = AppendPairProgram.listgen(intArray15);
        List list22 = AppendPairProgram.listgen(intArray15);
        List list23 = AppendPairProgram.listgen(intArray15);
        List list24 = AppendPairProgram.listgen(intArray15);
        List list25 = AppendPairProgram.listgen(intArray15);
        List list26 = AppendPairProgram.listgen(intArray15);
        List list27 = AppendPairProgram.listgen(intArray15);
        List list28 = AppendPairProgram.listgen(intArray15);
        List list29 = AppendPairProgram.listgen(intArray15);
        List list30 = AppendPairProgram.listgen(intArray15);
        List list31 = AppendPairProgram.listgen(intArray15);
        List list32 = AppendPairProgram.listgen(intArray15);
        List list33 = AppendPairProgram.listgen(intArray15);
        List list34 = AppendPairProgram.listgen(intArray15);
        List list35 = AppendPairProgram.listgen(intArray15);
        List list36 = AppendPairProgram.listgen(intArray15);
        List list37 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list37, (int) (byte) 10);
        java.lang.Class<?> wildcardClass40 = list37.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0951");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray17 = new int[] { 0 };
        List list18 = AppendPairProgram.listgen(intArray17);
        List list19 = AppendPairProgram.listgen(intArray17);
        List list20 = AppendPairProgram.listgen(intArray17);
        appendPairProgram0.TestStudentSubmission(list20, (int) (short) -1);
        int[] intArray24 = new int[] { (byte) 10 };
        List list25 = AppendPairProgram.listgen(intArray24);
        List list26 = AppendPairProgram.listgen(intArray24);
        List list27 = AppendPairProgram.listgen(intArray24);
        List list28 = AppendPairProgram.listgen(intArray24);
        List list29 = AppendPairProgram.listgen(intArray24);
        List list30 = AppendPairProgram.listgen(intArray24);
        List list31 = AppendPairProgram.listgen(intArray24);
        List list32 = AppendPairProgram.listgen(intArray24);
        List list33 = AppendPairProgram.listgen(intArray24);
        List list34 = AppendPairProgram.listgen(intArray24);
        List list35 = AppendPairProgram.listgen(intArray24);
        List list36 = AppendPairProgram.listgen(intArray24);
        List list37 = AppendPairProgram.listgen(intArray24);
        List list38 = AppendPairProgram.listgen(intArray24);
        List list39 = AppendPairProgram.listgen(intArray24);
        List list40 = AppendPairProgram.listgen(intArray24);
        appendPairProgram0.TestStudentSubmission(list40, 100);
        List list43 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list43, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0]");
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[10]");
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
    }

    @Test
    public void test0952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0952");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray2 = new int[] { (byte) 10 };
        List list3 = AppendPairProgram.listgen(intArray2);
        List list4 = AppendPairProgram.listgen(intArray2);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 0);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        List list14 = AppendPairProgram.listgen(intArray7);
        List list15 = AppendPairProgram.listgen(intArray7);
        List list16 = AppendPairProgram.listgen(intArray7);
        List list17 = AppendPairProgram.listgen(intArray7);
        List list18 = AppendPairProgram.listgen(intArray7);
        List list19 = AppendPairProgram.listgen(intArray7);
        List list20 = AppendPairProgram.listgen(intArray7);
        List list21 = AppendPairProgram.listgen(intArray7);
        List list22 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list22, (int) '4');
        java.lang.Class<?> wildcardClass25 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[10]");
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0953");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        List list12 = AppendPairProgram.listgen(intArray9);
        List list13 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        List list27 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list27, 100);
        int[] intArray30 = new int[] {};
        List list31 = AppendPairProgram.listgen(intArray30);
        List list32 = AppendPairProgram.listgen(intArray30);
        List list33 = AppendPairProgram.listgen(intArray30);
        List list34 = AppendPairProgram.listgen(intArray30);
        List list35 = AppendPairProgram.listgen(intArray30);
        List list36 = AppendPairProgram.listgen(intArray30);
        List list37 = AppendPairProgram.listgen(intArray30);
        List list38 = AppendPairProgram.listgen(intArray30);
        List list39 = AppendPairProgram.listgen(intArray30);
        List list40 = AppendPairProgram.listgen(intArray30);
        List list41 = AppendPairProgram.listgen(intArray30);
        List list42 = AppendPairProgram.listgen(intArray30);
        List list43 = AppendPairProgram.listgen(intArray30);
        List list44 = AppendPairProgram.listgen(intArray30);
        List list45 = AppendPairProgram.listgen(intArray30);
        List list46 = AppendPairProgram.listgen(intArray30);
        List list47 = AppendPairProgram.listgen(intArray30);
        appendPairProgram0.TestStudentSubmission(list47, (int) (byte) 1);
        java.lang.Class<?> wildcardClass50 = list47.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]");
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0954");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        List list7 = AppendPairProgram.listgen(intArray1);
        List list8 = AppendPairProgram.listgen(intArray1);
        List list9 = AppendPairProgram.listgen(intArray1);
        List list10 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list10, (int) (byte) 10);
        int[] intArray14 = new int[] { 0 };
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) ' ');
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        List list24 = AppendPairProgram.listgen(intArray19);
        List list25 = AppendPairProgram.listgen(intArray19);
        List list26 = AppendPairProgram.listgen(intArray19);
        List list27 = AppendPairProgram.listgen(intArray19);
        List list28 = AppendPairProgram.listgen(intArray19);
        List list29 = AppendPairProgram.listgen(intArray19);
        List list30 = AppendPairProgram.listgen(intArray19);
        List list31 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list31, (int) '#');
        java.lang.Class<?> wildcardClass34 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0955");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, (int) (byte) 10);
        int[] intArray7 = new int[] { (byte) 10 };
        List list8 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list8, 100);
        int[] intArray12 = new int[] { (byte) 10 };
        List list13 = AppendPairProgram.listgen(intArray12);
        List list14 = AppendPairProgram.listgen(intArray12);
        appendPairProgram0.TestStudentSubmission(list14, (int) (short) 10);
        java.lang.Class<?> wildcardClass17 = list14.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10]");
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0956");
        int[] intArray6 = new int[] { (byte) 0, (short) -1, ' ', 'a', (byte) 100, (byte) 10 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass25 = list24.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, -1, 32, 97, 100, 10]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0957");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, 1);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list22, (int) (short) 1);
        int[] intArray25 = new int[] {};
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        List list31 = AppendPairProgram.listgen(intArray25);
        List list32 = AppendPairProgram.listgen(intArray25);
        List list33 = AppendPairProgram.listgen(intArray25);
        List list34 = AppendPairProgram.listgen(intArray25);
        List list35 = AppendPairProgram.listgen(intArray25);
        List list36 = AppendPairProgram.listgen(intArray25);
        List list37 = AppendPairProgram.listgen(intArray25);
        List list38 = AppendPairProgram.listgen(intArray25);
        List list39 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list39, (int) '#');
        int[] intArray42 = new int[] {};
        List list43 = AppendPairProgram.listgen(intArray42);
        List list44 = AppendPairProgram.listgen(intArray42);
        List list45 = AppendPairProgram.listgen(intArray42);
        List list46 = AppendPairProgram.listgen(intArray42);
        List list47 = AppendPairProgram.listgen(intArray42);
        List list48 = AppendPairProgram.listgen(intArray42);
        List list49 = AppendPairProgram.listgen(intArray42);
        List list50 = AppendPairProgram.listgen(intArray42);
        List list51 = AppendPairProgram.listgen(intArray42);
        appendPairProgram0.TestStudentSubmission(list51, (int) 'a');
        int[] intArray55 = new int[] { (byte) 10 };
        List list56 = AppendPairProgram.listgen(intArray55);
        List list57 = AppendPairProgram.listgen(intArray55);
        List list58 = AppendPairProgram.listgen(intArray55);
        appendPairProgram0.TestStudentSubmission(list58, (int) '4');
        int[] intArray61 = new int[] {};
        List list62 = AppendPairProgram.listgen(intArray61);
        List list63 = AppendPairProgram.listgen(intArray61);
        List list64 = AppendPairProgram.listgen(intArray61);
        List list65 = AppendPairProgram.listgen(intArray61);
        List list66 = AppendPairProgram.listgen(intArray61);
        List list67 = AppendPairProgram.listgen(intArray61);
        List list68 = AppendPairProgram.listgen(intArray61);
        List list69 = AppendPairProgram.listgen(intArray61);
        List list70 = AppendPairProgram.listgen(intArray61);
        List list71 = AppendPairProgram.listgen(intArray61);
        List list72 = AppendPairProgram.listgen(intArray61);
        List list73 = AppendPairProgram.listgen(intArray61);
        List list74 = AppendPairProgram.listgen(intArray61);
        List list75 = AppendPairProgram.listgen(intArray61);
        List list76 = AppendPairProgram.listgen(intArray61);
        List list77 = AppendPairProgram.listgen(intArray61);
        appendPairProgram0.TestStudentSubmission(list77, (int) (short) 10);
        int[] intArray81 = new int[] { (byte) 10 };
        List list82 = AppendPairProgram.listgen(intArray81);
        List list83 = AppendPairProgram.listgen(intArray81);
        List list84 = AppendPairProgram.listgen(intArray81);
        List list85 = AppendPairProgram.listgen(intArray81);
        List list86 = AppendPairProgram.listgen(intArray81);
        List list87 = AppendPairProgram.listgen(intArray81);
        List list88 = AppendPairProgram.listgen(intArray81);
        List list89 = AppendPairProgram.listgen(intArray81);
        List list90 = AppendPairProgram.listgen(intArray81);
        List list91 = AppendPairProgram.listgen(intArray81);
        appendPairProgram0.TestStudentSubmission(list91, (int) (short) 10);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]");
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[10]");
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[]");
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(list63);
        org.junit.Assert.assertNotNull(list64);
        org.junit.Assert.assertNotNull(list65);
        org.junit.Assert.assertNotNull(list66);
        org.junit.Assert.assertNotNull(list67);
        org.junit.Assert.assertNotNull(list68);
        org.junit.Assert.assertNotNull(list69);
        org.junit.Assert.assertNotNull(list70);
        org.junit.Assert.assertNotNull(list71);
        org.junit.Assert.assertNotNull(list72);
        org.junit.Assert.assertNotNull(list73);
        org.junit.Assert.assertNotNull(list74);
        org.junit.Assert.assertNotNull(list75);
        org.junit.Assert.assertNotNull(list76);
        org.junit.Assert.assertNotNull(list77);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[10]");
        org.junit.Assert.assertNotNull(list82);
        org.junit.Assert.assertNotNull(list83);
        org.junit.Assert.assertNotNull(list84);
        org.junit.Assert.assertNotNull(list85);
        org.junit.Assert.assertNotNull(list86);
        org.junit.Assert.assertNotNull(list87);
        org.junit.Assert.assertNotNull(list88);
        org.junit.Assert.assertNotNull(list89);
        org.junit.Assert.assertNotNull(list90);
        org.junit.Assert.assertNotNull(list91);
    }

    @Test
    public void test0958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0958");
        int[] intArray0 = new int[] {};
        List list1 = AppendPairProgram.listgen(intArray0);
        List list2 = AppendPairProgram.listgen(intArray0);
        List list3 = AppendPairProgram.listgen(intArray0);
        List list4 = AppendPairProgram.listgen(intArray0);
        List list5 = AppendPairProgram.listgen(intArray0);
        List list6 = AppendPairProgram.listgen(intArray0);
        List list7 = AppendPairProgram.listgen(intArray0);
        List list8 = AppendPairProgram.listgen(intArray0);
        List list9 = AppendPairProgram.listgen(intArray0);
        List list10 = AppendPairProgram.listgen(intArray0);
        List list11 = AppendPairProgram.listgen(intArray0);
        List list12 = AppendPairProgram.listgen(intArray0);
        List list13 = AppendPairProgram.listgen(intArray0);
        List list14 = AppendPairProgram.listgen(intArray0);
        List list15 = AppendPairProgram.listgen(intArray0);
        List list16 = AppendPairProgram.listgen(intArray0);
        List list17 = AppendPairProgram.listgen(intArray0);
        List list18 = AppendPairProgram.listgen(intArray0);
        List list19 = AppendPairProgram.listgen(intArray0);
        List list20 = AppendPairProgram.listgen(intArray0);
        List list21 = AppendPairProgram.listgen(intArray0);
        List list22 = AppendPairProgram.listgen(intArray0);
        java.lang.Class<?> wildcardClass23 = intArray0.getClass();
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(list1);
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0959");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray16 = new int[] { (byte) 10 };
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list18, (int) (byte) -1);
        int[] intArray21 = new int[] {};
        List list22 = AppendPairProgram.listgen(intArray21);
        List list23 = AppendPairProgram.listgen(intArray21);
        List list24 = AppendPairProgram.listgen(intArray21);
        List list25 = AppendPairProgram.listgen(intArray21);
        List list26 = AppendPairProgram.listgen(intArray21);
        List list27 = AppendPairProgram.listgen(intArray21);
        List list28 = AppendPairProgram.listgen(intArray21);
        List list29 = AppendPairProgram.listgen(intArray21);
        List list30 = AppendPairProgram.listgen(intArray21);
        List list31 = AppendPairProgram.listgen(intArray21);
        List list32 = AppendPairProgram.listgen(intArray21);
        List list33 = AppendPairProgram.listgen(intArray21);
        List list34 = AppendPairProgram.listgen(intArray21);
        List list35 = AppendPairProgram.listgen(intArray21);
        List list36 = AppendPairProgram.listgen(intArray21);
        appendPairProgram0.TestStudentSubmission(list36, (int) (short) 1);
        int[] intArray39 = new int[] {};
        List list40 = AppendPairProgram.listgen(intArray39);
        List list41 = AppendPairProgram.listgen(intArray39);
        List list42 = AppendPairProgram.listgen(intArray39);
        appendPairProgram0.TestStudentSubmission(list42, 10);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]");
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
    }

    @Test
    public void test0960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0960");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list12, 100);
        int[] intArray15 = new int[] {};
        List list16 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 100);
        int[] intArray20 = new int[] { (byte) 10 };
        List list21 = AppendPairProgram.listgen(intArray20);
        appendPairProgram0.TestStudentSubmission(list21, (-1));
        int[] intArray25 = new int[] { (byte) 10 };
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        List list31 = AppendPairProgram.listgen(intArray25);
        List list32 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list32, (int) (short) -1);
        int[] intArray35 = new int[] {};
        List list36 = AppendPairProgram.listgen(intArray35);
        List list37 = AppendPairProgram.listgen(intArray35);
        List list38 = AppendPairProgram.listgen(intArray35);
        List list39 = AppendPairProgram.listgen(intArray35);
        List list40 = AppendPairProgram.listgen(intArray35);
        List list41 = AppendPairProgram.listgen(intArray35);
        List list42 = AppendPairProgram.listgen(intArray35);
        List list43 = AppendPairProgram.listgen(intArray35);
        List list44 = AppendPairProgram.listgen(intArray35);
        List list45 = AppendPairProgram.listgen(intArray35);
        List list46 = AppendPairProgram.listgen(intArray35);
        List list47 = AppendPairProgram.listgen(intArray35);
        List list48 = AppendPairProgram.listgen(intArray35);
        List list49 = AppendPairProgram.listgen(intArray35);
        List list50 = AppendPairProgram.listgen(intArray35);
        List list51 = AppendPairProgram.listgen(intArray35);
        appendPairProgram0.TestStudentSubmission(list51, (int) '#');
        java.lang.Class<?> wildcardClass54 = list51.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10]");
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[10]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[]");
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0961");
        int[] intArray5 = new int[] { '4', 10, (byte) 1, (byte) 100, (byte) 10 };
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        List list9 = AppendPairProgram.listgen(intArray5);
        List list10 = AppendPairProgram.listgen(intArray5);
        List list11 = AppendPairProgram.listgen(intArray5);
        List list12 = AppendPairProgram.listgen(intArray5);
        List list13 = AppendPairProgram.listgen(intArray5);
        java.lang.Class<?> wildcardClass14 = list13.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[52, 10, 1, 100, 10]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0962");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray12 = new int[] { (byte) 10 };
        List list13 = AppendPairProgram.listgen(intArray12);
        List list14 = AppendPairProgram.listgen(intArray12);
        List list15 = AppendPairProgram.listgen(intArray12);
        appendPairProgram0.TestStudentSubmission(list15, 10);
        int[] intArray18 = new int[] {};
        List list19 = AppendPairProgram.listgen(intArray18);
        List list20 = AppendPairProgram.listgen(intArray18);
        List list21 = AppendPairProgram.listgen(intArray18);
        List list22 = AppendPairProgram.listgen(intArray18);
        List list23 = AppendPairProgram.listgen(intArray18);
        appendPairProgram0.TestStudentSubmission(list23, 0);
        int[] intArray27 = new int[] { 0 };
        List list28 = AppendPairProgram.listgen(intArray27);
        List list29 = AppendPairProgram.listgen(intArray27);
        List list30 = AppendPairProgram.listgen(intArray27);
        List list31 = AppendPairProgram.listgen(intArray27);
        List list32 = AppendPairProgram.listgen(intArray27);
        List list33 = AppendPairProgram.listgen(intArray27);
        appendPairProgram0.TestStudentSubmission(list33, 10);
        java.lang.Class<?> wildcardClass36 = list33.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10]");
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0]");
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0963");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, (int) (byte) 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list10, (-1));
        int[] intArray13 = new int[] {};
        List list14 = AppendPairProgram.listgen(intArray13);
        List list15 = AppendPairProgram.listgen(intArray13);
        appendPairProgram0.TestStudentSubmission(list15, (int) (byte) 1);
        int[] intArray19 = new int[] { (byte) 10 };
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        List list24 = AppendPairProgram.listgen(intArray19);
        List list25 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list25, (int) (short) -1);
        int[] intArray28 = new int[] {};
        List list29 = AppendPairProgram.listgen(intArray28);
        List list30 = AppendPairProgram.listgen(intArray28);
        List list31 = AppendPairProgram.listgen(intArray28);
        List list32 = AppendPairProgram.listgen(intArray28);
        List list33 = AppendPairProgram.listgen(intArray28);
        List list34 = AppendPairProgram.listgen(intArray28);
        List list35 = AppendPairProgram.listgen(intArray28);
        List list36 = AppendPairProgram.listgen(intArray28);
        List list37 = AppendPairProgram.listgen(intArray28);
        List list38 = AppendPairProgram.listgen(intArray28);
        List list39 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list39, (int) (short) 0);
        int[] intArray43 = new int[] { (byte) 10 };
        List list44 = AppendPairProgram.listgen(intArray43);
        List list45 = AppendPairProgram.listgen(intArray43);
        List list46 = AppendPairProgram.listgen(intArray43);
        List list47 = AppendPairProgram.listgen(intArray43);
        List list48 = AppendPairProgram.listgen(intArray43);
        List list49 = AppendPairProgram.listgen(intArray43);
        appendPairProgram0.TestStudentSubmission(list49, (int) '4');
        List list52 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list52, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[10]");
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
    }

    @Test
    public void test0964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0964");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) -1);
        int[] intArray14 = new int[] {};
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 10);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list23, (int) (byte) 0);
        int[] intArray26 = new int[] {};
        List list27 = AppendPairProgram.listgen(intArray26);
        List list28 = AppendPairProgram.listgen(intArray26);
        List list29 = AppendPairProgram.listgen(intArray26);
        List list30 = AppendPairProgram.listgen(intArray26);
        List list31 = AppendPairProgram.listgen(intArray26);
        List list32 = AppendPairProgram.listgen(intArray26);
        List list33 = AppendPairProgram.listgen(intArray26);
        List list34 = AppendPairProgram.listgen(intArray26);
        appendPairProgram0.TestStudentSubmission(list34, (int) (short) 0);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
    }

    @Test
    public void test0965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0965");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        List list14 = AppendPairProgram.listgen(intArray7);
        List list15 = AppendPairProgram.listgen(intArray7);
        List list16 = AppendPairProgram.listgen(intArray7);
        List list17 = AppendPairProgram.listgen(intArray7);
        List list18 = AppendPairProgram.listgen(intArray7);
        List list19 = AppendPairProgram.listgen(intArray7);
        List list20 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list20, (int) '#');
        int[] intArray24 = new int[] { (byte) 10 };
        List list25 = AppendPairProgram.listgen(intArray24);
        List list26 = AppendPairProgram.listgen(intArray24);
        List list27 = AppendPairProgram.listgen(intArray24);
        List list28 = AppendPairProgram.listgen(intArray24);
        List list29 = AppendPairProgram.listgen(intArray24);
        List list30 = AppendPairProgram.listgen(intArray24);
        List list31 = AppendPairProgram.listgen(intArray24);
        List list32 = AppendPairProgram.listgen(intArray24);
        List list33 = AppendPairProgram.listgen(intArray24);
        List list34 = AppendPairProgram.listgen(intArray24);
        List list35 = AppendPairProgram.listgen(intArray24);
        List list36 = AppendPairProgram.listgen(intArray24);
        List list37 = AppendPairProgram.listgen(intArray24);
        List list38 = AppendPairProgram.listgen(intArray24);
        appendPairProgram0.TestStudentSubmission(list38, 0);
        java.lang.Class<?> wildcardClass41 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[10]");
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0966");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, (int) (byte) 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list8, (int) (byte) 100);
        int[] intArray12 = new int[] { 0 };
        List list13 = AppendPairProgram.listgen(intArray12);
        appendPairProgram0.TestStudentSubmission(list13, (int) (byte) 0);
        java.lang.Class<?> wildcardClass16 = list13.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0]");
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0967");
        int[] intArray4 = new int[] { 'a', (byte) -1, 100, (byte) 10 };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        List list7 = AppendPairProgram.listgen(intArray4);
        List list8 = AppendPairProgram.listgen(intArray4);
        List list9 = AppendPairProgram.listgen(intArray4);
        List list10 = AppendPairProgram.listgen(intArray4);
        List list11 = AppendPairProgram.listgen(intArray4);
        List list12 = AppendPairProgram.listgen(intArray4);
        List list13 = AppendPairProgram.listgen(intArray4);
        List list14 = AppendPairProgram.listgen(intArray4);
        List list15 = AppendPairProgram.listgen(intArray4);
        List list16 = AppendPairProgram.listgen(intArray4);
        List list17 = AppendPairProgram.listgen(intArray4);
        List list18 = AppendPairProgram.listgen(intArray4);
        List list19 = AppendPairProgram.listgen(intArray4);
        java.lang.Class<?> wildcardClass20 = list19.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[97, -1, 100, 10]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0968");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) -1);
        int[] intArray14 = new int[] {};
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 10);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list23, (int) (byte) 0);
        int[] intArray26 = new int[] {};
        List list27 = AppendPairProgram.listgen(intArray26);
        List list28 = AppendPairProgram.listgen(intArray26);
        List list29 = AppendPairProgram.listgen(intArray26);
        List list30 = AppendPairProgram.listgen(intArray26);
        List list31 = AppendPairProgram.listgen(intArray26);
        appendPairProgram0.TestStudentSubmission(list31, (-1));
        int[] intArray35 = new int[] { (byte) 10 };
        List list36 = AppendPairProgram.listgen(intArray35);
        List list37 = AppendPairProgram.listgen(intArray35);
        List list38 = AppendPairProgram.listgen(intArray35);
        List list39 = AppendPairProgram.listgen(intArray35);
        List list40 = AppendPairProgram.listgen(intArray35);
        List list41 = AppendPairProgram.listgen(intArray35);
        List list42 = AppendPairProgram.listgen(intArray35);
        List list43 = AppendPairProgram.listgen(intArray35);
        List list44 = AppendPairProgram.listgen(intArray35);
        List list45 = AppendPairProgram.listgen(intArray35);
        List list46 = AppendPairProgram.listgen(intArray35);
        List list47 = AppendPairProgram.listgen(intArray35);
        List list48 = AppendPairProgram.listgen(intArray35);
        List list49 = AppendPairProgram.listgen(intArray35);
        List list50 = AppendPairProgram.listgen(intArray35);
        List list51 = AppendPairProgram.listgen(intArray35);
        appendPairProgram0.TestStudentSubmission(list51, (int) (byte) -1);
        int[] intArray55 = new int[] { 0 };
        List list56 = AppendPairProgram.listgen(intArray55);
        List list57 = AppendPairProgram.listgen(intArray55);
        List list58 = AppendPairProgram.listgen(intArray55);
        appendPairProgram0.TestStudentSubmission(list58, (int) '4');
        java.lang.Class<?> wildcardClass61 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[10]");
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0]");
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0969");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, 1);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list22, (int) (short) 1);
        int[] intArray25 = new int[] {};
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        List list31 = AppendPairProgram.listgen(intArray25);
        List list32 = AppendPairProgram.listgen(intArray25);
        List list33 = AppendPairProgram.listgen(intArray25);
        List list34 = AppendPairProgram.listgen(intArray25);
        List list35 = AppendPairProgram.listgen(intArray25);
        List list36 = AppendPairProgram.listgen(intArray25);
        List list37 = AppendPairProgram.listgen(intArray25);
        List list38 = AppendPairProgram.listgen(intArray25);
        List list39 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list39, (int) '#');
        int[] intArray42 = new int[] {};
        List list43 = AppendPairProgram.listgen(intArray42);
        List list44 = AppendPairProgram.listgen(intArray42);
        List list45 = AppendPairProgram.listgen(intArray42);
        List list46 = AppendPairProgram.listgen(intArray42);
        List list47 = AppendPairProgram.listgen(intArray42);
        List list48 = AppendPairProgram.listgen(intArray42);
        List list49 = AppendPairProgram.listgen(intArray42);
        List list50 = AppendPairProgram.listgen(intArray42);
        List list51 = AppendPairProgram.listgen(intArray42);
        appendPairProgram0.TestStudentSubmission(list51, (int) 'a');
        int[] intArray55 = new int[] { (byte) 10 };
        List list56 = AppendPairProgram.listgen(intArray55);
        List list57 = AppendPairProgram.listgen(intArray55);
        List list58 = AppendPairProgram.listgen(intArray55);
        appendPairProgram0.TestStudentSubmission(list58, (int) '4');
        List list61 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list61, (int) '4');
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]");
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[10]");
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
    }

    @Test
    public void test0970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0970");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) -1);
        int[] intArray14 = new int[] {};
        List list15 = AppendPairProgram.listgen(intArray14);
        List list16 = AppendPairProgram.listgen(intArray14);
        List list17 = AppendPairProgram.listgen(intArray14);
        List list18 = AppendPairProgram.listgen(intArray14);
        List list19 = AppendPairProgram.listgen(intArray14);
        List list20 = AppendPairProgram.listgen(intArray14);
        List list21 = AppendPairProgram.listgen(intArray14);
        appendPairProgram0.TestStudentSubmission(list21, (int) '4');
        List list24 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list24, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
    }

    @Test
    public void test0971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0971");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, (int) (byte) 10);
        int[] intArray7 = new int[] { (byte) 10 };
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, (int) '#');
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
    }

    @Test
    public void test0972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0972");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray9 = new int[] {};
        List list10 = AppendPairProgram.listgen(intArray9);
        List list11 = AppendPairProgram.listgen(intArray9);
        List list12 = AppendPairProgram.listgen(intArray9);
        List list13 = AppendPairProgram.listgen(intArray9);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        List list27 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list27, 100);
        int[] intArray31 = new int[] { (byte) 10 };
        List list32 = AppendPairProgram.listgen(intArray31);
        List list33 = AppendPairProgram.listgen(intArray31);
        List list34 = AppendPairProgram.listgen(intArray31);
        List list35 = AppendPairProgram.listgen(intArray31);
        List list36 = AppendPairProgram.listgen(intArray31);
        appendPairProgram0.TestStudentSubmission(list36, (int) (byte) 100);
        int[] intArray40 = new int[] { (byte) 10 };
        List list41 = AppendPairProgram.listgen(intArray40);
        List list42 = AppendPairProgram.listgen(intArray40);
        List list43 = AppendPairProgram.listgen(intArray40);
        List list44 = AppendPairProgram.listgen(intArray40);
        List list45 = AppendPairProgram.listgen(intArray40);
        List list46 = AppendPairProgram.listgen(intArray40);
        List list47 = AppendPairProgram.listgen(intArray40);
        List list48 = AppendPairProgram.listgen(intArray40);
        List list49 = AppendPairProgram.listgen(intArray40);
        List list50 = AppendPairProgram.listgen(intArray40);
        List list51 = AppendPairProgram.listgen(intArray40);
        List list52 = AppendPairProgram.listgen(intArray40);
        List list53 = AppendPairProgram.listgen(intArray40);
        List list54 = AppendPairProgram.listgen(intArray40);
        List list55 = AppendPairProgram.listgen(intArray40);
        appendPairProgram0.TestStudentSubmission(list55, 0);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10]");
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[10]");
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
    }

    @Test
    public void test0973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0973");
        int[] intArray5 = new int[] { '4', 10, (byte) 1, (byte) 100, (byte) 10 };
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        List list9 = AppendPairProgram.listgen(intArray5);
        List list10 = AppendPairProgram.listgen(intArray5);
        List list11 = AppendPairProgram.listgen(intArray5);
        List list12 = AppendPairProgram.listgen(intArray5);
        List list13 = AppendPairProgram.listgen(intArray5);
        List list14 = AppendPairProgram.listgen(intArray5);
        java.lang.Class<?> wildcardClass15 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[52, 10, 1, 100, 10]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0974");
        int[] intArray6 = new int[] { (short) 0, (byte) 0, (byte) 1, 0, (-1), (byte) 100 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass25 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0, 1, 0, -1, 100]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0975");
        int[] intArray0 = new int[] {};
        List list1 = AppendPairProgram.listgen(intArray0);
        List list2 = AppendPairProgram.listgen(intArray0);
        List list3 = AppendPairProgram.listgen(intArray0);
        List list4 = AppendPairProgram.listgen(intArray0);
        List list5 = AppendPairProgram.listgen(intArray0);
        List list6 = AppendPairProgram.listgen(intArray0);
        List list7 = AppendPairProgram.listgen(intArray0);
        List list8 = AppendPairProgram.listgen(intArray0);
        List list9 = AppendPairProgram.listgen(intArray0);
        List list10 = AppendPairProgram.listgen(intArray0);
        List list11 = AppendPairProgram.listgen(intArray0);
        List list12 = AppendPairProgram.listgen(intArray0);
        List list13 = AppendPairProgram.listgen(intArray0);
        List list14 = AppendPairProgram.listgen(intArray0);
        List list15 = AppendPairProgram.listgen(intArray0);
        List list16 = AppendPairProgram.listgen(intArray0);
        List list17 = AppendPairProgram.listgen(intArray0);
        List list18 = AppendPairProgram.listgen(intArray0);
        List list19 = AppendPairProgram.listgen(intArray0);
        List list20 = AppendPairProgram.listgen(intArray0);
        java.lang.Class<?> wildcardClass21 = list20.getClass();
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(list1);
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0976");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, (int) (byte) 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list10, (-1));
        int[] intArray13 = new int[] {};
        List list14 = AppendPairProgram.listgen(intArray13);
        List list15 = AppendPairProgram.listgen(intArray13);
        List list16 = AppendPairProgram.listgen(intArray13);
        List list17 = AppendPairProgram.listgen(intArray13);
        List list18 = AppendPairProgram.listgen(intArray13);
        List list19 = AppendPairProgram.listgen(intArray13);
        List list20 = AppendPairProgram.listgen(intArray13);
        appendPairProgram0.TestStudentSubmission(list20, (-1));
        int[] intArray23 = new int[] {};
        List list24 = AppendPairProgram.listgen(intArray23);
        List list25 = AppendPairProgram.listgen(intArray23);
        List list26 = AppendPairProgram.listgen(intArray23);
        List list27 = AppendPairProgram.listgen(intArray23);
        List list28 = AppendPairProgram.listgen(intArray23);
        List list29 = AppendPairProgram.listgen(intArray23);
        List list30 = AppendPairProgram.listgen(intArray23);
        List list31 = AppendPairProgram.listgen(intArray23);
        List list32 = AppendPairProgram.listgen(intArray23);
        List list33 = AppendPairProgram.listgen(intArray23);
        List list34 = AppendPairProgram.listgen(intArray23);
        List list35 = AppendPairProgram.listgen(intArray23);
        List list36 = AppendPairProgram.listgen(intArray23);
        List list37 = AppendPairProgram.listgen(intArray23);
        List list38 = AppendPairProgram.listgen(intArray23);
        List list39 = AppendPairProgram.listgen(intArray23);
        List list40 = AppendPairProgram.listgen(intArray23);
        appendPairProgram0.TestStudentSubmission(list40, (int) (short) 100);
        java.lang.Class<?> wildcardClass43 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[]");
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0977");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, 1);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list22, (int) (short) 1);
        int[] intArray25 = new int[] {};
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        List list31 = AppendPairProgram.listgen(intArray25);
        List list32 = AppendPairProgram.listgen(intArray25);
        List list33 = AppendPairProgram.listgen(intArray25);
        List list34 = AppendPairProgram.listgen(intArray25);
        List list35 = AppendPairProgram.listgen(intArray25);
        List list36 = AppendPairProgram.listgen(intArray25);
        List list37 = AppendPairProgram.listgen(intArray25);
        List list38 = AppendPairProgram.listgen(intArray25);
        List list39 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list39, (int) '#');
        int[] intArray42 = new int[] {};
        List list43 = AppendPairProgram.listgen(intArray42);
        List list44 = AppendPairProgram.listgen(intArray42);
        List list45 = AppendPairProgram.listgen(intArray42);
        appendPairProgram0.TestStudentSubmission(list45, 10);
        int[] intArray49 = new int[] { (byte) 10 };
        List list50 = AppendPairProgram.listgen(intArray49);
        List list51 = AppendPairProgram.listgen(intArray49);
        List list52 = AppendPairProgram.listgen(intArray49);
        List list53 = AppendPairProgram.listgen(intArray49);
        List list54 = AppendPairProgram.listgen(intArray49);
        List list55 = AppendPairProgram.listgen(intArray49);
        appendPairProgram0.TestStudentSubmission(list55, 1);
        int[] intArray59 = new int[] { (byte) 10 };
        List list60 = AppendPairProgram.listgen(intArray59);
        List list61 = AppendPairProgram.listgen(intArray59);
        List list62 = AppendPairProgram.listgen(intArray59);
        List list63 = AppendPairProgram.listgen(intArray59);
        List list64 = AppendPairProgram.listgen(intArray59);
        List list65 = AppendPairProgram.listgen(intArray59);
        List list66 = AppendPairProgram.listgen(intArray59);
        List list67 = AppendPairProgram.listgen(intArray59);
        List list68 = AppendPairProgram.listgen(intArray59);
        List list69 = AppendPairProgram.listgen(intArray59);
        List list70 = AppendPairProgram.listgen(intArray59);
        List list71 = AppendPairProgram.listgen(intArray59);
        List list72 = AppendPairProgram.listgen(intArray59);
        List list73 = AppendPairProgram.listgen(intArray59);
        List list74 = AppendPairProgram.listgen(intArray59);
        appendPairProgram0.TestStudentSubmission(list74, (int) ' ');
        java.lang.Class<?> wildcardClass77 = list74.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]");
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[10]");
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[10]");
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(list61);
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(list63);
        org.junit.Assert.assertNotNull(list64);
        org.junit.Assert.assertNotNull(list65);
        org.junit.Assert.assertNotNull(list66);
        org.junit.Assert.assertNotNull(list67);
        org.junit.Assert.assertNotNull(list68);
        org.junit.Assert.assertNotNull(list69);
        org.junit.Assert.assertNotNull(list70);
        org.junit.Assert.assertNotNull(list71);
        org.junit.Assert.assertNotNull(list72);
        org.junit.Assert.assertNotNull(list73);
        org.junit.Assert.assertNotNull(list74);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0978");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list9, (int) (short) 0);
        int[] intArray12 = new int[] {};
        List list13 = AppendPairProgram.listgen(intArray12);
        List list14 = AppendPairProgram.listgen(intArray12);
        List list15 = AppendPairProgram.listgen(intArray12);
        List list16 = AppendPairProgram.listgen(intArray12);
        List list17 = AppendPairProgram.listgen(intArray12);
        List list18 = AppendPairProgram.listgen(intArray12);
        List list19 = AppendPairProgram.listgen(intArray12);
        List list20 = AppendPairProgram.listgen(intArray12);
        List list21 = AppendPairProgram.listgen(intArray12);
        List list22 = AppendPairProgram.listgen(intArray12);
        List list23 = AppendPairProgram.listgen(intArray12);
        List list24 = AppendPairProgram.listgen(intArray12);
        appendPairProgram0.TestStudentSubmission(list24, (int) '#');
        int[] intArray28 = new int[] { 0 };
        List list29 = AppendPairProgram.listgen(intArray28);
        List list30 = AppendPairProgram.listgen(intArray28);
        List list31 = AppendPairProgram.listgen(intArray28);
        List list32 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list32, (int) (byte) 100);
        java.lang.Class<?> wildcardClass35 = list32.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0979");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        List list9 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list9, (int) (short) -1);
        java.lang.Class<?> wildcardClass12 = list9.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0980");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 10);
        int[] intArray12 = new int[] { 0 };
        List list13 = AppendPairProgram.listgen(intArray12);
        List list14 = AppendPairProgram.listgen(intArray12);
        List list15 = AppendPairProgram.listgen(intArray12);
        List list16 = AppendPairProgram.listgen(intArray12);
        List list17 = AppendPairProgram.listgen(intArray12);
        appendPairProgram0.TestStudentSubmission(list17, (-1));
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0]");
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
    }

    @Test
    public void test0981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0981");
        int[] intArray4 = new int[] { (-1), (byte) 100, (byte) 1, (byte) 1 };
        List list5 = AppendPairProgram.listgen(intArray4);
        List list6 = AppendPairProgram.listgen(intArray4);
        List list7 = AppendPairProgram.listgen(intArray4);
        List list8 = AppendPairProgram.listgen(intArray4);
        List list9 = AppendPairProgram.listgen(intArray4);
        List list10 = AppendPairProgram.listgen(intArray4);
        List list11 = AppendPairProgram.listgen(intArray4);
        List list12 = AppendPairProgram.listgen(intArray4);
        List list13 = AppendPairProgram.listgen(intArray4);
        List list14 = AppendPairProgram.listgen(intArray4);
        List list15 = AppendPairProgram.listgen(intArray4);
        List list16 = AppendPairProgram.listgen(intArray4);
        java.lang.Class<?> wildcardClass17 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 100, 1, 1]");
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0982");
        int[] intArray6 = new int[] { (byte) 0, (short) -1, ' ', 'a', (byte) 100, (byte) 10 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        List list25 = AppendPairProgram.listgen(intArray6);
        List list26 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass27 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, -1, 32, 97, 100, 10]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0983");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list9, (int) (short) 0);
        int[] intArray12 = new int[] {};
        List list13 = AppendPairProgram.listgen(intArray12);
        List list14 = AppendPairProgram.listgen(intArray12);
        List list15 = AppendPairProgram.listgen(intArray12);
        List list16 = AppendPairProgram.listgen(intArray12);
        List list17 = AppendPairProgram.listgen(intArray12);
        List list18 = AppendPairProgram.listgen(intArray12);
        List list19 = AppendPairProgram.listgen(intArray12);
        List list20 = AppendPairProgram.listgen(intArray12);
        List list21 = AppendPairProgram.listgen(intArray12);
        List list22 = AppendPairProgram.listgen(intArray12);
        List list23 = AppendPairProgram.listgen(intArray12);
        List list24 = AppendPairProgram.listgen(intArray12);
        appendPairProgram0.TestStudentSubmission(list24, (int) '#');
        int[] intArray28 = new int[] { (byte) 10 };
        List list29 = AppendPairProgram.listgen(intArray28);
        List list30 = AppendPairProgram.listgen(intArray28);
        List list31 = AppendPairProgram.listgen(intArray28);
        appendPairProgram0.TestStudentSubmission(list31, (int) (byte) 0);
        int[] intArray35 = new int[] { (byte) 10 };
        List list36 = AppendPairProgram.listgen(intArray35);
        List list37 = AppendPairProgram.listgen(intArray35);
        List list38 = AppendPairProgram.listgen(intArray35);
        List list39 = AppendPairProgram.listgen(intArray35);
        List list40 = AppendPairProgram.listgen(intArray35);
        List list41 = AppendPairProgram.listgen(intArray35);
        appendPairProgram0.TestStudentSubmission(list41, (-1));
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10]");
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[10]");
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
    }

    @Test
    public void test0984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0984");
        int[] intArray1 = new int[] { (byte) 10 };
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        List list5 = AppendPairProgram.listgen(intArray1);
        List list6 = AppendPairProgram.listgen(intArray1);
        List list7 = AppendPairProgram.listgen(intArray1);
        List list8 = AppendPairProgram.listgen(intArray1);
        List list9 = AppendPairProgram.listgen(intArray1);
        List list10 = AppendPairProgram.listgen(intArray1);
        List list11 = AppendPairProgram.listgen(intArray1);
        List list12 = AppendPairProgram.listgen(intArray1);
        List list13 = AppendPairProgram.listgen(intArray1);
        List list14 = AppendPairProgram.listgen(intArray1);
        java.lang.Class<?> wildcardClass15 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[10]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0985");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, 1);
        int[] intArray17 = new int[] { (byte) 10 };
        List list18 = AppendPairProgram.listgen(intArray17);
        List list19 = AppendPairProgram.listgen(intArray17);
        List list20 = AppendPairProgram.listgen(intArray17);
        List list21 = AppendPairProgram.listgen(intArray17);
        List list22 = AppendPairProgram.listgen(intArray17);
        List list23 = AppendPairProgram.listgen(intArray17);
        List list24 = AppendPairProgram.listgen(intArray17);
        List list25 = AppendPairProgram.listgen(intArray17);
        appendPairProgram0.TestStudentSubmission(list25, (int) (short) 0);
        int[] intArray29 = new int[] { (byte) 10 };
        List list30 = AppendPairProgram.listgen(intArray29);
        List list31 = AppendPairProgram.listgen(intArray29);
        appendPairProgram0.TestStudentSubmission(list31, (-1));
        int[] intArray35 = new int[] { (byte) 10 };
        List list36 = AppendPairProgram.listgen(intArray35);
        List list37 = AppendPairProgram.listgen(intArray35);
        List list38 = AppendPairProgram.listgen(intArray35);
        List list39 = AppendPairProgram.listgen(intArray35);
        List list40 = AppendPairProgram.listgen(intArray35);
        List list41 = AppendPairProgram.listgen(intArray35);
        List list42 = AppendPairProgram.listgen(intArray35);
        List list43 = AppendPairProgram.listgen(intArray35);
        appendPairProgram0.TestStudentSubmission(list43, (int) (short) -1);
        int[] intArray46 = new int[] {};
        List list47 = AppendPairProgram.listgen(intArray46);
        List list48 = AppendPairProgram.listgen(intArray46);
        List list49 = AppendPairProgram.listgen(intArray46);
        List list50 = AppendPairProgram.listgen(intArray46);
        List list51 = AppendPairProgram.listgen(intArray46);
        List list52 = AppendPairProgram.listgen(intArray46);
        List list53 = AppendPairProgram.listgen(intArray46);
        List list54 = AppendPairProgram.listgen(intArray46);
        List list55 = AppendPairProgram.listgen(intArray46);
        List list56 = AppendPairProgram.listgen(intArray46);
        List list57 = AppendPairProgram.listgen(intArray46);
        List list58 = AppendPairProgram.listgen(intArray46);
        List list59 = AppendPairProgram.listgen(intArray46);
        List list60 = AppendPairProgram.listgen(intArray46);
        List list61 = AppendPairProgram.listgen(intArray46);
        List list62 = AppendPairProgram.listgen(intArray46);
        appendPairProgram0.TestStudentSubmission(list62, (-1));
        java.lang.Class<?> wildcardClass65 = list62.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10]");
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10]");
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[10]");
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(list61);
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0986");
        int[] intArray1 = new int[] { (short) -1 };
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        java.lang.Class<?> wildcardClass4 = list3.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[-1]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0987");
        int[] intArray2 = new int[] { (byte) 100, (short) 10 };
        List list3 = AppendPairProgram.listgen(intArray2);
        List list4 = AppendPairProgram.listgen(intArray2);
        List list5 = AppendPairProgram.listgen(intArray2);
        java.lang.Class<?> wildcardClass6 = list5.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[100, 10]");
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0988");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray17 = new int[] { 0 };
        List list18 = AppendPairProgram.listgen(intArray17);
        List list19 = AppendPairProgram.listgen(intArray17);
        List list20 = AppendPairProgram.listgen(intArray17);
        appendPairProgram0.TestStudentSubmission(list20, (int) (short) -1);
        java.lang.Class<?> wildcardClass23 = list20.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0]");
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0989");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, (int) (byte) 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list10, (-1));
        int[] intArray13 = new int[] {};
        List list14 = AppendPairProgram.listgen(intArray13);
        List list15 = AppendPairProgram.listgen(intArray13);
        List list16 = AppendPairProgram.listgen(intArray13);
        List list17 = AppendPairProgram.listgen(intArray13);
        List list18 = AppendPairProgram.listgen(intArray13);
        List list19 = AppendPairProgram.listgen(intArray13);
        List list20 = AppendPairProgram.listgen(intArray13);
        List list21 = AppendPairProgram.listgen(intArray13);
        List list22 = AppendPairProgram.listgen(intArray13);
        List list23 = AppendPairProgram.listgen(intArray13);
        List list24 = AppendPairProgram.listgen(intArray13);
        List list25 = AppendPairProgram.listgen(intArray13);
        List list26 = AppendPairProgram.listgen(intArray13);
        List list27 = AppendPairProgram.listgen(intArray13);
        appendPairProgram0.TestStudentSubmission(list27, (int) (short) -1);
        int[] intArray31 = new int[] { (byte) 10 };
        List list32 = AppendPairProgram.listgen(intArray31);
        List list33 = AppendPairProgram.listgen(intArray31);
        List list34 = AppendPairProgram.listgen(intArray31);
        List list35 = AppendPairProgram.listgen(intArray31);
        List list36 = AppendPairProgram.listgen(intArray31);
        List list37 = AppendPairProgram.listgen(intArray31);
        List list38 = AppendPairProgram.listgen(intArray31);
        List list39 = AppendPairProgram.listgen(intArray31);
        List list40 = AppendPairProgram.listgen(intArray31);
        List list41 = AppendPairProgram.listgen(intArray31);
        List list42 = AppendPairProgram.listgen(intArray31);
        List list43 = AppendPairProgram.listgen(intArray31);
        List list44 = AppendPairProgram.listgen(intArray31);
        List list45 = AppendPairProgram.listgen(intArray31);
        List list46 = AppendPairProgram.listgen(intArray31);
        appendPairProgram0.TestStudentSubmission(list46, 0);
        java.lang.Class<?> wildcardClass49 = list46.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10]");
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0990");
        int[] intArray1 = new int[] { (short) -1 };
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        java.lang.Class<?> wildcardClass4 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[-1]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0991");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list6, (int) (byte) -1);
        int[] intArray10 = new int[] { (byte) 10 };
        List list11 = AppendPairProgram.listgen(intArray10);
        List list12 = AppendPairProgram.listgen(intArray10);
        List list13 = AppendPairProgram.listgen(intArray10);
        List list14 = AppendPairProgram.listgen(intArray10);
        List list15 = AppendPairProgram.listgen(intArray10);
        List list16 = AppendPairProgram.listgen(intArray10);
        appendPairProgram0.TestStudentSubmission(list16, (int) (byte) 1);
        int[] intArray19 = new int[] {};
        List list20 = AppendPairProgram.listgen(intArray19);
        List list21 = AppendPairProgram.listgen(intArray19);
        List list22 = AppendPairProgram.listgen(intArray19);
        List list23 = AppendPairProgram.listgen(intArray19);
        List list24 = AppendPairProgram.listgen(intArray19);
        List list25 = AppendPairProgram.listgen(intArray19);
        List list26 = AppendPairProgram.listgen(intArray19);
        List list27 = AppendPairProgram.listgen(intArray19);
        List list28 = AppendPairProgram.listgen(intArray19);
        List list29 = AppendPairProgram.listgen(intArray19);
        List list30 = AppendPairProgram.listgen(intArray19);
        List list31 = AppendPairProgram.listgen(intArray19);
        List list32 = AppendPairProgram.listgen(intArray19);
        List list33 = AppendPairProgram.listgen(intArray19);
        appendPairProgram0.TestStudentSubmission(list33, (int) (byte) 1);
        int[] intArray37 = new int[] { (byte) 10 };
        List list38 = AppendPairProgram.listgen(intArray37);
        List list39 = AppendPairProgram.listgen(intArray37);
        List list40 = AppendPairProgram.listgen(intArray37);
        List list41 = AppendPairProgram.listgen(intArray37);
        List list42 = AppendPairProgram.listgen(intArray37);
        List list43 = AppendPairProgram.listgen(intArray37);
        List list44 = AppendPairProgram.listgen(intArray37);
        List list45 = AppendPairProgram.listgen(intArray37);
        List list46 = AppendPairProgram.listgen(intArray37);
        List list47 = AppendPairProgram.listgen(intArray37);
        appendPairProgram0.TestStudentSubmission(list47, (int) (byte) 100);
        int[] intArray51 = new int[] { (byte) 10 };
        List list52 = AppendPairProgram.listgen(intArray51);
        List list53 = AppendPairProgram.listgen(intArray51);
        List list54 = AppendPairProgram.listgen(intArray51);
        List list55 = AppendPairProgram.listgen(intArray51);
        appendPairProgram0.TestStudentSubmission(list55, (int) (byte) 10);
        List list58 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list58, (int) 'a');
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10]");
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[10]");
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[10]");
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
    }

    @Test
    public void test0992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0992");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, 0);
        int[] intArray17 = new int[] { 0 };
        List list18 = AppendPairProgram.listgen(intArray17);
        List list19 = AppendPairProgram.listgen(intArray17);
        List list20 = AppendPairProgram.listgen(intArray17);
        appendPairProgram0.TestStudentSubmission(list20, (int) (short) -1);
        int[] intArray24 = new int[] { (byte) 10 };
        List list25 = AppendPairProgram.listgen(intArray24);
        List list26 = AppendPairProgram.listgen(intArray24);
        List list27 = AppendPairProgram.listgen(intArray24);
        List list28 = AppendPairProgram.listgen(intArray24);
        List list29 = AppendPairProgram.listgen(intArray24);
        appendPairProgram0.TestStudentSubmission(list29, (-1));
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0]");
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[10]");
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
    }

    @Test
    public void test0993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0993");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        List list4 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list4, (int) (byte) 10);
        int[] intArray7 = new int[] {};
        List list8 = AppendPairProgram.listgen(intArray7);
        List list9 = AppendPairProgram.listgen(intArray7);
        List list10 = AppendPairProgram.listgen(intArray7);
        List list11 = AppendPairProgram.listgen(intArray7);
        List list12 = AppendPairProgram.listgen(intArray7);
        List list13 = AppendPairProgram.listgen(intArray7);
        appendPairProgram0.TestStudentSubmission(list13, 1);
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list22, (int) (short) 1);
        int[] intArray25 = new int[] {};
        List list26 = AppendPairProgram.listgen(intArray25);
        List list27 = AppendPairProgram.listgen(intArray25);
        List list28 = AppendPairProgram.listgen(intArray25);
        List list29 = AppendPairProgram.listgen(intArray25);
        List list30 = AppendPairProgram.listgen(intArray25);
        List list31 = AppendPairProgram.listgen(intArray25);
        List list32 = AppendPairProgram.listgen(intArray25);
        List list33 = AppendPairProgram.listgen(intArray25);
        List list34 = AppendPairProgram.listgen(intArray25);
        List list35 = AppendPairProgram.listgen(intArray25);
        List list36 = AppendPairProgram.listgen(intArray25);
        List list37 = AppendPairProgram.listgen(intArray25);
        List list38 = AppendPairProgram.listgen(intArray25);
        List list39 = AppendPairProgram.listgen(intArray25);
        appendPairProgram0.TestStudentSubmission(list39, (int) '#');
        int[] intArray42 = new int[] {};
        List list43 = AppendPairProgram.listgen(intArray42);
        List list44 = AppendPairProgram.listgen(intArray42);
        List list45 = AppendPairProgram.listgen(intArray42);
        List list46 = AppendPairProgram.listgen(intArray42);
        List list47 = AppendPairProgram.listgen(intArray42);
        List list48 = AppendPairProgram.listgen(intArray42);
        List list49 = AppendPairProgram.listgen(intArray42);
        List list50 = AppendPairProgram.listgen(intArray42);
        List list51 = AppendPairProgram.listgen(intArray42);
        appendPairProgram0.TestStudentSubmission(list51, (int) 'a');
        int[] intArray55 = new int[] { (byte) 10 };
        List list56 = AppendPairProgram.listgen(intArray55);
        List list57 = AppendPairProgram.listgen(intArray55);
        List list58 = AppendPairProgram.listgen(intArray55);
        appendPairProgram0.TestStudentSubmission(list58, (int) '4');
        List list61 = null;
        // The following exception was thrown during execution in test generation
        try {
            appendPairProgram0.TestStudentSubmission(list61, 0);
            org.junit.Assert.fail("Expected exception of type org.junit.AssumptionViolatedException; message: got: <false>, expected: is <true>");
        } catch (org.junit.AssumptionViolatedException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]");
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[10]");
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
    }

    @Test
    public void test0994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0994");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list2, (int) (short) 1);
        int[] intArray5 = new int[] {};
        List list6 = AppendPairProgram.listgen(intArray5);
        List list7 = AppendPairProgram.listgen(intArray5);
        List list8 = AppendPairProgram.listgen(intArray5);
        appendPairProgram0.TestStudentSubmission(list8, 0);
        int[] intArray11 = new int[] {};
        List list12 = AppendPairProgram.listgen(intArray11);
        List list13 = AppendPairProgram.listgen(intArray11);
        appendPairProgram0.TestStudentSubmission(list13, (int) '4');
        int[] intArray16 = new int[] {};
        List list17 = AppendPairProgram.listgen(intArray16);
        List list18 = AppendPairProgram.listgen(intArray16);
        List list19 = AppendPairProgram.listgen(intArray16);
        List list20 = AppendPairProgram.listgen(intArray16);
        List list21 = AppendPairProgram.listgen(intArray16);
        List list22 = AppendPairProgram.listgen(intArray16);
        List list23 = AppendPairProgram.listgen(intArray16);
        List list24 = AppendPairProgram.listgen(intArray16);
        List list25 = AppendPairProgram.listgen(intArray16);
        List list26 = AppendPairProgram.listgen(intArray16);
        appendPairProgram0.TestStudentSubmission(list26, (int) (byte) 1);
        int[] intArray29 = new int[] {};
        List list30 = AppendPairProgram.listgen(intArray29);
        List list31 = AppendPairProgram.listgen(intArray29);
        List list32 = AppendPairProgram.listgen(intArray29);
        List list33 = AppendPairProgram.listgen(intArray29);
        List list34 = AppendPairProgram.listgen(intArray29);
        List list35 = AppendPairProgram.listgen(intArray29);
        List list36 = AppendPairProgram.listgen(intArray29);
        List list37 = AppendPairProgram.listgen(intArray29);
        List list38 = AppendPairProgram.listgen(intArray29);
        List list39 = AppendPairProgram.listgen(intArray29);
        appendPairProgram0.TestStudentSubmission(list39, (-1));
        int[] intArray42 = new int[] {};
        List list43 = AppendPairProgram.listgen(intArray42);
        List list44 = AppendPairProgram.listgen(intArray42);
        List list45 = AppendPairProgram.listgen(intArray42);
        List list46 = AppendPairProgram.listgen(intArray42);
        List list47 = AppendPairProgram.listgen(intArray42);
        List list48 = AppendPairProgram.listgen(intArray42);
        appendPairProgram0.TestStudentSubmission(list48, (int) ' ');
        java.lang.Class<?> wildcardClass51 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]");
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[]");
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]");
        org.junit.Assert.assertNotNull(list43);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0995");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, (int) (byte) 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list10, (-1));
        int[] intArray13 = new int[] {};
        List list14 = AppendPairProgram.listgen(intArray13);
        List list15 = AppendPairProgram.listgen(intArray13);
        List list16 = AppendPairProgram.listgen(intArray13);
        List list17 = AppendPairProgram.listgen(intArray13);
        List list18 = AppendPairProgram.listgen(intArray13);
        List list19 = AppendPairProgram.listgen(intArray13);
        List list20 = AppendPairProgram.listgen(intArray13);
        List list21 = AppendPairProgram.listgen(intArray13);
        List list22 = AppendPairProgram.listgen(intArray13);
        List list23 = AppendPairProgram.listgen(intArray13);
        List list24 = AppendPairProgram.listgen(intArray13);
        List list25 = AppendPairProgram.listgen(intArray13);
        List list26 = AppendPairProgram.listgen(intArray13);
        List list27 = AppendPairProgram.listgen(intArray13);
        List list28 = AppendPairProgram.listgen(intArray13);
        List list29 = AppendPairProgram.listgen(intArray13);
        appendPairProgram0.TestStudentSubmission(list29, 0);
        java.lang.Class<?> wildcardClass32 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0996");
        int[] intArray2 = new int[] { (byte) 100, (short) 10 };
        List list3 = AppendPairProgram.listgen(intArray2);
        List list4 = AppendPairProgram.listgen(intArray2);
        List list5 = AppendPairProgram.listgen(intArray2);
        List list6 = AppendPairProgram.listgen(intArray2);
        java.lang.Class<?> wildcardClass7 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[100, 10]");
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0997");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list11, (int) (byte) 0);
        int[] intArray15 = new int[] { 0 };
        List list16 = AppendPairProgram.listgen(intArray15);
        List list17 = AppendPairProgram.listgen(intArray15);
        List list18 = AppendPairProgram.listgen(intArray15);
        List list19 = AppendPairProgram.listgen(intArray15);
        List list20 = AppendPairProgram.listgen(intArray15);
        appendPairProgram0.TestStudentSubmission(list20, (int) (byte) 10);
        java.lang.Class<?> wildcardClass23 = appendPairProgram0.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0]");
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0998");
        int[] intArray6 = new int[] { (byte) 0, (short) -1, ' ', 'a', (byte) 100, (byte) 10 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        List list25 = AppendPairProgram.listgen(intArray6);
        List list26 = AppendPairProgram.listgen(intArray6);
        List list27 = AppendPairProgram.listgen(intArray6);
        List list28 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass29 = list28.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, -1, 32, 97, 100, 10]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0999");
        int[] intArray6 = new int[] { (byte) 0, (short) -1, ' ', 'a', (byte) 100, (byte) 10 };
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        List list11 = AppendPairProgram.listgen(intArray6);
        List list12 = AppendPairProgram.listgen(intArray6);
        List list13 = AppendPairProgram.listgen(intArray6);
        List list14 = AppendPairProgram.listgen(intArray6);
        List list15 = AppendPairProgram.listgen(intArray6);
        List list16 = AppendPairProgram.listgen(intArray6);
        List list17 = AppendPairProgram.listgen(intArray6);
        List list18 = AppendPairProgram.listgen(intArray6);
        List list19 = AppendPairProgram.listgen(intArray6);
        List list20 = AppendPairProgram.listgen(intArray6);
        List list21 = AppendPairProgram.listgen(intArray6);
        List list22 = AppendPairProgram.listgen(intArray6);
        List list23 = AppendPairProgram.listgen(intArray6);
        List list24 = AppendPairProgram.listgen(intArray6);
        List list25 = AppendPairProgram.listgen(intArray6);
        List list26 = AppendPairProgram.listgen(intArray6);
        List list27 = AppendPairProgram.listgen(intArray6);
        java.lang.Class<?> wildcardClass28 = list27.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, -1, 32, 97, 100, 10]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test1000");
        AppendPairProgram appendPairProgram0 = new AppendPairProgram();
        int[] intArray1 = new int[] {};
        List list2 = AppendPairProgram.listgen(intArray1);
        List list3 = AppendPairProgram.listgen(intArray1);
        appendPairProgram0.TestStudentSubmission(list3, (int) (byte) 10);
        int[] intArray6 = new int[] {};
        List list7 = AppendPairProgram.listgen(intArray6);
        List list8 = AppendPairProgram.listgen(intArray6);
        List list9 = AppendPairProgram.listgen(intArray6);
        List list10 = AppendPairProgram.listgen(intArray6);
        appendPairProgram0.TestStudentSubmission(list10, (-1));
        int[] intArray13 = new int[] {};
        List list14 = AppendPairProgram.listgen(intArray13);
        List list15 = AppendPairProgram.listgen(intArray13);
        List list16 = AppendPairProgram.listgen(intArray13);
        List list17 = AppendPairProgram.listgen(intArray13);
        List list18 = AppendPairProgram.listgen(intArray13);
        List list19 = AppendPairProgram.listgen(intArray13);
        List list20 = AppendPairProgram.listgen(intArray13);
        appendPairProgram0.TestStudentSubmission(list20, (-1));
        int[] intArray23 = new int[] {};
        List list24 = AppendPairProgram.listgen(intArray23);
        List list25 = AppendPairProgram.listgen(intArray23);
        List list26 = AppendPairProgram.listgen(intArray23);
        List list27 = AppendPairProgram.listgen(intArray23);
        List list28 = AppendPairProgram.listgen(intArray23);
        List list29 = AppendPairProgram.listgen(intArray23);
        List list30 = AppendPairProgram.listgen(intArray23);
        List list31 = AppendPairProgram.listgen(intArray23);
        List list32 = AppendPairProgram.listgen(intArray23);
        List list33 = AppendPairProgram.listgen(intArray23);
        List list34 = AppendPairProgram.listgen(intArray23);
        List list35 = AppendPairProgram.listgen(intArray23);
        List list36 = AppendPairProgram.listgen(intArray23);
        List list37 = AppendPairProgram.listgen(intArray23);
        List list38 = AppendPairProgram.listgen(intArray23);
        List list39 = AppendPairProgram.listgen(intArray23);
        List list40 = AppendPairProgram.listgen(intArray23);
        appendPairProgram0.TestStudentSubmission(list40, (int) (short) 100);
        int[] intArray43 = new int[] {};
        List list44 = AppendPairProgram.listgen(intArray43);
        List list45 = AppendPairProgram.listgen(intArray43);
        List list46 = AppendPairProgram.listgen(intArray43);
        List list47 = AppendPairProgram.listgen(intArray43);
        List list48 = AppendPairProgram.listgen(intArray43);
        List list49 = AppendPairProgram.listgen(intArray43);
        List list50 = AppendPairProgram.listgen(intArray43);
        List list51 = AppendPairProgram.listgen(intArray43);
        List list52 = AppendPairProgram.listgen(intArray43);
        List list53 = AppendPairProgram.listgen(intArray43);
        List list54 = AppendPairProgram.listgen(intArray43);
        List list55 = AppendPairProgram.listgen(intArray43);
        List list56 = AppendPairProgram.listgen(intArray43);
        List list57 = AppendPairProgram.listgen(intArray43);
        List list58 = AppendPairProgram.listgen(intArray43);
        List list59 = AppendPairProgram.listgen(intArray43);
        appendPairProgram0.TestStudentSubmission(list59, (int) (byte) 0);
        java.lang.Class<?> wildcardClass62 = list59.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertNotNull(list2);
        org.junit.Assert.assertNotNull(list3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[]");
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }
}

