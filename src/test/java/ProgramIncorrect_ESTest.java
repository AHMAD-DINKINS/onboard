/*
 * This file was automatically generated by EvoSuite
 * Wed May 26 01:42:03 GMT 2021
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ProgramIncorrect_ESTest extends ProgramIncorrect_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      int[] intArray0 = new int[10];
      int int0 = ProgramIncorrect.findMax(intArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      int int0 = ProgramIncorrect.findMax(intArray0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = (-962);
      int int0 = ProgramIncorrect.findMax(intArray0);
      assertEquals((-962), int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        ProgramIncorrect.findMax((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ProgramIncorrect", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = 1389;
      int int0 = ProgramIncorrect.findMax(intArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      int[] intArray0 = new int[0];
      try { 
        ProgramIncorrect.findMax(intArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ProgramIncorrect", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ProgramIncorrect.main((String[]) null);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ProgramIncorrect programIncorrect0 = new ProgramIncorrect();
  }
}
