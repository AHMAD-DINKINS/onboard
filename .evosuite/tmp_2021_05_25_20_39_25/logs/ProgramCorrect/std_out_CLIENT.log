* Starting client
* Connecting to master process on port 20957
* Analyzing classpath: 
  - /home/ahmaddinkins/onoard/target/test-classes
  - /home/ahmaddinkins/onoard/target/classes
  - /root/.m2/repository/edu/berkeley/cs/jqf/jqf-fuzz/1.3/jqf-fuzz-1.3.jar
  - /root/.m2/repository/com/pholser/junit-quickcheck-core/0.8/junit-quickcheck-core-0.8.jar
  - /root/.m2/repository/org/javaruntype/javaruntype/1.3/javaruntype-1.3.jar
  - /root/.m2/repository/org/antlr/antlr-runtime/3.1.2/antlr-runtime-3.1.2.jar
  - /root/.m2/repository/ognl/ognl/3.1.12/ognl-3.1.12.jar
  - /root/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar
  - /root/.m2/repository/ru/vyarus/generics-resolver/2.0.1/generics-resolver-2.0.1.jar
  - /root/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar
  - /root/.m2/repository/edu/berkeley/cs/jqf/jqf-instrument/1.3/jqf-instrument-1.3.jar
  - /root/.m2/repository/org/ow2/asm/asm/6.2.1/asm-6.2.1.jar
  - /root/.m2/repository/org/jacoco/org.jacoco.report/0.8.2/org.jacoco.report-0.8.2.jar
  - /root/.m2/repository/org/jacoco/org.jacoco.core/0.8.2/org.jacoco.core-0.8.2.jar
  - /root/.m2/repository/org/ow2/asm/asm-commons/6.2.1/asm-commons-6.2.1.jar
  - /root/.m2/repository/org/ow2/asm/asm-analysis/6.2.1/asm-analysis-6.2.1.jar
  - /root/.m2/repository/org/ow2/asm/asm-tree/6.2.1/asm-tree-6.2.1.jar
  - /root/.m2/repository/info/picocli/picocli/4.0.4/picocli-4.0.4.jar
  - /root/.m2/repository/com/pholser/junit-quickcheck-generators/0.9/junit-quickcheck-generators-0.9.jar
  - /root/.m2/repository/junit/junit/4.12/junit-4.12.jar
  - /root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar
* Finished analyzing classpath
* Generating tests for class ProgramCorrect
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Loaded 9 tests from /home/ahmaddinkins/onoard/.evosuite/evosuite-seeds/ProgramCorrect.seed
* Total number of test goals: 
  - Line 11
  - Branch 8
  - Exception 0
  - MutationFactory 78
  - Output 3
  - Method 3
  - MethodNoException 3
  - CBranchFitnessFactory 8
* Using seed 1621993325375
* Starting evolution
* Search finished after 57s and 868 generations, 291661 statements, best individual has fitness: 1.3333333333333333
* Writing sequences to pool
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 97%
* Total number of goals: 78
* Number of covered goals: 76
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Generated 7 tests with total length 14
* Resulting test suite's coverage: 100% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 42%
* Compiling and checking tests
* Writing JUnit test case 'ProgramCorrect_ESTest' to /home/ahmaddinkins/onoard/.evosuite/tmp_2021_05_25_20_39_25/tests
* Done!

